{
	"id": "66f52a6f6b2ca14ffb778a44e2b5b109",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MiningContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\n\r\nimport \"../@trt-utils/TRTStrings.sol\";\r\nimport \"contracts/MiningContract.sol\";\r\nimport \"contracts/StakingContract.sol\";\r\n\r\ncontract MiningContract {\r\n    // token informations\r\n    uint256 public maxTokens;\r\n    uint256 public totalSupply;\r\n    string public symbol;\r\n    string public name;\r\n    uint8 public exchangeRate;\r\n\r\n    // mining informations\r\n    uint256 public blockNumber;\r\n    bytes32 public blockHash;\r\n    uint8 internal rewardRate = 1;\r\n\r\n    string public miningTask;\r\n    uint256 public miningRewards;\r\n\r\n    uint8 PREFIXLENGTH = 0;\r\n    bytes1 PREFIXHASHVALUE = 0x90;\r\n\r\n    event MiningRunning(\r\n        uint256 indexed minedBlockNumber,\r\n        bytes32 indexed blockHash,\r\n        string indexed miningTask\r\n    );\r\n    \r\n    event Mined(\r\n        address indexed miner,\r\n        uint256 indexed minedBlockNumber,\r\n        uint256 indexed rewards\r\n    );\r\n\r\n    // event TestNum(uint256 indexed blocke);\r\n    // event TestStr(string indexed blocke);\r\n    // event TestBytes32(bytes32 indexed input);\r\n\r\n    constructor(\r\n        uint8 exchRate,\r\n        uint256 maxTok,\r\n        string memory symb,\r\n        string memory nameGet,\r\n        uint256 totalSup\r\n    ) {\r\n        blockNumber = block.number;\r\n        blockHash = blockhash(blockNumber);\r\n        exchangeRate = exchRate;\r\n        maxTokens = maxTok;\r\n        symbol = symb; \r\n        name = nameGet; \r\n        totalSupply = totalSup;\r\n        miningTask = calculateMiningTask();\r\n\r\n        miningRewards = calculateMiningRewards(totalSupply);\r\n        emit MiningRunning(blockNumber, blockHash, miningTask);\r\n    }\r\n\r\n    function calculateMiningRewards(uint256 totalSup)view \r\n        private\r\n        returns (uint256)\r\n    {\r\n        uint256 rewards = Math.ceilDiv(totalSup, exchangeRate);\r\n        return rewards;\r\n    }\r\n\r\n    function calculateMiningTask()\r\n        private\r\n        view\r\n        returns (string memory calculatedTask)\r\n    {\r\n        uint256 newMaxTokens = totalSupply + miningRewards;\r\n        require(maxTokens >= newMaxTokens, \"Not enough tokens available.\");\r\n\r\n        // addition of maxTokens, EXCHANGERATE, totalSupply, symbol, name and your 'input'\r\n        string memory stringMaxTokens = Strings.toString(maxTokens);\r\n        string memory stringTotalSupply = Strings.toString(totalSupply);\r\n        string memory stringName = name;\r\n        string memory stringBlockHash = string(abi.encodePacked(blockHash));\r\n        string memory calcTask = string.concat(\r\n            stringName,\r\n            stringMaxTokens,\r\n            stringTotalSupply,\r\n            stringBlockHash\r\n        );\r\n        return calcTask;\r\n    }\r\n\r\n    function mineTokens(address miner, string memory input)\r\n        public\r\n        returns (bool, bytes32)\r\n    {\r\n        string memory mergedTask = string.concat(miningTask, input);\r\n\r\n        bytes32 mergedTaskHash = keccak256(abi.encode(mergedTask));\r\n        \r\n        for (uint8 i = 0; i <= 256/8; i++) {\r\n            // gets i-th byte of mergedTaskHash -> Hexadezimal -> 1/2 Byte\r\n            bytes1 prefixHash = mergedTaskHash[i];      \r\n            if (prefixHash == PREFIXHASHVALUE) {\r\n                emit Mined(miner, blockNumber, miningRewards);\r\n                return (true, mergedTaskHash);\r\n            }\r\n        }\r\n        return (false, mergedTaskHash);\r\n    }\r\n\r\n    function getRewards() public view returns (uint256) {\r\n        return miningRewards;\r\n    }\r\n\r\n    function getMiningTask() public view returns (string memory){\r\n        return miningTask;\r\n    }\r\n}\r\n"
			},
			"contracts/StakingContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"contracts/MiningContract.sol\";\r\n\r\n\r\ncontract StakingContract {\r\n    uint256 public totalStakes;\r\n    uint256 public totalRewards;\r\n    mapping(address => uint256) public stakers;\r\n    mapping(address => uint256) public rewards;\r\n    address[] public stakersAddresses;\r\n\r\n    // Events\r\n    event Staked(address indexed staker, uint256 amount);\r\n    event Unstaked(address indexed staker, uint256 amount);\r\n    event Rewarded(address indexed staker, uint256 amount);\r\n\r\n    constructor() {}\r\n\r\n    // functions for staking the tokens\r\n    function stake(address staker, uint256 amount) public {\r\n        require(amount > 0, \"Amount must be greater than 0\");\r\n        if (stakers[staker] < 1) {\r\n            stakersAddresses.push(staker);\r\n        }\r\n        stakers[staker] += amount;\r\n        totalStakes += amount;\r\n        emit Staked(staker, amount);\r\n    }\r\n\r\n    // functions for unstaking the tokens\r\n    function unstake(address staker, uint256 amount) public returns (bool) {\r\n        require(\r\n            totalStakes >= amount,\r\n            \"There are not enough coins in your staking pool.\"\r\n        );\r\n        require(stakers[staker] >= amount, \"Amount must be greater than 0.\");\r\n        stakers[staker] -= amount;\r\n        totalStakes -= amount;\r\n        emit Unstaked(staker, amount);\r\n        return true;\r\n    }\r\n\r\n    // distribute rewards\r\n    // function distributeRewards(uint256 amount) public {\r\n    //     require(totalStakes > 0, \"No stakes found\");\r\n\r\n    //     uint256 rewardPerToken = amount / totalStakes;\r\n    //     // for (uint256 i = 0; i < numberOfStakers; i++) {\r\n    //     //     uint256 reward = stakers[i] * rewardPerToken;\r\n    //     // }\r\n\r\n    //     // Aktualisierung der Belohnungen fÃ¼r jeden Staker\r\n    //     // for (uint256 i = 0; i < stakers.length; i++) {\r\n    //     //     address staker = stakers[i];\r\n    //     //     uint256 reward = stakes[staker] * rewardPerToken;\r\n    //     //     rewards[staker] += reward;\r\n    //     //     totalRewards += reward;\r\n    //     //     emit Rewarded(staker, reward);\r\n    //     // }\r\n    // }\r\n}\r\n"
			},
			"@trt-utils/TRTStrings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nlibrary TRTStrings {\r\n    function getCharByIndex(string memory _originString, uint8 index)\r\n        internal\r\n        pure\r\n        returns (string memory _charByIndex)\r\n    {\r\n        bytes memory charByte = new bytes(1);\r\n        charByte[index] = bytes(_originString)[index];\r\n        return string(charByte);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // â `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // â `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Nonces.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n Ã· 2 + 1, and for v in (302): v â {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`âs `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`âs approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`âs approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`âs approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`âs `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`âs approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`âs `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 338,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 340,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 342,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 344,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ERC20Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`âs `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 338,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 340,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 342,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 344,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1259,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol": {
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`âs `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 338,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 340,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 342,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 344,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2334,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 2336,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1196,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Nonces.sol": {
				"Nonces": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Provides tracking nonces for addresses. Nonces will only increment.",
						"errors": {
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the next unused nonce for an address."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1196,
								"contract": "@openzeppelin/contracts/utils/Nonces.sol:Nonces",
								"label": "_nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1259,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122069bc9e7a18eb14c733b6cc6defe1ae7bfe5c3e84e681b1e185a0faf46f1f9e1164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122069bc9e7a18eb14c733b6cc6defe1ae7bfe5c3e84e681b1e185a0faf46f1f9e1164736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xBC9E7A18EB14C733B6CC PUSH14 0xEFE1AE7BFE5C3E84E681B1E185A0 STATICCALL DELEGATECALL PUSH16 0x1F9E1164736F6C634300081900330000 ",
							"sourceMap": "1255:3053:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122069bc9e7a18eb14c733b6cc6defe1ae7bfe5c3e84e681b1e185a0faf46f1f9e1164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xBC9E7A18EB14C733B6CC PUSH14 0xEFE1AE7BFE5C3E84E681B1E185A0 STATICCALL DELEGATECALL PUSH16 0x1F9E1164736F6C634300081900330000 ",
							"sourceMap": "1255:3053:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122069bc9e7a18eb14c733b6cc6defe1ae7bfe5c3e84e681b1e185a0faf46f1f9e1164736f6c63430008190033",
									".code": [
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@trt-utils/TRTStrings.sol",
								"contracts/MiningContract.sol",
								"contracts/StakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0x1F PUSH31 0x6FFA154B5AB493A9AFE982EA25312076F3D20EFA211B038F476023B0EB6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1245:2685:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0x1F PUSH31 0x6FFA154B5AB493A9AFE982EA25312076F3D20EFA211B038F476023B0EB6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1245:2685:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220311f7e6ffa154b5ab493a9afe982ea25312076f3d20efa211b038f476023b0eb64736f6c63430008190033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@trt-utils/TRTStrings.sol",
								"contracts/MiningContract.sol",
								"contracts/StakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@trt-utils/TRTStrings.sol",
								"contracts/MiningContract.sol",
								"contracts/StakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122042adc2325372f37f74233eb75bb9277e4fbf9bcbc8c52d0efff98c93d099233a64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122042adc2325372f37f74233eb75bb9277e4fbf9bcbc8c52d0efff98c93d099233a64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xAD 0xC2 ORIGIN MSTORE8 PUSH19 0xF37F74233EB75BB9277E4FBF9BCBC8C52D0EFF 0xF9 DUP13 SWAP4 0xD0 SWAP10 0x23 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "344:7386:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122042adc2325372f37f74233eb75bb9277e4fbf9bcbc8c52d0efff98c93d099233a64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xAD 0xC2 ORIGIN MSTORE8 PUSH19 0xF37F74233EB75BB9277E4FBF9BCBC8C52D0EFF 0xF9 DUP13 SWAP4 0xD0 SWAP10 0x23 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "344:7386:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122042adc2325372f37f74233eb75bb9277e4fbf9bcbc8c52d0efff98c93d099233a64736f6c63430008190033",
									".code": [
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@trt-utils/TRTStrings.sol",
								"contracts/MiningContract.sol",
								"contracts/StakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2334,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 2336,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122068a95a45da580c5027c80bb0ad2adc7ce8d4a82ce9349fd310368d54fe58bf8c64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122068a95a45da580c5027c80bb0ad2adc7ce8d4a82ce9349fd310368d54fe58bf8c64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xA95A45DA580C5027C8 SIGNEXTEND 0xB0 0xAD 0x2A 0xDC PUSH29 0xE8D4A82CE9349FD310368D54FE58BF8C64736F6C634300081900330000 ",
							"sourceMap": "521:3235:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122068a95a45da580c5027c80bb0ad2adc7ce8d4a82ce9349fd310368d54fe58bf8c64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xA95A45DA580C5027C8 SIGNEXTEND 0xB0 0xAD 0x2A 0xDC PUSH29 0xE8D4A82CE9349FD310368D54FE58BF8C64736F6C634300081900330000 ",
							"sourceMap": "521:3235:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122068a95a45da580c5027c80bb0ad2adc7ce8d4a82ce9349fd310368d54fe58bf8c64736f6c63430008190033",
									".code": [
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@trt-utils/TRTStrings.sol",
								"contracts/MiningContract.sol",
								"contracts/StakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@trt-utils/TRTStrings.sol",
								"contracts/MiningContract.sol",
								"contracts/StakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:19:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@trt-utils/TRTStrings.sol",
								"contracts/MiningContract.sol",
								"contracts/StakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@trt-utils/TRTStrings.sol": {
				"TRTStrings": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@trt-utils/TRTStrings.sol\":61:384  library TRTStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@trt-utils/TRTStrings.sol\":61:384  library TRTStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cd3ecd382b1f300f47d0edad353796bc4ae76d09b3f4a6778199af0ed4bb104f64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cd3ecd382b1f300f47d0edad353796bc4ae76d09b3f4a6778199af0ed4bb104f64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD RETURNDATACOPY 0xCD CODESIZE 0x2B 0x1F ADDRESS 0xF SELFBALANCE 0xD0 0xED 0xAD CALLDATALOAD CALLDATACOPY SWAP7 0xBC BLOBBASEFEE 0xE7 PUSH14 0x9B3F4A6778199AF0ED4BB104F64 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "61:323:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cd3ecd382b1f300f47d0edad353796bc4ae76d09b3f4a6778199af0ed4bb104f64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD RETURNDATACOPY 0xCD CODESIZE 0x2B 0x1F ADDRESS 0xF SELFBALANCE 0xD0 0xED 0xAD CALLDATALOAD CALLDATACOPY SWAP7 0xBC BLOBBASEFEE 0xE7 PUSH14 0x9B3F4A6778199AF0ED4BB104F64 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "61:323:20:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getCharByIndex(string memory,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 384,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 384,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 384,
									"name": "PUSH",
									"source": 20,
									"value": "B"
								},
								{
									"begin": 61,
									"end": 384,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 384,
									"name": "BYTE",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 384,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 384,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "PUSH",
									"source": 20,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 384,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 384,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 384,
									"name": "PUSH",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 61,
									"end": 384,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "PUSH",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 61,
									"end": 384,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 384,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 384,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "ADDRESS",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 384,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 384,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "MSTORE8",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 61,
									"end": 384,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cd3ecd382b1f300f47d0edad353796bc4ae76d09b3f4a6778199af0ed4bb104f64736f6c63430008190033",
									".code": [
										{
											"begin": 61,
											"end": 384,
											"name": "PUSHDEPLOYADDRESS",
											"source": 20
										},
										{
											"begin": 61,
											"end": 384,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 61,
											"end": 384,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 61,
											"end": 384,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 384,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 384,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 61,
											"end": 384,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 384,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 61,
											"end": 384,
											"name": "REVERT",
											"source": 20
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@trt-utils/TRTStrings.sol",
								"contracts/MiningContract.sol",
								"contracts/StakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@trt-utils/TRTStrings.sol\":\"TRTStrings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@trt-utils/TRTStrings.sol\":{\"keccak256\":\"0xd8e62453a12988c284c296f504e661e85bcf28473a59204fb60db867ab920a3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eab2fd6003fecd776b6869c151862157fbee8e2d59efa78415a76c6381700c\",\"dweb:/ipfs/QmXG3yxccug87PAZQtCAc5zyVQhy1YVqrjcktLDKgxN3Ez\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MiningContract.sol": {
				"MiningContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "exchRate",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "maxTok",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "symb",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "nameGet",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSup",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "miner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "minedBlockNumber",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "rewards",
									"type": "uint256"
								}
							],
							"name": "Mined",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "minedBlockNumber",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "blockHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "miningTask",
									"type": "string"
								}
							],
							"name": "MiningRunning",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "blockHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "blockNumber",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exchangeRate",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMiningTask",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "miner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "input",
									"type": "string"
								}
							],
							"name": "mineTokens",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "miningRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "miningTask",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MiningContract.sol\":555:3963  contract MiningContract {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MiningContract.sol\":883:884  1 */\n  0x01\n    /* \"contracts/MiningContract.sol\":855:884  uint8 internal rewardRate = 1 */\n  0x07\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MiningContract.sol\":982:983  0 */\n  0x00\n    /* \"contracts/MiningContract.sol\":961:983  uint8 PREFIXLENGTH = 0 */\n  0x0a\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MiningContract.sol\":1015:1019  0x90 */\n  0x90\n    /* \"contracts/MiningContract.sol\":990:1019  bytes1 PREFIXHASHVALUE = 0x90 */\n  0xf8\n  shl\n  0x0a\n  exp(0x0100, 0x01)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xf8\n  shr\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MiningContract.sol\":1463:2031  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/MiningContract.sol\":1645:1657  block.number */\n  number\n    /* \"contracts/MiningContract.sol\":1631:1642  blockNumber */\n  0x05\n    /* \"contracts/MiningContract.sol\":1631:1657  blockNumber = block.number */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MiningContract.sol\":1690:1701  blockNumber */\n  sload(0x05)\n    /* \"contracts/MiningContract.sol\":1680:1702  blockhash(blockNumber) */\n  blockhash\n    /* \"contracts/MiningContract.sol\":1668:1677  blockHash */\n  0x06\n    /* \"contracts/MiningContract.sol\":1668:1702  blockHash = blockhash(blockNumber) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MiningContract.sol\":1728:1736  exchRate */\n  dup5\n    /* \"contracts/MiningContract.sol\":1713:1725  exchangeRate */\n  0x04\n  0x00\n    /* \"contracts/MiningContract.sol\":1713:1736  exchangeRate = exchRate */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MiningContract.sol\":1759:1765  maxTok */\n  dup4\n    /* \"contracts/MiningContract.sol\":1747:1756  maxTokens */\n  0x00\n    /* \"contracts/MiningContract.sol\":1747:1765  maxTokens = maxTok */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MiningContract.sol\":1785:1789  symb */\n  dup3\n    /* \"contracts/MiningContract.sol\":1776:1782  symbol */\n  0x02\n    /* \"contracts/MiningContract.sol\":1776:1789  symbol = symb */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/MiningContract.sol\":1808:1815  nameGet */\n  dup2\n    /* \"contracts/MiningContract.sol\":1801:1805  name */\n  0x03\n    /* \"contracts/MiningContract.sol\":1801:1815  name = nameGet */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/MiningContract.sol\":1841:1849  totalSup */\n  dup1\n    /* \"contracts/MiningContract.sol\":1827:1838  totalSupply */\n  0x01\n    /* \"contracts/MiningContract.sol\":1827:1849  totalSupply = totalSup */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MiningContract.sol\":1873:1894  calculateMiningTask() */\n  tag_9\n    /* \"contracts/MiningContract.sol\":1873:1892  calculateMiningTask */\n  shl(0x20, tag_10)\n    /* \"contracts/MiningContract.sol\":1873:1894  calculateMiningTask() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"contracts/MiningContract.sol\":1860:1870  miningTask */\n  0x08\n    /* \"contracts/MiningContract.sol\":1860:1894  miningTask = calculateMiningTask() */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/MiningContract.sol\":1923:1958  calculateMiningRewards(totalSupply) */\n  tag_12\n    /* \"contracts/MiningContract.sol\":1946:1957  totalSupply */\n  sload(0x01)\n    /* \"contracts/MiningContract.sol\":1923:1945  calculateMiningRewards */\n  shl(0x20, tag_13)\n    /* \"contracts/MiningContract.sol\":1923:1958  calculateMiningRewards(totalSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/MiningContract.sol\":1907:1920  miningRewards */\n  0x09\n    /* \"contracts/MiningContract.sol\":1907:1958  miningRewards = calculateMiningRewards(totalSupply) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MiningContract.sol\":2012:2022  miningTask */\n  0x08\n    /* \"contracts/MiningContract.sol\":1974:2023  MiningRunning(blockNumber, blockHash, miningTask) */\n  mload(0x40)\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"contracts/MiningContract.sol\":2001:2010  blockHash */\n  sload(0x06)\n    /* \"contracts/MiningContract.sol\":1988:1999  blockNumber */\n  sload(0x05)\n    /* \"contracts/MiningContract.sol\":1974:2023  MiningRunning(blockNumber, blockHash, miningTask) */\n  0x9f4da1eb02e98b4ab1d9b713f225d0f993b2222a21852024e9d90204be64706a\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"contracts/MiningContract.sol\":1463:2031  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/MiningContract.sol\":555:3963  contract MiningContract {... */\n  jump(tag_16)\n    /* \"contracts/MiningContract.sol\":2249:3071  function calculateMiningTask()... */\ntag_10:\n    /* \"contracts/MiningContract.sol\":2329:2357  string memory calculatedTask */\n  0x60\n    /* \"contracts/MiningContract.sol\":2375:2395  uint256 newMaxTokens */\n  0x00\n    /* \"contracts/MiningContract.sol\":2412:2425  miningRewards */\n  sload(0x09)\n    /* \"contracts/MiningContract.sol\":2398:2409  totalSupply */\n  sload(0x01)\n    /* \"contracts/MiningContract.sol\":2398:2425  totalSupply + miningRewards */\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"contracts/MiningContract.sol\":2375:2425  uint256 newMaxTokens = totalSupply + miningRewards */\n  swap1\n  pop\n    /* \"contracts/MiningContract.sol\":2457:2469  newMaxTokens */\n  dup1\n    /* \"contracts/MiningContract.sol\":2444:2453  maxTokens */\n  sload(0x00)\n    /* \"contracts/MiningContract.sol\":2444:2469  maxTokens >= newMaxTokens */\n  lt\n  iszero\n    /* \"contracts/MiningContract.sol\":2436:2502  require(maxTokens >= newMaxTokens, \"Not enough tokens available.\") */\n  tag_20\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_21\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_20:\n    /* \"contracts/MiningContract.sol\":2607:2636  string memory stringMaxTokens */\n  0x00\n    /* \"contracts/MiningContract.sol\":2639:2666  Strings.toString(maxTokens) */\n  tag_23\n    /* \"contracts/MiningContract.sol\":2656:2665  maxTokens */\n  sload(0x00)\n    /* \"contracts/MiningContract.sol\":2639:2655  Strings.toString */\n  shl(0x20, tag_24)\n    /* \"contracts/MiningContract.sol\":2639:2666  Strings.toString(maxTokens) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"contracts/MiningContract.sol\":2607:2666  string memory stringMaxTokens = Strings.toString(maxTokens) */\n  swap1\n  pop\n    /* \"contracts/MiningContract.sol\":2677:2708  string memory stringTotalSupply */\n  0x00\n    /* \"contracts/MiningContract.sol\":2711:2740  Strings.toString(totalSupply) */\n  tag_25\n    /* \"contracts/MiningContract.sol\":2728:2739  totalSupply */\n  sload(0x01)\n    /* \"contracts/MiningContract.sol\":2711:2727  Strings.toString */\n  shl(0x20, tag_24)\n    /* \"contracts/MiningContract.sol\":2711:2740  Strings.toString(totalSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"contracts/MiningContract.sol\":2677:2740  string memory stringTotalSupply = Strings.toString(totalSupply) */\n  swap1\n  pop\n    /* \"contracts/MiningContract.sol\":2751:2775  string memory stringName */\n  0x00\n    /* \"contracts/MiningContract.sol\":2778:2782  name */\n  0x03\n    /* \"contracts/MiningContract.sol\":2751:2782  string memory stringName = name */\n  dup1\n  sload\n  tag_26\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  dup1\n  0x1f\n  add\n  0x20\n  dup1\n  swap2\n  div\n  mul\n  0x20\n  add\n  mload(0x40)\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  swap3\n  swap2\n  swap1\n  dup2\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  dup1\n  sload\n  tag_28\n  swap1\n  tag_27\n  jump\t// in\ntag_28:\n  dup1\n  iszero\n  tag_29\n  jumpi\n  dup1\n  0x1f\n  lt\n  tag_30\n  jumpi\n  0x0100\n  dup1\n  dup4\n  sload\n  div\n  mul\n  dup4\n  mstore\n  swap2\n  0x20\n  add\n  swap2\n  jump(tag_29)\ntag_30:\n  dup3\n  add\n  swap2\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\ntag_31:\n  dup2\n  sload\n  dup2\n  mstore\n  swap1\n  0x01\n  add\n  swap1\n  0x20\n  add\n  dup1\n  dup4\n  gt\n  tag_31\n  jumpi\n  dup3\n  swap1\n  sub\n  0x1f\n  and\n  dup3\n  add\n  swap2\ntag_29:\n  pop\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n    /* \"contracts/MiningContract.sol\":2793:2822  string memory stringBlockHash */\n  0x00\n    /* \"contracts/MiningContract.sol\":2849:2858  blockHash */\n  sload(0x06)\n    /* \"contracts/MiningContract.sol\":2832:2859  abi.encodePacked(blockHash) */\n  add(0x20, mload(0x40))\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"contracts/MiningContract.sol\":2793:2860  string memory stringBlockHash = string(abi.encodePacked(blockHash)) */\n  swap1\n  pop\n    /* \"contracts/MiningContract.sol\":2871:2893  string memory calcTask */\n  0x00\n    /* \"contracts/MiningContract.sol\":2924:2934  stringName */\n  dup3\n    /* \"contracts/MiningContract.sol\":2949:2964  stringMaxTokens */\n  dup6\n    /* \"contracts/MiningContract.sol\":2979:2996  stringTotalSupply */\n  dup6\n    /* \"contracts/MiningContract.sol\":3011:3026  stringBlockHash */\n  dup5\n    /* \"contracts/MiningContract.sol\":2896:3037  string.concat(... */\n  add(0x20, mload(0x40))\n  tag_34\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"contracts/MiningContract.sol\":2871:3037  string memory calcTask = string.concat(... */\n  swap1\n  pop\n    /* \"contracts/MiningContract.sol\":3055:3063  calcTask */\n  dup1\n    /* \"contracts/MiningContract.sol\":3048:3063  return calcTask */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/MiningContract.sol\":2249:3071  function calculateMiningTask()... */\n  swap1\n  jump\t// out\n    /* \"contracts/MiningContract.sol\":2039:2241  function calculateMiningRewards(uint256 totalSup)view ... */\ntag_13:\n    /* \"contracts/MiningContract.sol\":2129:2136  uint256 */\n  0x00\n    /* \"contracts/MiningContract.sol\":2154:2169  uint256 rewards */\n  dup1\n    /* \"contracts/MiningContract.sol\":2172:2208  Math.ceilDiv(totalSup, exchangeRate) */\n  tag_37\n    /* \"contracts/MiningContract.sol\":2185:2193  totalSup */\n  dup4\n    /* \"contracts/MiningContract.sol\":2195:2207  exchangeRate */\n  0x04\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/MiningContract.sol\":2172:2208  Math.ceilDiv(totalSup, exchangeRate) */\n  0xff\n  and\n    /* \"contracts/MiningContract.sol\":2172:2184  Math.ceilDiv */\n  shl(0x20, tag_38)\n    /* \"contracts/MiningContract.sol\":2172:2208  Math.ceilDiv(totalSup, exchangeRate) */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"contracts/MiningContract.sol\":2154:2208  uint256 rewards = Math.ceilDiv(totalSup, exchangeRate) */\n  swap1\n  pop\n    /* \"contracts/MiningContract.sol\":2226:2233  rewards */\n  dup1\n    /* \"contracts/MiningContract.sol\":2219:2233  return rewards */\n  swap2\n  pop\n  pop\n    /* \"contracts/MiningContract.sol\":2039:2241  function calculateMiningRewards(uint256 totalSup)view ... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n  tag_40\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n  shl(0x20, tag_41)\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n  0x20\n  shr\n  jump\t// in\ntag_40:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n  add\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n  0xffffffffffffffff\n  dup2\n  gt\n  iszero\n  tag_42\n  jumpi\n  tag_43\n  tag_44\n  jump\t// in\ntag_43:\ntag_42:\n  mload(0x40)\n  swap1\n  dup1\n  dup3\n  mstore\n  dup1\n  0x1f\n  add\n  not(0x1f)\n  and\n  0x20\n  add\n  dup3\n  add\n  0x40\n  mstore\n  dup1\n  iszero\n  tag_45\n  jumpi\n  dup2\n  0x20\n  add\n  0x01\n  dup3\n  mul\n  dup1\n  calldatasize\n  dup4\n  calldatacopy\n  dup1\n  dup3\n  add\n  swap2\n  pop\n  pop\n  swap1\n  pop\ntag_45:\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n  add\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n  add\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\ntag_46:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n  0x01\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n  iszero\n  tag_47\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n  dup1\n  dup1\n  0x01\n  swap1\n  sub\n  swap2\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n  0x3031323334353637383961626364656600000000000000000000000000000000\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n  0x0a\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n  dup7\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n  mod\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n  byte\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n  mstore8\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n  0x0a\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n  dup6\n  dup2\n  tag_48\n  jumpi\n  tag_49\n  tag_50\n  jump\t// in\ntag_49:\ntag_48:\n  div\n  swap5\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n  dup6\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n  sub\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n  tag_46\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\ntag_47:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n  swap4\n  pop\n  pop\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3148:3479  function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3210:3217  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3238:3239  0 */\n  dup1\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3233:3234  b */\n  dup3\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3233:3239  b == 0 */\n  sub\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3229:3356  if (b == 0) {... */\n  tag_53\n  jumpi\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3344:3345  b */\n  dup2\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3340:3341  a */\n  dup4\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3340:3345  a / b */\n  tag_54\n  swap2\n  swap1\n  tag_55\n  jump\t// in\ntag_54:\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3333:3345  return a / b */\n  swap1\n  pop\n  jump(tag_52)\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3229:3356  if (b == 0) {... */\ntag_53:\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3449:3450  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3444:3445  a */\n  dup4\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3444:3450  a == 0 */\n  eq\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3444:3472  a == 0 ? 0 : (a - 1) / b + 1 */\n  tag_56\n  jumpi\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3471:3472  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3467:3468  b */\n  dup3\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3462:3463  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3458:3459  a */\n  dup6\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3458:3463  a - 1 */\n  tag_57\n  swap2\n  swap1\n  tag_58\n  jump\t// in\ntag_57:\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3457:3468  (a - 1) / b */\n  tag_59\n  swap2\n  swap1\n  tag_55\n  jump\t// in\ntag_59:\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3457:3472  (a - 1) / b + 1 */\n  tag_60\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_60:\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3444:3472  a == 0 ? 0 : (a - 1) / b + 1 */\n  jump(tag_61)\ntag_56:\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3453:3454  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3444:3472  a == 0 ? 0 : (a - 1) / b + 1 */\ntag_61:\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3437:3472  return a == 0 ? 0 : (a - 1) / b + 1 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":3148:3479  function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_52:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n  dup1\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n  0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n  lt\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n  tag_63\n  jumpi\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n  0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n  dup4\n  dup2\n  tag_64\n  jumpi\n  tag_65\n  tag_50\n  jump\t// in\ntag_65:\ntag_64:\n  div\n  swap3\n  pop\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n  0x40\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n  dup2\n  add\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\ntag_63:\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n  0x04ee2d6d415b85acef8100000000\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n  lt\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n  tag_66\n  jumpi\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n  0x04ee2d6d415b85acef8100000000\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n  dup4\n  dup2\n  tag_67\n  jumpi\n  tag_68\n  tag_50\n  jump\t// in\ntag_68:\ntag_67:\n  div\n  swap3\n  pop\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n  dup2\n  add\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\ntag_66:\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n  0x2386f26fc10000\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n  lt\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n  tag_69\n  jumpi\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n  0x2386f26fc10000\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n  dup4\n  dup2\n  tag_70\n  jumpi\n  tag_71\n  tag_50\n  jump\t// in\ntag_71:\ntag_70:\n  div\n  swap3\n  pop\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n  0x10\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n  dup2\n  add\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\ntag_69:\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n  0x05f5e100\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n  lt\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n  tag_72\n  jumpi\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n  0x05f5e100\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n  dup4\n  dup2\n  tag_73\n  jumpi\n  tag_74\n  tag_50\n  jump\t// in\ntag_74:\ntag_73:\n  div\n  swap3\n  pop\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n  0x08\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n  dup2\n  add\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\ntag_72:\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n  0x2710\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n  lt\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n  tag_75\n  jumpi\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n  0x2710\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n  dup4\n  dup2\n  tag_76\n  jumpi\n  tag_77\n  tag_50\n  jump\t// in\ntag_77:\ntag_76:\n  div\n  swap3\n  pop\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n  0x04\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n  dup2\n  add\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\ntag_75:\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n  0x64\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n  lt\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n  tag_78\n  jumpi\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n  0x64\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n  dup4\n  dup2\n  tag_79\n  jumpi\n  tag_80\n  tag_50\n  jump\t// in\ntag_80:\ntag_79:\n  div\n  swap3\n  pop\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n  0x02\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n  dup2\n  add\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\ntag_78:\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n  0x0a\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n  lt\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n  tag_81\n  jumpi\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n  dup2\n  add\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\ntag_81:\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n  dup1\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n  swap2\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_82:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_83:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_84:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:420   */\ntag_85:\n    /* \"#utility.yul\":369:376   */\n  0x00\n    /* \"#utility.yul\":409:413   */\n  0xff\n    /* \"#utility.yul\":402:407   */\n  dup3\n    /* \"#utility.yul\":398:414   */\n  and\n    /* \"#utility.yul\":387:414   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:420   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":426:544   */\ntag_86:\n    /* \"#utility.yul\":497:519   */\n  tag_133\n    /* \"#utility.yul\":513:518   */\n  dup2\n    /* \"#utility.yul\":497:519   */\n  tag_85\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":490:495   */\n  dup2\n    /* \"#utility.yul\":487:520   */\n  eq\n    /* \"#utility.yul\":477:538   */\n  tag_134\n  jumpi\n    /* \"#utility.yul\":534:535   */\n  0x00\n    /* \"#utility.yul\":531:532   */\n  dup1\n    /* \"#utility.yul\":524:536   */\n  revert\n    /* \"#utility.yul\":477:538   */\ntag_134:\n    /* \"#utility.yul\":426:544   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":550:689   */\ntag_87:\n    /* \"#utility.yul\":605:610   */\n  0x00\n    /* \"#utility.yul\":636:642   */\n  dup2\n    /* \"#utility.yul\":630:643   */\n  mload\n    /* \"#utility.yul\":621:643   */\n  swap1\n  pop\n    /* \"#utility.yul\":652:683   */\n  tag_136\n    /* \"#utility.yul\":677:682   */\n  dup2\n    /* \"#utility.yul\":652:683   */\n  tag_86\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":550:689   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":695:772   */\ntag_88:\n    /* \"#utility.yul\":732:739   */\n  0x00\n    /* \"#utility.yul\":761:766   */\n  dup2\n    /* \"#utility.yul\":750:766   */\n  swap1\n  pop\n    /* \"#utility.yul\":695:772   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":778:900   */\ntag_89:\n    /* \"#utility.yul\":851:875   */\n  tag_139\n    /* \"#utility.yul\":869:874   */\n  dup2\n    /* \"#utility.yul\":851:875   */\n  tag_88\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":844:849   */\n  dup2\n    /* \"#utility.yul\":841:876   */\n  eq\n    /* \"#utility.yul\":831:894   */\n  tag_140\n  jumpi\n    /* \"#utility.yul\":890:891   */\n  0x00\n    /* \"#utility.yul\":887:888   */\n  dup1\n    /* \"#utility.yul\":880:892   */\n  revert\n    /* \"#utility.yul\":831:894   */\ntag_140:\n    /* \"#utility.yul\":778:900   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":906:1049   */\ntag_90:\n    /* \"#utility.yul\":963:968   */\n  0x00\n    /* \"#utility.yul\":994:1000   */\n  dup2\n    /* \"#utility.yul\":988:1001   */\n  mload\n    /* \"#utility.yul\":979:1001   */\n  swap1\n  pop\n    /* \"#utility.yul\":1010:1043   */\n  tag_142\n    /* \"#utility.yul\":1037:1042   */\n  dup2\n    /* \"#utility.yul\":1010:1043   */\n  tag_89\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":906:1049   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1055:1172   */\ntag_91:\n    /* \"#utility.yul\":1164:1165   */\n  0x00\n    /* \"#utility.yul\":1161:1162   */\n  dup1\n    /* \"#utility.yul\":1154:1166   */\n  revert\n    /* \"#utility.yul\":1178:1295   */\ntag_92:\n    /* \"#utility.yul\":1287:1288   */\n  0x00\n    /* \"#utility.yul\":1284:1285   */\n  dup1\n    /* \"#utility.yul\":1277:1289   */\n  revert\n    /* \"#utility.yul\":1301:1403   */\ntag_93:\n    /* \"#utility.yul\":1342:1348   */\n  0x00\n    /* \"#utility.yul\":1393:1395   */\n  0x1f\n    /* \"#utility.yul\":1389:1396   */\n  not\n    /* \"#utility.yul\":1384:1386   */\n  0x1f\n    /* \"#utility.yul\":1377:1382   */\n  dup4\n    /* \"#utility.yul\":1373:1387   */\n  add\n    /* \"#utility.yul\":1369:1397   */\n  and\n    /* \"#utility.yul\":1359:1397   */\n  swap1\n  pop\n    /* \"#utility.yul\":1301:1403   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1409:1589   */\ntag_44:\n    /* \"#utility.yul\":1457:1534   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1454:1455   */\n  0x00\n    /* \"#utility.yul\":1447:1535   */\n  mstore\n    /* \"#utility.yul\":1554:1558   */\n  0x41\n    /* \"#utility.yul\":1551:1552   */\n  0x04\n    /* \"#utility.yul\":1544:1559   */\n  mstore\n    /* \"#utility.yul\":1578:1582   */\n  0x24\n    /* \"#utility.yul\":1575:1576   */\n  0x00\n    /* \"#utility.yul\":1568:1583   */\n  revert\n    /* \"#utility.yul\":1595:1876   */\ntag_94:\n    /* \"#utility.yul\":1678:1705   */\n  tag_148\n    /* \"#utility.yul\":1700:1704   */\n  dup3\n    /* \"#utility.yul\":1678:1705   */\n  tag_93\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":1670:1676   */\n  dup2\n    /* \"#utility.yul\":1666:1706   */\n  add\n    /* \"#utility.yul\":1808:1814   */\n  dup2\n    /* \"#utility.yul\":1796:1806   */\n  dup2\n    /* \"#utility.yul\":1793:1815   */\n  lt\n    /* \"#utility.yul\":1772:1790   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1760:1770   */\n  dup3\n    /* \"#utility.yul\":1757:1791   */\n  gt\n    /* \"#utility.yul\":1754:1816   */\n  or\n    /* \"#utility.yul\":1751:1839   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":1819:1837   */\n  tag_150\n  tag_44\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":1751:1839   */\ntag_149:\n    /* \"#utility.yul\":1859:1869   */\n  dup1\n    /* \"#utility.yul\":1855:1857   */\n  0x40\n    /* \"#utility.yul\":1848:1870   */\n  mstore\n    /* \"#utility.yul\":1638:1876   */\n  pop\n    /* \"#utility.yul\":1595:1876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1882:2011   */\ntag_95:\n    /* \"#utility.yul\":1916:1922   */\n  0x00\n    /* \"#utility.yul\":1943:1963   */\n  tag_152\n  tag_82\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":1933:1963   */\n  swap1\n  pop\n    /* \"#utility.yul\":1972:2005   */\n  tag_153\n    /* \"#utility.yul\":2000:2004   */\n  dup3\n    /* \"#utility.yul\":1992:1998   */\n  dup3\n    /* \"#utility.yul\":1972:2005   */\n  tag_94\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":1882:2011   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2017:2325   */\ntag_96:\n    /* \"#utility.yul\":2079:2083   */\n  0x00\n    /* \"#utility.yul\":2169:2187   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2161:2167   */\n  dup3\n    /* \"#utility.yul\":2158:2188   */\n  gt\n    /* \"#utility.yul\":2155:2211   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":2191:2209   */\n  tag_156\n  tag_44\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":2155:2211   */\ntag_155:\n    /* \"#utility.yul\":2229:2258   */\n  tag_157\n    /* \"#utility.yul\":2251:2257   */\n  dup3\n    /* \"#utility.yul\":2229:2258   */\n  tag_93\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":2221:2258   */\n  swap1\n  pop\n    /* \"#utility.yul\":2313:2317   */\n  0x20\n    /* \"#utility.yul\":2307:2311   */\n  dup2\n    /* \"#utility.yul\":2303:2318   */\n  add\n    /* \"#utility.yul\":2295:2318   */\n  swap1\n  pop\n    /* \"#utility.yul\":2017:2325   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2331:2470   */\ntag_97:\n    /* \"#utility.yul\":2420:2426   */\n  dup3\n    /* \"#utility.yul\":2415:2418   */\n  dup2\n    /* \"#utility.yul\":2410:2413   */\n  dup4\n    /* \"#utility.yul\":2404:2427   */\n  mcopy\n    /* \"#utility.yul\":2461:2462   */\n  0x00\n    /* \"#utility.yul\":2452:2458   */\n  dup4\n    /* \"#utility.yul\":2447:2450   */\n  dup4\n    /* \"#utility.yul\":2443:2459   */\n  add\n    /* \"#utility.yul\":2436:2463   */\n  mstore\n    /* \"#utility.yul\":2331:2470   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2476:2910   */\ntag_98:\n    /* \"#utility.yul\":2565:2570   */\n  0x00\n    /* \"#utility.yul\":2590:2656   */\n  tag_160\n    /* \"#utility.yul\":2606:2655   */\n  tag_161\n    /* \"#utility.yul\":2648:2654   */\n  dup5\n    /* \"#utility.yul\":2606:2655   */\n  tag_96\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":2590:2656   */\n  tag_95\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":2581:2656   */\n  swap1\n  pop\n    /* \"#utility.yul\":2679:2685   */\n  dup3\n    /* \"#utility.yul\":2672:2677   */\n  dup2\n    /* \"#utility.yul\":2665:2686   */\n  mstore\n    /* \"#utility.yul\":2717:2721   */\n  0x20\n    /* \"#utility.yul\":2710:2715   */\n  dup2\n    /* \"#utility.yul\":2706:2722   */\n  add\n    /* \"#utility.yul\":2755:2758   */\n  dup5\n    /* \"#utility.yul\":2746:2752   */\n  dup5\n    /* \"#utility.yul\":2741:2744   */\n  dup5\n    /* \"#utility.yul\":2737:2753   */\n  add\n    /* \"#utility.yul\":2734:2759   */\n  gt\n    /* \"#utility.yul\":2731:2843   */\n  iszero\n  tag_162\n  jumpi\n    /* \"#utility.yul\":2762:2841   */\n  tag_163\n  tag_92\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":2731:2843   */\ntag_162:\n    /* \"#utility.yul\":2852:2904   */\n  tag_164\n    /* \"#utility.yul\":2897:2903   */\n  dup5\n    /* \"#utility.yul\":2892:2895   */\n  dup3\n    /* \"#utility.yul\":2887:2890   */\n  dup6\n    /* \"#utility.yul\":2852:2904   */\n  tag_97\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":2571:2910   */\n  pop\n    /* \"#utility.yul\":2476:2910   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2930:3285   */\ntag_99:\n    /* \"#utility.yul\":2997:3002   */\n  0x00\n    /* \"#utility.yul\":3046:3049   */\n  dup3\n    /* \"#utility.yul\":3039:3043   */\n  0x1f\n    /* \"#utility.yul\":3031:3037   */\n  dup4\n    /* \"#utility.yul\":3027:3044   */\n  add\n    /* \"#utility.yul\":3023:3050   */\n  slt\n    /* \"#utility.yul\":3013:3135   */\n  tag_166\n  jumpi\n    /* \"#utility.yul\":3054:3133   */\n  tag_167\n  tag_91\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":3013:3135   */\ntag_166:\n    /* \"#utility.yul\":3164:3170   */\n  dup2\n    /* \"#utility.yul\":3158:3171   */\n  mload\n    /* \"#utility.yul\":3189:3279   */\n  tag_168\n    /* \"#utility.yul\":3275:3278   */\n  dup5\n    /* \"#utility.yul\":3267:3273   */\n  dup3\n    /* \"#utility.yul\":3260:3264   */\n  0x20\n    /* \"#utility.yul\":3252:3258   */\n  dup7\n    /* \"#utility.yul\":3248:3265   */\n  add\n    /* \"#utility.yul\":3189:3279   */\n  tag_98\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":3180:3279   */\n  swap2\n  pop\n    /* \"#utility.yul\":3003:3285   */\n  pop\n    /* \"#utility.yul\":2930:3285   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3291:4610   */\ntag_3:\n    /* \"#utility.yul\":3415:3421   */\n  0x00\n    /* \"#utility.yul\":3423:3429   */\n  dup1\n    /* \"#utility.yul\":3431:3437   */\n  0x00\n    /* \"#utility.yul\":3439:3445   */\n  dup1\n    /* \"#utility.yul\":3447:3453   */\n  0x00\n    /* \"#utility.yul\":3496:3499   */\n  0xa0\n    /* \"#utility.yul\":3484:3493   */\n  dup7\n    /* \"#utility.yul\":3475:3482   */\n  dup9\n    /* \"#utility.yul\":3471:3494   */\n  sub\n    /* \"#utility.yul\":3467:3500   */\n  slt\n    /* \"#utility.yul\":3464:3584   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":3503:3582   */\n  tag_171\n  tag_83\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":3464:3584   */\ntag_170:\n    /* \"#utility.yul\":3623:3624   */\n  0x00\n    /* \"#utility.yul\":3648:3710   */\n  tag_172\n    /* \"#utility.yul\":3702:3709   */\n  dup9\n    /* \"#utility.yul\":3693:3699   */\n  dup3\n    /* \"#utility.yul\":3682:3691   */\n  dup10\n    /* \"#utility.yul\":3678:3700   */\n  add\n    /* \"#utility.yul\":3648:3710   */\n  tag_87\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":3638:3710   */\n  swap6\n  pop\n    /* \"#utility.yul\":3594:3720   */\n  pop\n    /* \"#utility.yul\":3759:3761   */\n  0x20\n    /* \"#utility.yul\":3785:3849   */\n  tag_173\n    /* \"#utility.yul\":3841:3848   */\n  dup9\n    /* \"#utility.yul\":3832:3838   */\n  dup3\n    /* \"#utility.yul\":3821:3830   */\n  dup10\n    /* \"#utility.yul\":3817:3839   */\n  add\n    /* \"#utility.yul\":3785:3849   */\n  tag_90\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":3775:3849   */\n  swap5\n  pop\n    /* \"#utility.yul\":3730:3859   */\n  pop\n    /* \"#utility.yul\":3919:3921   */\n  0x40\n    /* \"#utility.yul\":3908:3917   */\n  dup7\n    /* \"#utility.yul\":3904:3922   */\n  add\n    /* \"#utility.yul\":3898:3923   */\n  mload\n    /* \"#utility.yul\":3950:3968   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3942:3948   */\n  dup2\n    /* \"#utility.yul\":3939:3969   */\n  gt\n    /* \"#utility.yul\":3936:4053   */\n  iszero\n  tag_174\n  jumpi\n    /* \"#utility.yul\":3972:4051   */\n  tag_175\n  tag_84\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":3936:4053   */\ntag_174:\n    /* \"#utility.yul\":4077:4151   */\n  tag_176\n    /* \"#utility.yul\":4143:4150   */\n  dup9\n    /* \"#utility.yul\":4134:4140   */\n  dup3\n    /* \"#utility.yul\":4123:4132   */\n  dup10\n    /* \"#utility.yul\":4119:4141   */\n  add\n    /* \"#utility.yul\":4077:4151   */\n  tag_99\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":4067:4151   */\n  swap4\n  pop\n    /* \"#utility.yul\":3869:4161   */\n  pop\n    /* \"#utility.yul\":4221:4223   */\n  0x60\n    /* \"#utility.yul\":4210:4219   */\n  dup7\n    /* \"#utility.yul\":4206:4224   */\n  add\n    /* \"#utility.yul\":4200:4225   */\n  mload\n    /* \"#utility.yul\":4252:4270   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4244:4250   */\n  dup2\n    /* \"#utility.yul\":4241:4271   */\n  gt\n    /* \"#utility.yul\":4238:4355   */\n  iszero\n  tag_177\n  jumpi\n    /* \"#utility.yul\":4274:4353   */\n  tag_178\n  tag_84\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":4238:4355   */\ntag_177:\n    /* \"#utility.yul\":4379:4453   */\n  tag_179\n    /* \"#utility.yul\":4445:4452   */\n  dup9\n    /* \"#utility.yul\":4436:4442   */\n  dup3\n    /* \"#utility.yul\":4425:4434   */\n  dup10\n    /* \"#utility.yul\":4421:4443   */\n  add\n    /* \"#utility.yul\":4379:4453   */\n  tag_99\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":4369:4453   */\n  swap3\n  pop\n    /* \"#utility.yul\":4171:4463   */\n  pop\n    /* \"#utility.yul\":4502:4505   */\n  0x80\n    /* \"#utility.yul\":4529:4593   */\n  tag_180\n    /* \"#utility.yul\":4585:4592   */\n  dup9\n    /* \"#utility.yul\":4576:4582   */\n  dup3\n    /* \"#utility.yul\":4565:4574   */\n  dup10\n    /* \"#utility.yul\":4561:4583   */\n  add\n    /* \"#utility.yul\":4529:4593   */\n  tag_90\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":4519:4593   */\n  swap2\n  pop\n    /* \"#utility.yul\":4473:4603   */\n  pop\n    /* \"#utility.yul\":3291:4610   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4616:4715   */\ntag_100:\n    /* \"#utility.yul\":4668:4674   */\n  0x00\n    /* \"#utility.yul\":4702:4707   */\n  dup2\n    /* \"#utility.yul\":4696:4708   */\n  mload\n    /* \"#utility.yul\":4686:4708   */\n  swap1\n  pop\n    /* \"#utility.yul\":4616:4715   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4721:4901   */\ntag_101:\n    /* \"#utility.yul\":4769:4846   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4766:4767   */\n  0x00\n    /* \"#utility.yul\":4759:4847   */\n  mstore\n    /* \"#utility.yul\":4866:4870   */\n  0x22\n    /* \"#utility.yul\":4863:4864   */\n  0x04\n    /* \"#utility.yul\":4856:4871   */\n  mstore\n    /* \"#utility.yul\":4890:4894   */\n  0x24\n    /* \"#utility.yul\":4887:4888   */\n  0x00\n    /* \"#utility.yul\":4880:4895   */\n  revert\n    /* \"#utility.yul\":4907:5227   */\ntag_27:\n    /* \"#utility.yul\":4951:4957   */\n  0x00\n    /* \"#utility.yul\":4988:4989   */\n  0x02\n    /* \"#utility.yul\":4982:4986   */\n  dup3\n    /* \"#utility.yul\":4978:4990   */\n  div\n    /* \"#utility.yul\":4968:4990   */\n  swap1\n  pop\n    /* \"#utility.yul\":5035:5036   */\n  0x01\n    /* \"#utility.yul\":5029:5033   */\n  dup3\n    /* \"#utility.yul\":5025:5037   */\n  and\n    /* \"#utility.yul\":5056:5074   */\n  dup1\n    /* \"#utility.yul\":5046:5127   */\n  tag_184\n  jumpi\n    /* \"#utility.yul\":5112:5116   */\n  0x7f\n    /* \"#utility.yul\":5104:5110   */\n  dup3\n    /* \"#utility.yul\":5100:5117   */\n  and\n    /* \"#utility.yul\":5090:5117   */\n  swap2\n  pop\n    /* \"#utility.yul\":5046:5127   */\ntag_184:\n    /* \"#utility.yul\":5174:5176   */\n  0x20\n    /* \"#utility.yul\":5166:5172   */\n  dup3\n    /* \"#utility.yul\":5163:5177   */\n  lt\n    /* \"#utility.yul\":5143:5161   */\n  dup2\n    /* \"#utility.yul\":5140:5178   */\n  sub\n    /* \"#utility.yul\":5137:5221   */\n  tag_185\n  jumpi\n    /* \"#utility.yul\":5193:5211   */\n  tag_186\n  tag_101\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":5137:5221   */\ntag_185:\n    /* \"#utility.yul\":4958:5227   */\n  pop\n    /* \"#utility.yul\":4907:5227   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5233:5374   */\ntag_102:\n    /* \"#utility.yul\":5282:5286   */\n  0x00\n    /* \"#utility.yul\":5305:5308   */\n  dup2\n    /* \"#utility.yul\":5297:5308   */\n  swap1\n  pop\n    /* \"#utility.yul\":5328:5331   */\n  dup2\n    /* \"#utility.yul\":5325:5326   */\n  0x00\n    /* \"#utility.yul\":5318:5332   */\n  mstore\n    /* \"#utility.yul\":5362:5366   */\n  0x20\n    /* \"#utility.yul\":5359:5360   */\n  0x00\n    /* \"#utility.yul\":5349:5367   */\n  keccak256\n    /* \"#utility.yul\":5341:5367   */\n  swap1\n  pop\n    /* \"#utility.yul\":5233:5374   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5380:5473   */\ntag_103:\n    /* \"#utility.yul\":5417:5423   */\n  0x00\n    /* \"#utility.yul\":5464:5466   */\n  0x20\n    /* \"#utility.yul\":5459:5461   */\n  0x1f\n    /* \"#utility.yul\":5452:5457   */\n  dup4\n    /* \"#utility.yul\":5448:5462   */\n  add\n    /* \"#utility.yul\":5444:5467   */\n  div\n    /* \"#utility.yul\":5434:5467   */\n  swap1\n  pop\n    /* \"#utility.yul\":5380:5473   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5479:5586   */\ntag_104:\n    /* \"#utility.yul\":5523:5531   */\n  0x00\n    /* \"#utility.yul\":5573:5578   */\n  dup3\n    /* \"#utility.yul\":5567:5571   */\n  dup3\n    /* \"#utility.yul\":5563:5579   */\n  shl\n    /* \"#utility.yul\":5542:5579   */\n  swap1\n  pop\n    /* \"#utility.yul\":5479:5586   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5985   */\ntag_105:\n    /* \"#utility.yul\":5661:5667   */\n  0x00\n    /* \"#utility.yul\":5711:5712   */\n  0x08\n    /* \"#utility.yul\":5699:5709   */\n  dup4\n    /* \"#utility.yul\":5695:5713   */\n  mul\n    /* \"#utility.yul\":5734:5831   */\n  tag_191\n    /* \"#utility.yul\":5764:5830   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5753:5762   */\n  dup3\n    /* \"#utility.yul\":5734:5831   */\n  tag_104\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":5852:5891   */\n  tag_192\n    /* \"#utility.yul\":5882:5890   */\n  dup7\n    /* \"#utility.yul\":5871:5880   */\n  dup4\n    /* \"#utility.yul\":5852:5891   */\n  tag_104\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":5840:5891   */\n  swap6\n  pop\n    /* \"#utility.yul\":5924:5928   */\n  dup1\n    /* \"#utility.yul\":5920:5929   */\n  not\n    /* \"#utility.yul\":5913:5918   */\n  dup5\n    /* \"#utility.yul\":5909:5930   */\n  and\n    /* \"#utility.yul\":5900:5930   */\n  swap4\n  pop\n    /* \"#utility.yul\":5973:5977   */\n  dup1\n    /* \"#utility.yul\":5963:5971   */\n  dup7\n    /* \"#utility.yul\":5959:5978   */\n  and\n    /* \"#utility.yul\":5952:5957   */\n  dup5\n    /* \"#utility.yul\":5949:5979   */\n  or\n    /* \"#utility.yul\":5939:5979   */\n  swap3\n  pop\n    /* \"#utility.yul\":5668:5985   */\n  pop\n  pop\n    /* \"#utility.yul\":5592:5985   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5991:6051   */\ntag_106:\n    /* \"#utility.yul\":6019:6022   */\n  0x00\n    /* \"#utility.yul\":6040:6045   */\n  dup2\n    /* \"#utility.yul\":6033:6045   */\n  swap1\n  pop\n    /* \"#utility.yul\":5991:6051   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6057:6199   */\ntag_107:\n    /* \"#utility.yul\":6107:6116   */\n  0x00\n    /* \"#utility.yul\":6140:6193   */\n  tag_195\n    /* \"#utility.yul\":6158:6192   */\n  tag_196\n    /* \"#utility.yul\":6167:6191   */\n  tag_197\n    /* \"#utility.yul\":6185:6190   */\n  dup5\n    /* \"#utility.yul\":6167:6191   */\n  tag_88\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":6158:6192   */\n  tag_106\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":6140:6193   */\n  tag_88\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":6127:6193   */\n  swap1\n  pop\n    /* \"#utility.yul\":6057:6199   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6205:6280   */\ntag_108:\n    /* \"#utility.yul\":6248:6251   */\n  0x00\n    /* \"#utility.yul\":6269:6274   */\n  dup2\n    /* \"#utility.yul\":6262:6274   */\n  swap1\n  pop\n    /* \"#utility.yul\":6205:6280   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6286:6555   */\ntag_109:\n    /* \"#utility.yul\":6396:6435   */\n  tag_200\n    /* \"#utility.yul\":6427:6434   */\n  dup4\n    /* \"#utility.yul\":6396:6435   */\n  tag_107\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":6457:6548   */\n  tag_201\n    /* \"#utility.yul\":6506:6547   */\n  tag_202\n    /* \"#utility.yul\":6530:6546   */\n  dup3\n    /* \"#utility.yul\":6506:6547   */\n  tag_108\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":6498:6504   */\n  dup5\n    /* \"#utility.yul\":6491:6495   */\n  dup5\n    /* \"#utility.yul\":6485:6496   */\n  sload\n    /* \"#utility.yul\":6457:6548   */\n  tag_105\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":6451:6455   */\n  dup3\n    /* \"#utility.yul\":6444:6549   */\n  sstore\n    /* \"#utility.yul\":6362:6555   */\n  pop\n    /* \"#utility.yul\":6286:6555   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6561:6634   */\ntag_110:\n    /* \"#utility.yul\":6606:6609   */\n  0x00\n    /* \"#utility.yul\":6561:6634   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6640:6829   */\ntag_111:\n    /* \"#utility.yul\":6717:6749   */\n  tag_205\n  tag_110\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":6758:6823   */\n  tag_206\n    /* \"#utility.yul\":6816:6822   */\n  dup2\n    /* \"#utility.yul\":6808:6814   */\n  dup5\n    /* \"#utility.yul\":6802:6806   */\n  dup5\n    /* \"#utility.yul\":6758:6823   */\n  tag_109\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":6693:6829   */\n  pop\n    /* \"#utility.yul\":6640:6829   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6835:7021   */\ntag_112:\n    /* \"#utility.yul\":6895:7015   */\ntag_208:\n    /* \"#utility.yul\":6912:6915   */\n  dup2\n    /* \"#utility.yul\":6905:6910   */\n  dup2\n    /* \"#utility.yul\":6902:6916   */\n  lt\n    /* \"#utility.yul\":6895:7015   */\n  iszero\n  tag_210\n  jumpi\n    /* \"#utility.yul\":6966:7005   */\n  tag_211\n    /* \"#utility.yul\":7003:7004   */\n  0x00\n    /* \"#utility.yul\":6996:7001   */\n  dup3\n    /* \"#utility.yul\":6966:7005   */\n  tag_111\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":6939:6940   */\n  0x01\n    /* \"#utility.yul\":6932:6937   */\n  dup2\n    /* \"#utility.yul\":6928:6941   */\n  add\n    /* \"#utility.yul\":6919:6941   */\n  swap1\n  pop\n    /* \"#utility.yul\":6895:7015   */\n  jump(tag_208)\ntag_210:\n    /* \"#utility.yul\":6835:7021   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7027:7570   */\ntag_113:\n    /* \"#utility.yul\":7128:7130   */\n  0x1f\n    /* \"#utility.yul\":7123:7126   */\n  dup3\n    /* \"#utility.yul\":7120:7131   */\n  gt\n    /* \"#utility.yul\":7117:7563   */\n  iszero\n  tag_213\n  jumpi\n    /* \"#utility.yul\":7162:7200   */\n  tag_214\n    /* \"#utility.yul\":7194:7199   */\n  dup2\n    /* \"#utility.yul\":7162:7200   */\n  tag_102\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":7246:7275   */\n  tag_215\n    /* \"#utility.yul\":7264:7274   */\n  dup5\n    /* \"#utility.yul\":7246:7275   */\n  tag_103\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":7236:7244   */\n  dup2\n    /* \"#utility.yul\":7232:7276   */\n  add\n    /* \"#utility.yul\":7429:7431   */\n  0x20\n    /* \"#utility.yul\":7417:7427   */\n  dup6\n    /* \"#utility.yul\":7414:7432   */\n  lt\n    /* \"#utility.yul\":7411:7460   */\n  iszero\n  tag_216\n  jumpi\n    /* \"#utility.yul\":7450:7458   */\n  dup2\n    /* \"#utility.yul\":7435:7458   */\n  swap1\n  pop\n    /* \"#utility.yul\":7411:7460   */\ntag_216:\n    /* \"#utility.yul\":7473:7553   */\n  tag_217\n    /* \"#utility.yul\":7529:7551   */\n  tag_218\n    /* \"#utility.yul\":7547:7550   */\n  dup6\n    /* \"#utility.yul\":7529:7551   */\n  tag_103\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":7519:7527   */\n  dup4\n    /* \"#utility.yul\":7515:7552   */\n  add\n    /* \"#utility.yul\":7502:7513   */\n  dup3\n    /* \"#utility.yul\":7473:7553   */\n  tag_112\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":7132:7563   */\n  pop\n  pop\n    /* \"#utility.yul\":7117:7563   */\ntag_213:\n    /* \"#utility.yul\":7027:7570   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7576:7693   */\ntag_114:\n    /* \"#utility.yul\":7630:7638   */\n  0x00\n    /* \"#utility.yul\":7680:7685   */\n  dup3\n    /* \"#utility.yul\":7674:7678   */\n  dup3\n    /* \"#utility.yul\":7670:7686   */\n  shr\n    /* \"#utility.yul\":7649:7686   */\n  swap1\n  pop\n    /* \"#utility.yul\":7576:7693   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7699:7868   */\ntag_115:\n    /* \"#utility.yul\":7743:7749   */\n  0x00\n    /* \"#utility.yul\":7776:7827   */\n  tag_221\n    /* \"#utility.yul\":7824:7825   */\n  0x00\n    /* \"#utility.yul\":7820:7826   */\n  not\n    /* \"#utility.yul\":7812:7817   */\n  dup5\n    /* \"#utility.yul\":7809:7810   */\n  0x08\n    /* \"#utility.yul\":7805:7818   */\n  mul\n    /* \"#utility.yul\":7776:7827   */\n  tag_114\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":7772:7828   */\n  not\n    /* \"#utility.yul\":7857:7861   */\n  dup1\n    /* \"#utility.yul\":7851:7855   */\n  dup4\n    /* \"#utility.yul\":7847:7862   */\n  and\n    /* \"#utility.yul\":7837:7862   */\n  swap2\n  pop\n    /* \"#utility.yul\":7750:7868   */\n  pop\n    /* \"#utility.yul\":7699:7868   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7873:8168   */\ntag_116:\n    /* \"#utility.yul\":7949:7953   */\n  0x00\n    /* \"#utility.yul\":8095:8124   */\n  tag_223\n    /* \"#utility.yul\":8120:8123   */\n  dup4\n    /* \"#utility.yul\":8114:8118   */\n  dup4\n    /* \"#utility.yul\":8095:8124   */\n  tag_115\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":8087:8124   */\n  swap2\n  pop\n    /* \"#utility.yul\":8157:8160   */\n  dup3\n    /* \"#utility.yul\":8154:8155   */\n  0x02\n    /* \"#utility.yul\":8150:8161   */\n  mul\n    /* \"#utility.yul\":8144:8148   */\n  dup3\n    /* \"#utility.yul\":8141:8162   */\n  or\n    /* \"#utility.yul\":8133:8162   */\n  swap1\n  pop\n    /* \"#utility.yul\":7873:8168   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8173:9568   */\ntag_7:\n    /* \"#utility.yul\":8290:8327   */\n  tag_225\n    /* \"#utility.yul\":8323:8326   */\n  dup3\n    /* \"#utility.yul\":8290:8327   */\n  tag_100\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":8392:8410   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8384:8390   */\n  dup2\n    /* \"#utility.yul\":8381:8411   */\n  gt\n    /* \"#utility.yul\":8378:8434   */\n  iszero\n  tag_226\n  jumpi\n    /* \"#utility.yul\":8414:8432   */\n  tag_227\n  tag_44\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":8378:8434   */\ntag_226:\n    /* \"#utility.yul\":8458:8496   */\n  tag_228\n    /* \"#utility.yul\":8490:8494   */\n  dup3\n    /* \"#utility.yul\":8484:8495   */\n  sload\n    /* \"#utility.yul\":8458:8496   */\n  tag_27\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":8543:8610   */\n  tag_229\n    /* \"#utility.yul\":8603:8609   */\n  dup3\n    /* \"#utility.yul\":8595:8601   */\n  dup3\n    /* \"#utility.yul\":8589:8593   */\n  dup6\n    /* \"#utility.yul\":8543:8610   */\n  tag_113\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":8637:8638   */\n  0x00\n    /* \"#utility.yul\":8661:8665   */\n  0x20\n    /* \"#utility.yul\":8648:8665   */\n  swap1\n  pop\n    /* \"#utility.yul\":8693:8695   */\n  0x1f\n    /* \"#utility.yul\":8685:8691   */\n  dup4\n    /* \"#utility.yul\":8682:8696   */\n  gt\n    /* \"#utility.yul\":8710:8711   */\n  0x01\n    /* \"#utility.yul\":8705:9323   */\n  dup2\n  eq\n  tag_231\n  jumpi\n    /* \"#utility.yul\":9367:9368   */\n  0x00\n    /* \"#utility.yul\":9384:9390   */\n  dup5\n    /* \"#utility.yul\":9381:9458   */\n  iszero\n  tag_232\n  jumpi\n    /* \"#utility.yul\":9433:9442   */\n  dup3\n    /* \"#utility.yul\":9428:9431   */\n  dup8\n    /* \"#utility.yul\":9424:9443   */\n  add\n    /* \"#utility.yul\":9418:9444   */\n  mload\n    /* \"#utility.yul\":9409:9444   */\n  swap1\n  pop\n    /* \"#utility.yul\":9381:9458   */\ntag_232:\n    /* \"#utility.yul\":9484:9551   */\n  tag_233\n    /* \"#utility.yul\":9544:9550   */\n  dup6\n    /* \"#utility.yul\":9537:9542   */\n  dup3\n    /* \"#utility.yul\":9484:9551   */\n  tag_116\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":9478:9482   */\n  dup7\n    /* \"#utility.yul\":9471:9552   */\n  sstore\n    /* \"#utility.yul\":9340:9562   */\n  pop\n    /* \"#utility.yul\":8675:9562   */\n  jump(tag_230)\n    /* \"#utility.yul\":8705:9323   */\ntag_231:\n    /* \"#utility.yul\":8757:8761   */\n  0x1f\n    /* \"#utility.yul\":8753:8762   */\n  not\n    /* \"#utility.yul\":8745:8751   */\n  dup5\n    /* \"#utility.yul\":8741:8763   */\n  and\n    /* \"#utility.yul\":8791:8828   */\n  tag_234\n    /* \"#utility.yul\":8823:8827   */\n  dup7\n    /* \"#utility.yul\":8791:8828   */\n  tag_102\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":8850:8851   */\n  0x00\n    /* \"#utility.yul\":8864:9072   */\ntag_235:\n    /* \"#utility.yul\":8878:8885   */\n  dup3\n    /* \"#utility.yul\":8875:8876   */\n  dup2\n    /* \"#utility.yul\":8872:8886   */\n  lt\n    /* \"#utility.yul\":8864:9072   */\n  iszero\n  tag_237\n  jumpi\n    /* \"#utility.yul\":8957:8966   */\n  dup5\n    /* \"#utility.yul\":8952:8955   */\n  dup10\n    /* \"#utility.yul\":8948:8967   */\n  add\n    /* \"#utility.yul\":8942:8968   */\n  mload\n    /* \"#utility.yul\":8934:8940   */\n  dup3\n    /* \"#utility.yul\":8927:8969   */\n  sstore\n    /* \"#utility.yul\":9008:9009   */\n  0x01\n    /* \"#utility.yul\":9000:9006   */\n  dup3\n    /* \"#utility.yul\":8996:9010   */\n  add\n    /* \"#utility.yul\":8986:9010   */\n  swap2\n  pop\n    /* \"#utility.yul\":9055:9057   */\n  0x20\n    /* \"#utility.yul\":9044:9053   */\n  dup6\n    /* \"#utility.yul\":9040:9058   */\n  add\n    /* \"#utility.yul\":9027:9058   */\n  swap5\n  pop\n    /* \"#utility.yul\":8901:8905   */\n  0x20\n    /* \"#utility.yul\":8898:8899   */\n  dup2\n    /* \"#utility.yul\":8894:8906   */\n  add\n    /* \"#utility.yul\":8889:8906   */\n  swap1\n  pop\n    /* \"#utility.yul\":8864:9072   */\n  jump(tag_235)\ntag_237:\n    /* \"#utility.yul\":9100:9106   */\n  dup7\n    /* \"#utility.yul\":9091:9098   */\n  dup4\n    /* \"#utility.yul\":9088:9107   */\n  lt\n    /* \"#utility.yul\":9085:9264   */\n  iszero\n  tag_238\n  jumpi\n    /* \"#utility.yul\":9158:9167   */\n  dup5\n    /* \"#utility.yul\":9153:9156   */\n  dup10\n    /* \"#utility.yul\":9149:9168   */\n  add\n    /* \"#utility.yul\":9143:9169   */\n  mload\n    /* \"#utility.yul\":9201:9249   */\n  tag_239\n    /* \"#utility.yul\":9243:9247   */\n  0x1f\n    /* \"#utility.yul\":9235:9241   */\n  dup10\n    /* \"#utility.yul\":9231:9248   */\n  and\n    /* \"#utility.yul\":9220:9229   */\n  dup3\n    /* \"#utility.yul\":9201:9249   */\n  tag_115\n  jump\t// in\ntag_239:\n    /* \"#utility.yul\":9193:9199   */\n  dup4\n    /* \"#utility.yul\":9186:9250   */\n  sstore\n    /* \"#utility.yul\":9108:9264   */\n  pop\n    /* \"#utility.yul\":9085:9264   */\ntag_238:\n    /* \"#utility.yul\":9310:9311   */\n  0x01\n    /* \"#utility.yul\":9306:9307   */\n  0x02\n    /* \"#utility.yul\":9298:9304   */\n  dup9\n    /* \"#utility.yul\":9294:9308   */\n  mul\n    /* \"#utility.yul\":9290:9312   */\n  add\n    /* \"#utility.yul\":9284:9288   */\n  dup9\n    /* \"#utility.yul\":9277:9313   */\n  sstore\n    /* \"#utility.yul\":8712:9323   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8675:9562   */\ntag_230:\n  pop\n    /* \"#utility.yul\":8265:9568   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8173:9568   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9574:9722   */\ntag_117:\n    /* \"#utility.yul\":9676:9687   */\n  0x00\n    /* \"#utility.yul\":9713:9716   */\n  dup2\n    /* \"#utility.yul\":9698:9716   */\n  swap1\n  pop\n    /* \"#utility.yul\":9574:9722   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9752:10626   */\ntag_118:\n    /* \"#utility.yul\":9855:9858   */\n  0x00\n    /* \"#utility.yul\":9892:9897   */\n  dup2\n    /* \"#utility.yul\":9886:9898   */\n  sload\n    /* \"#utility.yul\":9921:9957   */\n  tag_242\n    /* \"#utility.yul\":9947:9956   */\n  dup2\n    /* \"#utility.yul\":9921:9957   */\n  tag_27\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":9973:10062   */\n  tag_243\n    /* \"#utility.yul\":10055:10061   */\n  dup2\n    /* \"#utility.yul\":10050:10053   */\n  dup7\n    /* \"#utility.yul\":9973:10062   */\n  tag_117\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":9966:10062   */\n  swap5\n  pop\n    /* \"#utility.yul\":10093:10094   */\n  0x01\n    /* \"#utility.yul\":10082:10091   */\n  dup3\n    /* \"#utility.yul\":10078:10095   */\n  and\n    /* \"#utility.yul\":10109:10110   */\n  0x00\n    /* \"#utility.yul\":10104:10270   */\n  dup2\n  eq\n  tag_245\n  jumpi\n    /* \"#utility.yul\":10284:10285   */\n  0x01\n    /* \"#utility.yul\":10279:10620   */\n  dup2\n  eq\n  tag_246\n  jumpi\n    /* \"#utility.yul\":10071:10620   */\n  jump(tag_244)\n    /* \"#utility.yul\":10104:10270   */\ntag_245:\n    /* \"#utility.yul\":10188:10192   */\n  0xff\n    /* \"#utility.yul\":10184:10193   */\n  not\n    /* \"#utility.yul\":10173:10182   */\n  dup4\n    /* \"#utility.yul\":10169:10194   */\n  and\n    /* \"#utility.yul\":10164:10167   */\n  dup7\n    /* \"#utility.yul\":10157:10195   */\n  mstore\n    /* \"#utility.yul\":10250:10256   */\n  dup2\n    /* \"#utility.yul\":10243:10257   */\n  iszero\n    /* \"#utility.yul\":10236:10258   */\n  iszero\n    /* \"#utility.yul\":10228:10234   */\n  dup3\n    /* \"#utility.yul\":10224:10259   */\n  mul\n    /* \"#utility.yul\":10219:10222   */\n  dup7\n    /* \"#utility.yul\":10215:10260   */\n  add\n    /* \"#utility.yul\":10208:10260   */\n  swap4\n  pop\n    /* \"#utility.yul\":10104:10270   */\n  jump(tag_244)\n    /* \"#utility.yul\":10279:10620   */\ntag_246:\n    /* \"#utility.yul\":10346:10384   */\n  tag_247\n    /* \"#utility.yul\":10378:10383   */\n  dup6\n    /* \"#utility.yul\":10346:10384   */\n  tag_102\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":10406:10407   */\n  0x00\n    /* \"#utility.yul\":10420:10574   */\ntag_248:\n    /* \"#utility.yul\":10434:10440   */\n  dup4\n    /* \"#utility.yul\":10431:10432   */\n  dup2\n    /* \"#utility.yul\":10428:10441   */\n  lt\n    /* \"#utility.yul\":10420:10574   */\n  iszero\n  tag_250\n  jumpi\n    /* \"#utility.yul\":10508:10515   */\n  dup2\n    /* \"#utility.yul\":10502:10516   */\n  sload\n    /* \"#utility.yul\":10498:10499   */\n  dup2\n    /* \"#utility.yul\":10493:10496   */\n  dup10\n    /* \"#utility.yul\":10489:10500   */\n  add\n    /* \"#utility.yul\":10482:10517   */\n  mstore\n    /* \"#utility.yul\":10558:10559   */\n  0x01\n    /* \"#utility.yul\":10549:10556   */\n  dup3\n    /* \"#utility.yul\":10545:10560   */\n  add\n    /* \"#utility.yul\":10534:10560   */\n  swap2\n  pop\n    /* \"#utility.yul\":10456:10460   */\n  0x20\n    /* \"#utility.yul\":10453:10454   */\n  dup2\n    /* \"#utility.yul\":10449:10461   */\n  add\n    /* \"#utility.yul\":10444:10461   */\n  swap1\n  pop\n    /* \"#utility.yul\":10420:10574   */\n  jump(tag_248)\ntag_250:\n    /* \"#utility.yul\":10603:10609   */\n  dup4\n    /* \"#utility.yul\":10598:10601   */\n  dup9\n    /* \"#utility.yul\":10594:10610   */\n  add\n    /* \"#utility.yul\":10587:10610   */\n  swap6\n  pop\n    /* \"#utility.yul\":10286:10620   */\n  pop\n  pop\n    /* \"#utility.yul\":10071:10620   */\ntag_244:\n  pop\n    /* \"#utility.yul\":9859:10626   */\n  pop\n  pop\n    /* \"#utility.yul\":9752:10626   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10632:10901   */\ntag_15:\n    /* \"#utility.yul\":10761:10764   */\n  0x00\n    /* \"#utility.yul\":10783:10875   */\n  tag_252\n    /* \"#utility.yul\":10871:10874   */\n  dup3\n    /* \"#utility.yul\":10862:10868   */\n  dup5\n    /* \"#utility.yul\":10783:10875   */\n  tag_118\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":10776:10875   */\n  swap2\n  pop\n    /* \"#utility.yul\":10892:10895   */\n  dup2\n    /* \"#utility.yul\":10885:10895   */\n  swap1\n  pop\n    /* \"#utility.yul\":10632:10901   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10907:11087   */\ntag_119:\n    /* \"#utility.yul\":10955:11032   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10952:10953   */\n  0x00\n    /* \"#utility.yul\":10945:11033   */\n  mstore\n    /* \"#utility.yul\":11052:11056   */\n  0x11\n    /* \"#utility.yul\":11049:11050   */\n  0x04\n    /* \"#utility.yul\":11042:11057   */\n  mstore\n    /* \"#utility.yul\":11076:11080   */\n  0x24\n    /* \"#utility.yul\":11073:11074   */\n  0x00\n    /* \"#utility.yul\":11066:11081   */\n  revert\n    /* \"#utility.yul\":11093:11284   */\ntag_19:\n    /* \"#utility.yul\":11133:11136   */\n  0x00\n    /* \"#utility.yul\":11152:11172   */\n  tag_255\n    /* \"#utility.yul\":11170:11171   */\n  dup3\n    /* \"#utility.yul\":11152:11172   */\n  tag_88\n  jump\t// in\ntag_255:\n    /* \"#utility.yul\":11147:11172   */\n  swap2\n  pop\n    /* \"#utility.yul\":11186:11206   */\n  tag_256\n    /* \"#utility.yul\":11204:11205   */\n  dup4\n    /* \"#utility.yul\":11186:11206   */\n  tag_88\n  jump\t// in\ntag_256:\n    /* \"#utility.yul\":11181:11206   */\n  swap3\n  pop\n    /* \"#utility.yul\":11229:11230   */\n  dup3\n    /* \"#utility.yul\":11226:11227   */\n  dup3\n    /* \"#utility.yul\":11222:11231   */\n  add\n    /* \"#utility.yul\":11215:11231   */\n  swap1\n  pop\n    /* \"#utility.yul\":11250:11253   */\n  dup1\n    /* \"#utility.yul\":11247:11248   */\n  dup3\n    /* \"#utility.yul\":11244:11254   */\n  gt\n    /* \"#utility.yul\":11241:11277   */\n  iszero\n  tag_257\n  jumpi\n    /* \"#utility.yul\":11257:11275   */\n  tag_258\n  tag_119\n  jump\t// in\ntag_258:\n    /* \"#utility.yul\":11241:11277   */\ntag_257:\n    /* \"#utility.yul\":11093:11284   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11290:11459   */\ntag_120:\n    /* \"#utility.yul\":11374:11385   */\n  0x00\n    /* \"#utility.yul\":11408:11414   */\n  dup3\n    /* \"#utility.yul\":11403:11406   */\n  dup3\n    /* \"#utility.yul\":11396:11415   */\n  mstore\n    /* \"#utility.yul\":11448:11452   */\n  0x20\n    /* \"#utility.yul\":11443:11446   */\n  dup3\n    /* \"#utility.yul\":11439:11453   */\n  add\n    /* \"#utility.yul\":11424:11453   */\n  swap1\n  pop\n    /* \"#utility.yul\":11290:11459   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11465:11643   */\ntag_121:\n    /* \"#utility.yul\":11605:11635   */\n  0x4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e00000000\n    /* \"#utility.yul\":11601:11602   */\n  0x00\n    /* \"#utility.yul\":11593:11599   */\n  dup3\n    /* \"#utility.yul\":11589:11603   */\n  add\n    /* \"#utility.yul\":11582:11636   */\n  mstore\n    /* \"#utility.yul\":11465:11643   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11649:12015   */\ntag_122:\n    /* \"#utility.yul\":11791:11794   */\n  0x00\n    /* \"#utility.yul\":11812:11879   */\n  tag_262\n    /* \"#utility.yul\":11876:11878   */\n  0x1c\n    /* \"#utility.yul\":11871:11874   */\n  dup4\n    /* \"#utility.yul\":11812:11879   */\n  tag_120\n  jump\t// in\ntag_262:\n    /* \"#utility.yul\":11805:11879   */\n  swap2\n  pop\n    /* \"#utility.yul\":11888:11981   */\n  tag_263\n    /* \"#utility.yul\":11977:11980   */\n  dup3\n    /* \"#utility.yul\":11888:11981   */\n  tag_121\n  jump\t// in\ntag_263:\n    /* \"#utility.yul\":12006:12008   */\n  0x20\n    /* \"#utility.yul\":12001:12004   */\n  dup3\n    /* \"#utility.yul\":11997:12009   */\n  add\n    /* \"#utility.yul\":11990:12009   */\n  swap1\n  pop\n    /* \"#utility.yul\":11649:12015   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12021:12440   */\ntag_22:\n    /* \"#utility.yul\":12187:12191   */\n  0x00\n    /* \"#utility.yul\":12225:12227   */\n  0x20\n    /* \"#utility.yul\":12214:12223   */\n  dup3\n    /* \"#utility.yul\":12210:12228   */\n  add\n    /* \"#utility.yul\":12202:12228   */\n  swap1\n  pop\n    /* \"#utility.yul\":12274:12283   */\n  dup2\n    /* \"#utility.yul\":12268:12272   */\n  dup2\n    /* \"#utility.yul\":12264:12284   */\n  sub\n    /* \"#utility.yul\":12260:12261   */\n  0x00\n    /* \"#utility.yul\":12249:12258   */\n  dup4\n    /* \"#utility.yul\":12245:12262   */\n  add\n    /* \"#utility.yul\":12238:12285   */\n  mstore\n    /* \"#utility.yul\":12302:12433   */\n  tag_265\n    /* \"#utility.yul\":12428:12432   */\n  dup2\n    /* \"#utility.yul\":12302:12433   */\n  tag_122\n  jump\t// in\ntag_265:\n    /* \"#utility.yul\":12294:12433   */\n  swap1\n  pop\n    /* \"#utility.yul\":12021:12440   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12446:12523   */\ntag_123:\n    /* \"#utility.yul\":12483:12490   */\n  0x00\n    /* \"#utility.yul\":12512:12517   */\n  dup2\n    /* \"#utility.yul\":12501:12517   */\n  swap1\n  pop\n    /* \"#utility.yul\":12446:12523   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12529:12608   */\ntag_124:\n    /* \"#utility.yul\":12568:12575   */\n  0x00\n    /* \"#utility.yul\":12597:12602   */\n  dup2\n    /* \"#utility.yul\":12586:12602   */\n  swap1\n  pop\n    /* \"#utility.yul\":12529:12608   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12614:12771   */\ntag_125:\n    /* \"#utility.yul\":12719:12764   */\n  tag_269\n    /* \"#utility.yul\":12739:12763   */\n  tag_270\n    /* \"#utility.yul\":12757:12762   */\n  dup3\n    /* \"#utility.yul\":12739:12763   */\n  tag_123\n  jump\t// in\ntag_270:\n    /* \"#utility.yul\":12719:12764   */\n  tag_124\n  jump\t// in\ntag_269:\n    /* \"#utility.yul\":12714:12717   */\n  dup3\n    /* \"#utility.yul\":12707:12765   */\n  mstore\n    /* \"#utility.yul\":12614:12771   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12777:13033   */\ntag_33:\n    /* \"#utility.yul\":12889:12892   */\n  0x00\n    /* \"#utility.yul\":12904:12979   */\n  tag_272\n    /* \"#utility.yul\":12975:12978   */\n  dup3\n    /* \"#utility.yul\":12966:12972   */\n  dup5\n    /* \"#utility.yul\":12904:12979   */\n  tag_125\n  jump\t// in\ntag_272:\n    /* \"#utility.yul\":13004:13006   */\n  0x20\n    /* \"#utility.yul\":12999:13002   */\n  dup3\n    /* \"#utility.yul\":12995:13007   */\n  add\n    /* \"#utility.yul\":12988:13007   */\n  swap2\n  pop\n    /* \"#utility.yul\":13024:13027   */\n  dup2\n    /* \"#utility.yul\":13017:13027   */\n  swap1\n  pop\n    /* \"#utility.yul\":12777:13033   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13039:13429   */\ntag_126:\n    /* \"#utility.yul\":13145:13148   */\n  0x00\n    /* \"#utility.yul\":13173:13212   */\n  tag_274\n    /* \"#utility.yul\":13206:13211   */\n  dup3\n    /* \"#utility.yul\":13173:13212   */\n  tag_100\n  jump\t// in\ntag_274:\n    /* \"#utility.yul\":13228:13317   */\n  tag_275\n    /* \"#utility.yul\":13310:13316   */\n  dup2\n    /* \"#utility.yul\":13305:13308   */\n  dup6\n    /* \"#utility.yul\":13228:13317   */\n  tag_117\n  jump\t// in\ntag_275:\n    /* \"#utility.yul\":13221:13317   */\n  swap4\n  pop\n    /* \"#utility.yul\":13326:13391   */\n  tag_276\n    /* \"#utility.yul\":13384:13390   */\n  dup2\n    /* \"#utility.yul\":13379:13382   */\n  dup6\n    /* \"#utility.yul\":13372:13376   */\n  0x20\n    /* \"#utility.yul\":13365:13370   */\n  dup7\n    /* \"#utility.yul\":13361:13377   */\n  add\n    /* \"#utility.yul\":13326:13391   */\n  tag_97\n  jump\t// in\ntag_276:\n    /* \"#utility.yul\":13416:13422   */\n  dup1\n    /* \"#utility.yul\":13411:13414   */\n  dup5\n    /* \"#utility.yul\":13407:13423   */\n  add\n    /* \"#utility.yul\":13400:13423   */\n  swap2\n  pop\n    /* \"#utility.yul\":13149:13429   */\n  pop\n    /* \"#utility.yul\":13039:13429   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13435:14190   */\ntag_35:\n    /* \"#utility.yul\":13711:13714   */\n  0x00\n    /* \"#utility.yul\":13733:13828   */\n  tag_278\n    /* \"#utility.yul\":13824:13827   */\n  dup3\n    /* \"#utility.yul\":13815:13821   */\n  dup8\n    /* \"#utility.yul\":13733:13828   */\n  tag_126\n  jump\t// in\ntag_278:\n    /* \"#utility.yul\":13726:13828   */\n  swap2\n  pop\n    /* \"#utility.yul\":13845:13940   */\n  tag_279\n    /* \"#utility.yul\":13936:13939   */\n  dup3\n    /* \"#utility.yul\":13927:13933   */\n  dup7\n    /* \"#utility.yul\":13845:13940   */\n  tag_126\n  jump\t// in\ntag_279:\n    /* \"#utility.yul\":13838:13940   */\n  swap2\n  pop\n    /* \"#utility.yul\":13957:14052   */\n  tag_280\n    /* \"#utility.yul\":14048:14051   */\n  dup3\n    /* \"#utility.yul\":14039:14045   */\n  dup6\n    /* \"#utility.yul\":13957:14052   */\n  tag_126\n  jump\t// in\ntag_280:\n    /* \"#utility.yul\":13950:14052   */\n  swap2\n  pop\n    /* \"#utility.yul\":14069:14164   */\n  tag_281\n    /* \"#utility.yul\":14160:14163   */\n  dup3\n    /* \"#utility.yul\":14151:14157   */\n  dup5\n    /* \"#utility.yul\":14069:14164   */\n  tag_126\n  jump\t// in\ntag_281:\n    /* \"#utility.yul\":14062:14164   */\n  swap2\n  pop\n    /* \"#utility.yul\":14181:14184   */\n  dup2\n    /* \"#utility.yul\":14174:14184   */\n  swap1\n  pop\n    /* \"#utility.yul\":13435:14190   */\n  swap6\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14196:14376   */\ntag_50:\n    /* \"#utility.yul\":14244:14321   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":14241:14242   */\n  0x00\n    /* \"#utility.yul\":14234:14322   */\n  mstore\n    /* \"#utility.yul\":14341:14345   */\n  0x12\n    /* \"#utility.yul\":14338:14339   */\n  0x04\n    /* \"#utility.yul\":14331:14346   */\n  mstore\n    /* \"#utility.yul\":14365:14369   */\n  0x24\n    /* \"#utility.yul\":14362:14363   */\n  0x00\n    /* \"#utility.yul\":14355:14370   */\n  revert\n    /* \"#utility.yul\":14382:14567   */\ntag_55:\n    /* \"#utility.yul\":14422:14423   */\n  0x00\n    /* \"#utility.yul\":14439:14459   */\n  tag_284\n    /* \"#utility.yul\":14457:14458   */\n  dup3\n    /* \"#utility.yul\":14439:14459   */\n  tag_88\n  jump\t// in\ntag_284:\n    /* \"#utility.yul\":14434:14459   */\n  swap2\n  pop\n    /* \"#utility.yul\":14473:14493   */\n  tag_285\n    /* \"#utility.yul\":14491:14492   */\n  dup4\n    /* \"#utility.yul\":14473:14493   */\n  tag_88\n  jump\t// in\ntag_285:\n    /* \"#utility.yul\":14468:14493   */\n  swap3\n  pop\n    /* \"#utility.yul\":14512:14513   */\n  dup3\n    /* \"#utility.yul\":14502:14537   */\n  tag_286\n  jumpi\n    /* \"#utility.yul\":14517:14535   */\n  tag_287\n  tag_50\n  jump\t// in\ntag_287:\n    /* \"#utility.yul\":14502:14537   */\ntag_286:\n    /* \"#utility.yul\":14559:14560   */\n  dup3\n    /* \"#utility.yul\":14556:14557   */\n  dup3\n    /* \"#utility.yul\":14552:14561   */\n  div\n    /* \"#utility.yul\":14547:14561   */\n  swap1\n  pop\n    /* \"#utility.yul\":14382:14567   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14573:14767   */\ntag_58:\n    /* \"#utility.yul\":14613:14617   */\n  0x00\n    /* \"#utility.yul\":14633:14653   */\n  tag_289\n    /* \"#utility.yul\":14651:14652   */\n  dup3\n    /* \"#utility.yul\":14633:14653   */\n  tag_88\n  jump\t// in\ntag_289:\n    /* \"#utility.yul\":14628:14653   */\n  swap2\n  pop\n    /* \"#utility.yul\":14667:14687   */\n  tag_290\n    /* \"#utility.yul\":14685:14686   */\n  dup4\n    /* \"#utility.yul\":14667:14687   */\n  tag_88\n  jump\t// in\ntag_290:\n    /* \"#utility.yul\":14662:14687   */\n  swap3\n  pop\n    /* \"#utility.yul\":14711:14712   */\n  dup3\n    /* \"#utility.yul\":14708:14709   */\n  dup3\n    /* \"#utility.yul\":14704:14713   */\n  sub\n    /* \"#utility.yul\":14696:14713   */\n  swap1\n  pop\n    /* \"#utility.yul\":14735:14736   */\n  dup2\n    /* \"#utility.yul\":14729:14733   */\n  dup2\n    /* \"#utility.yul\":14726:14737   */\n  gt\n    /* \"#utility.yul\":14723:14760   */\n  iszero\n  tag_291\n  jumpi\n    /* \"#utility.yul\":14740:14758   */\n  tag_292\n  tag_119\n  jump\t// in\ntag_292:\n    /* \"#utility.yul\":14723:14760   */\ntag_291:\n    /* \"#utility.yul\":14573:14767   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MiningContract.sol\":555:3963  contract MiningContract {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MiningContract.sol\":555:3963  contract MiningContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6a49f979\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x6a49f979\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb62a62ec\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe8315742\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf22a195e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf82900b1\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x0572b0cc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3ba0b9a9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4fc8a991\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x57e871e7\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MiningContract.sol\":3765:3856  function getRewards() public view returns (uint256) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MiningContract.sol\":704:722  string public name */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MiningContract.sol\":644:670  uint256 public totalSupply */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MiningContract.sol\":729:754  uint8 public exchangeRate */\n    tag_6:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MiningContract.sol\":3079:3757  function mineTokens(address miner, string memory input)... */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap3\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MiningContract.sol\":791:817  uint256 public blockNumber */\n    tag_8:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MiningContract.sol\":893:917  string public miningTask */\n    tag_9:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MiningContract.sol\":677:697  string public symbol */\n    tag_10:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MiningContract.sol\":3864:3960  function getMiningTask() public view returns (string memory){... */\n    tag_11:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MiningContract.sol\":613:637  uint256 public maxTokens */\n    tag_12:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MiningContract.sol\":824:848  bytes32 public blockHash */\n    tag_13:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MiningContract.sol\":924:952  uint256 public miningRewards */\n    tag_14:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MiningContract.sol\":3765:3856  function getRewards() public view returns (uint256) {... */\n    tag_17:\n        /* \"contracts/MiningContract.sol\":3808:3815  uint256 */\n      0x00\n        /* \"contracts/MiningContract.sol\":3835:3848  miningRewards */\n      sload(0x09)\n        /* \"contracts/MiningContract.sol\":3828:3848  return miningRewards */\n      swap1\n      pop\n        /* \"contracts/MiningContract.sol\":3765:3856  function getRewards() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MiningContract.sol\":704:722  string public name */\n    tag_21:\n      0x03\n      dup1\n      sload\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_62\n      swap1\n      tag_61\n      jump\t// in\n    tag_62:\n      dup1\n      iszero\n      tag_63\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_64\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_63)\n    tag_64:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_65:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_65\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/MiningContract.sol\":644:670  uint256 public totalSupply */\n    tag_25:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/MiningContract.sol\":729:754  uint8 public exchangeRate */\n    tag_28:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MiningContract.sol\":3079:3757  function mineTokens(address miner, string memory input)... */\n    tag_34:\n        /* \"contracts/MiningContract.sol\":3169:3173  bool */\n      0x00\n        /* \"contracts/MiningContract.sol\":3175:3182  bytes32 */\n      dup1\n        /* \"contracts/MiningContract.sol\":3200:3224  string memory mergedTask */\n      0x00\n        /* \"contracts/MiningContract.sol\":3241:3251  miningTask */\n      0x08\n        /* \"contracts/MiningContract.sol\":3253:3258  input */\n      dup5\n        /* \"contracts/MiningContract.sol\":3227:3259  string.concat(miningTask, input) */\n      add(0x20, mload(0x40))\n      tag_67\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/MiningContract.sol\":3200:3259  string memory mergedTask = string.concat(miningTask, input) */\n      swap1\n      pop\n        /* \"contracts/MiningContract.sol\":3272:3294  bytes32 mergedTaskHash */\n      0x00\n        /* \"contracts/MiningContract.sol\":3318:3328  mergedTask */\n      dup2\n        /* \"contracts/MiningContract.sol\":3307:3329  abi.encode(mergedTask) */\n      add(0x20, mload(0x40))\n      tag_69\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/MiningContract.sol\":3297:3330  keccak256(abi.encode(mergedTask)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/MiningContract.sol\":3272:3330  bytes32 mergedTaskHash = keccak256(abi.encode(mergedTask)) */\n      swap1\n      pop\n        /* \"contracts/MiningContract.sol\":3356:3363  uint8 i */\n      0x00\n        /* \"contracts/MiningContract.sol\":3351:3709  for (uint8 i = 0; i <= 256/8; i++) {... */\n    tag_70:\n        /* \"contracts/MiningContract.sol\":3374:3379  256/8 */\n      0x20\n        /* \"contracts/MiningContract.sol\":3369:3370  i */\n      dup2\n        /* \"contracts/MiningContract.sol\":3369:3379  i <= 256/8 */\n      0xff\n      and\n      gt\n        /* \"contracts/MiningContract.sol\":3351:3709  for (uint8 i = 0; i <= 256/8; i++) {... */\n      tag_71\n      jumpi\n        /* \"contracts/MiningContract.sol\":3477:3494  bytes1 prefixHash */\n      0x00\n        /* \"contracts/MiningContract.sol\":3497:3511  mergedTaskHash */\n      dup3\n        /* \"contracts/MiningContract.sol\":3512:3513  i */\n      dup3\n        /* \"contracts/MiningContract.sol\":3497:3514  mergedTaskHash[i] */\n      0xff\n      and\n      0x20\n      dup2\n      lt\n      tag_73\n      jumpi\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n    tag_73:\n      byte\n      0xf8\n      shl\n        /* \"contracts/MiningContract.sol\":3477:3514  bytes1 prefixHash = mergedTaskHash[i] */\n      swap1\n      pop\n        /* \"contracts/MiningContract.sol\":3553:3568  PREFIXHASHVALUE */\n      0x0a\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xf8\n      shl\n        /* \"contracts/MiningContract.sol\":3539:3568  prefixHash == PREFIXHASHVALUE */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/MiningContract.sol\":3539:3549  prefixHash */\n      dup2\n        /* \"contracts/MiningContract.sol\":3539:3568  prefixHash == PREFIXHASHVALUE */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/MiningContract.sol\":3535:3698  if (prefixHash == PREFIXHASHVALUE) {... */\n      tag_76\n      jumpi\n        /* \"contracts/MiningContract.sol\":3620:3633  miningRewards */\n      sload(0x09)\n        /* \"contracts/MiningContract.sol\":3607:3618  blockNumber */\n      sload(0x05)\n        /* \"contracts/MiningContract.sol\":3600:3605  miner */\n      dup10\n        /* \"contracts/MiningContract.sol\":3594:3634  Mined(miner, blockNumber, miningRewards) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5a9ec13c12ca9563a7b3108125f74c57ed388bb313394ea50f7e4a71b01497c2\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/MiningContract.sol\":3661:3665  true */\n      0x01\n        /* \"contracts/MiningContract.sol\":3667:3681  mergedTaskHash */\n      dup4\n        /* \"contracts/MiningContract.sol\":3653:3682  return (true, mergedTaskHash) */\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_66)\n        /* \"contracts/MiningContract.sol\":3535:3698  if (prefixHash == PREFIXHASHVALUE) {... */\n    tag_76:\n        /* \"contracts/MiningContract.sol\":3386:3709  {... */\n      pop\n        /* \"contracts/MiningContract.sol\":3381:3384  i++ */\n      dup1\n      dup1\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      swap2\n      pop\n      pop\n        /* \"contracts/MiningContract.sol\":3351:3709  for (uint8 i = 0; i <= 256/8; i++) {... */\n      jump(tag_70)\n    tag_71:\n      pop\n        /* \"contracts/MiningContract.sol\":3727:3732  false */\n      0x00\n        /* \"contracts/MiningContract.sol\":3734:3748  mergedTaskHash */\n      dup2\n        /* \"contracts/MiningContract.sol\":3719:3749  return (false, mergedTaskHash) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/MiningContract.sol\":3079:3757  function mineTokens(address miner, string memory input)... */\n    tag_66:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MiningContract.sol\":791:817  uint256 public blockNumber */\n    tag_38:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/MiningContract.sol\":893:917  string public miningTask */\n    tag_41:\n      0x08\n      dup1\n      sload\n      tag_79\n      swap1\n      tag_61\n      jump\t// in\n    tag_79:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_61\n      jump\t// in\n    tag_80:\n      dup1\n      iszero\n      tag_81\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_82\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_81)\n    tag_82:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_83:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_83\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/MiningContract.sol\":677:697  string public symbol */\n    tag_44:\n      0x02\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_61\n      jump\t// in\n    tag_84:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_85\n      swap1\n      tag_61\n      jump\t// in\n    tag_85:\n      dup1\n      iszero\n      tag_86\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_87\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_86)\n    tag_87:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_88:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_88\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/MiningContract.sol\":3864:3960  function getMiningTask() public view returns (string memory){... */\n    tag_47:\n        /* \"contracts/MiningContract.sol\":3910:3923  string memory */\n      0x60\n        /* \"contracts/MiningContract.sol\":3942:3952  miningTask */\n      0x08\n        /* \"contracts/MiningContract.sol\":3935:3952  return miningTask */\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_61\n      jump\t// in\n    tag_90:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_61\n      jump\t// in\n    tag_91:\n      dup1\n      iszero\n      tag_92\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_93\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_92)\n    tag_93:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_94:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_94\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/MiningContract.sol\":3864:3960  function getMiningTask() public view returns (string memory){... */\n      swap1\n      jump\t// out\n        /* \"contracts/MiningContract.sol\":613:637  uint256 public maxTokens */\n    tag_50:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/MiningContract.sol\":824:848  bytes32 public blockHash */\n    tag_53:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/MiningContract.sol\":924:952  uint256 public miningRewards */\n    tag_57:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_95:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_96:\n        /* \"#utility.yul\":177:201   */\n      tag_133\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_95\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_19:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_135\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_96\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:541   */\n    tag_97:\n        /* \"#utility.yul\":494:500   */\n      0x00\n        /* \"#utility.yul\":528:533   */\n      dup2\n        /* \"#utility.yul\":522:534   */\n      mload\n        /* \"#utility.yul\":512:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":547:716   */\n    tag_98:\n        /* \"#utility.yul\":631:642   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup3\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:672   */\n      mstore\n        /* \"#utility.yul\":705:709   */\n      0x20\n        /* \"#utility.yul\":700:703   */\n      dup3\n        /* \"#utility.yul\":696:710   */\n      add\n        /* \"#utility.yul\":681:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":547:716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:861   */\n    tag_99:\n        /* \"#utility.yul\":811:817   */\n      dup3\n        /* \"#utility.yul\":806:809   */\n      dup2\n        /* \"#utility.yul\":801:804   */\n      dup4\n        /* \"#utility.yul\":795:818   */\n      mcopy\n        /* \"#utility.yul\":852:853   */\n      0x00\n        /* \"#utility.yul\":843:849   */\n      dup4\n        /* \"#utility.yul\":838:841   */\n      dup4\n        /* \"#utility.yul\":834:850   */\n      add\n        /* \"#utility.yul\":827:854   */\n      mstore\n        /* \"#utility.yul\":722:861   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":867:969   */\n    tag_100:\n        /* \"#utility.yul\":908:914   */\n      0x00\n        /* \"#utility.yul\":959:961   */\n      0x1f\n        /* \"#utility.yul\":955:962   */\n      not\n        /* \"#utility.yul\":950:952   */\n      0x1f\n        /* \"#utility.yul\":943:948   */\n      dup4\n        /* \"#utility.yul\":939:953   */\n      add\n        /* \"#utility.yul\":935:963   */\n      and\n        /* \"#utility.yul\":925:963   */\n      swap1\n      pop\n        /* \"#utility.yul\":867:969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":975:1352   */\n    tag_101:\n        /* \"#utility.yul\":1063:1066   */\n      0x00\n        /* \"#utility.yul\":1091:1130   */\n      tag_141\n        /* \"#utility.yul\":1124:1129   */\n      dup3\n        /* \"#utility.yul\":1091:1130   */\n      tag_97\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1146:1217   */\n      tag_142\n        /* \"#utility.yul\":1210:1216   */\n      dup2\n        /* \"#utility.yul\":1205:1208   */\n      dup6\n        /* \"#utility.yul\":1146:1217   */\n      tag_98\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1139:1217   */\n      swap4\n      pop\n        /* \"#utility.yul\":1226:1291   */\n      tag_143\n        /* \"#utility.yul\":1284:1290   */\n      dup2\n        /* \"#utility.yul\":1279:1282   */\n      dup6\n        /* \"#utility.yul\":1272:1276   */\n      0x20\n        /* \"#utility.yul\":1265:1270   */\n      dup7\n        /* \"#utility.yul\":1261:1277   */\n      add\n        /* \"#utility.yul\":1226:1291   */\n      tag_99\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1316:1345   */\n      tag_144\n        /* \"#utility.yul\":1338:1344   */\n      dup2\n        /* \"#utility.yul\":1316:1345   */\n      tag_100\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1311:1314   */\n      dup5\n        /* \"#utility.yul\":1307:1346   */\n      add\n        /* \"#utility.yul\":1300:1346   */\n      swap2\n      pop\n        /* \"#utility.yul\":1067:1352   */\n      pop\n        /* \"#utility.yul\":975:1352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1358:1671   */\n    tag_23:\n        /* \"#utility.yul\":1471:1475   */\n      0x00\n        /* \"#utility.yul\":1509:1511   */\n      0x20\n        /* \"#utility.yul\":1498:1507   */\n      dup3\n        /* \"#utility.yul\":1494:1512   */\n      add\n        /* \"#utility.yul\":1486:1512   */\n      swap1\n      pop\n        /* \"#utility.yul\":1558:1567   */\n      dup2\n        /* \"#utility.yul\":1552:1556   */\n      dup2\n        /* \"#utility.yul\":1548:1568   */\n      sub\n        /* \"#utility.yul\":1544:1545   */\n      0x00\n        /* \"#utility.yul\":1533:1542   */\n      dup4\n        /* \"#utility.yul\":1529:1546   */\n      add\n        /* \"#utility.yul\":1522:1569   */\n      mstore\n        /* \"#utility.yul\":1586:1664   */\n      tag_146\n        /* \"#utility.yul\":1659:1663   */\n      dup2\n        /* \"#utility.yul\":1650:1656   */\n      dup5\n        /* \"#utility.yul\":1586:1664   */\n      tag_101\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1578:1664   */\n      swap1\n      pop\n        /* \"#utility.yul\":1358:1671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1763   */\n    tag_102:\n        /* \"#utility.yul\":1712:1719   */\n      0x00\n        /* \"#utility.yul\":1752:1756   */\n      0xff\n        /* \"#utility.yul\":1745:1750   */\n      dup3\n        /* \"#utility.yul\":1741:1757   */\n      and\n        /* \"#utility.yul\":1730:1757   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1769:1881   */\n    tag_103:\n        /* \"#utility.yul\":1852:1874   */\n      tag_149\n        /* \"#utility.yul\":1868:1873   */\n      dup2\n        /* \"#utility.yul\":1852:1874   */\n      tag_102\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1847:1850   */\n      dup3\n        /* \"#utility.yul\":1840:1875   */\n      mstore\n        /* \"#utility.yul\":1769:1881   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1887:2101   */\n    tag_30:\n        /* \"#utility.yul\":1976:1980   */\n      0x00\n        /* \"#utility.yul\":2014:2016   */\n      0x20\n        /* \"#utility.yul\":2003:2012   */\n      dup3\n        /* \"#utility.yul\":1999:2017   */\n      add\n        /* \"#utility.yul\":1991:2017   */\n      swap1\n      pop\n        /* \"#utility.yul\":2027:2094   */\n      tag_151\n        /* \"#utility.yul\":2091:2092   */\n      0x00\n        /* \"#utility.yul\":2080:2089   */\n      dup4\n        /* \"#utility.yul\":2076:2093   */\n      add\n        /* \"#utility.yul\":2067:2073   */\n      dup5\n        /* \"#utility.yul\":2027:2094   */\n      tag_103\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":1887:2101   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2107:2182   */\n    tag_104:\n        /* \"#utility.yul\":2140:2146   */\n      0x00\n        /* \"#utility.yul\":2173:2175   */\n      0x40\n        /* \"#utility.yul\":2167:2176   */\n      mload\n        /* \"#utility.yul\":2157:2176   */\n      swap1\n      pop\n        /* \"#utility.yul\":2107:2182   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2188:2305   */\n    tag_105:\n        /* \"#utility.yul\":2297:2298   */\n      0x00\n        /* \"#utility.yul\":2294:2295   */\n      dup1\n        /* \"#utility.yul\":2287:2299   */\n      revert\n        /* \"#utility.yul\":2311:2428   */\n    tag_106:\n        /* \"#utility.yul\":2420:2421   */\n      0x00\n        /* \"#utility.yul\":2417:2418   */\n      dup1\n        /* \"#utility.yul\":2410:2422   */\n      revert\n        /* \"#utility.yul\":2434:2560   */\n    tag_107:\n        /* \"#utility.yul\":2471:2478   */\n      0x00\n        /* \"#utility.yul\":2511:2553   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2504:2509   */\n      dup3\n        /* \"#utility.yul\":2500:2554   */\n      and\n        /* \"#utility.yul\":2489:2554   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2566:2662   */\n    tag_108:\n        /* \"#utility.yul\":2603:2610   */\n      0x00\n        /* \"#utility.yul\":2632:2656   */\n      tag_157\n        /* \"#utility.yul\":2650:2655   */\n      dup3\n        /* \"#utility.yul\":2632:2656   */\n      tag_107\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2621:2656   */\n      swap1\n      pop\n        /* \"#utility.yul\":2566:2662   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2668:2790   */\n    tag_109:\n        /* \"#utility.yul\":2741:2765   */\n      tag_159\n        /* \"#utility.yul\":2759:2764   */\n      dup2\n        /* \"#utility.yul\":2741:2765   */\n      tag_108\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2734:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2766   */\n      eq\n        /* \"#utility.yul\":2721:2784   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2780:2781   */\n      0x00\n        /* \"#utility.yul\":2777:2778   */\n      dup1\n        /* \"#utility.yul\":2770:2782   */\n      revert\n        /* \"#utility.yul\":2721:2784   */\n    tag_160:\n        /* \"#utility.yul\":2668:2790   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2796:2935   */\n    tag_110:\n        /* \"#utility.yul\":2842:2847   */\n      0x00\n        /* \"#utility.yul\":2880:2886   */\n      dup2\n        /* \"#utility.yul\":2867:2887   */\n      calldataload\n        /* \"#utility.yul\":2858:2887   */\n      swap1\n      pop\n        /* \"#utility.yul\":2896:2929   */\n      tag_162\n        /* \"#utility.yul\":2923:2928   */\n      dup2\n        /* \"#utility.yul\":2896:2929   */\n      tag_109\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2796:2935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2941:3058   */\n    tag_111:\n        /* \"#utility.yul\":3050:3051   */\n      0x00\n        /* \"#utility.yul\":3047:3048   */\n      dup1\n        /* \"#utility.yul\":3040:3052   */\n      revert\n        /* \"#utility.yul\":3064:3181   */\n    tag_112:\n        /* \"#utility.yul\":3173:3174   */\n      0x00\n        /* \"#utility.yul\":3170:3171   */\n      dup1\n        /* \"#utility.yul\":3163:3175   */\n      revert\n        /* \"#utility.yul\":3187:3367   */\n    tag_113:\n        /* \"#utility.yul\":3235:3312   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3232:3233   */\n      0x00\n        /* \"#utility.yul\":3225:3313   */\n      mstore\n        /* \"#utility.yul\":3332:3336   */\n      0x41\n        /* \"#utility.yul\":3329:3330   */\n      0x04\n        /* \"#utility.yul\":3322:3337   */\n      mstore\n        /* \"#utility.yul\":3356:3360   */\n      0x24\n        /* \"#utility.yul\":3353:3354   */\n      0x00\n        /* \"#utility.yul\":3346:3361   */\n      revert\n        /* \"#utility.yul\":3373:3654   */\n    tag_114:\n        /* \"#utility.yul\":3456:3483   */\n      tag_167\n        /* \"#utility.yul\":3478:3482   */\n      dup3\n        /* \"#utility.yul\":3456:3483   */\n      tag_100\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3448:3454   */\n      dup2\n        /* \"#utility.yul\":3444:3484   */\n      add\n        /* \"#utility.yul\":3586:3592   */\n      dup2\n        /* \"#utility.yul\":3574:3584   */\n      dup2\n        /* \"#utility.yul\":3571:3593   */\n      lt\n        /* \"#utility.yul\":3550:3568   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3538:3548   */\n      dup3\n        /* \"#utility.yul\":3535:3569   */\n      gt\n        /* \"#utility.yul\":3532:3594   */\n      or\n        /* \"#utility.yul\":3529:3617   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":3597:3615   */\n      tag_169\n      tag_113\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":3529:3617   */\n    tag_168:\n        /* \"#utility.yul\":3637:3647   */\n      dup1\n        /* \"#utility.yul\":3633:3635   */\n      0x40\n        /* \"#utility.yul\":3626:3648   */\n      mstore\n        /* \"#utility.yul\":3416:3654   */\n      pop\n        /* \"#utility.yul\":3373:3654   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3660:3789   */\n    tag_115:\n        /* \"#utility.yul\":3694:3700   */\n      0x00\n        /* \"#utility.yul\":3721:3741   */\n      tag_171\n      tag_104\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":3711:3741   */\n      swap1\n      pop\n        /* \"#utility.yul\":3750:3783   */\n      tag_172\n        /* \"#utility.yul\":3778:3782   */\n      dup3\n        /* \"#utility.yul\":3770:3776   */\n      dup3\n        /* \"#utility.yul\":3750:3783   */\n      tag_114\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3660:3789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3795:4103   */\n    tag_116:\n        /* \"#utility.yul\":3857:3861   */\n      0x00\n        /* \"#utility.yul\":3947:3965   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3939:3945   */\n      dup3\n        /* \"#utility.yul\":3936:3966   */\n      gt\n        /* \"#utility.yul\":3933:3989   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":3969:3987   */\n      tag_175\n      tag_113\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":3933:3989   */\n    tag_174:\n        /* \"#utility.yul\":4007:4036   */\n      tag_176\n        /* \"#utility.yul\":4029:4035   */\n      dup3\n        /* \"#utility.yul\":4007:4036   */\n      tag_100\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":3999:4036   */\n      swap1\n      pop\n        /* \"#utility.yul\":4091:4095   */\n      0x20\n        /* \"#utility.yul\":4085:4089   */\n      dup2\n        /* \"#utility.yul\":4081:4096   */\n      add\n        /* \"#utility.yul\":4073:4096   */\n      swap1\n      pop\n        /* \"#utility.yul\":3795:4103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4109:4257   */\n    tag_117:\n        /* \"#utility.yul\":4207:4213   */\n      dup3\n        /* \"#utility.yul\":4202:4205   */\n      dup2\n        /* \"#utility.yul\":4197:4200   */\n      dup4\n        /* \"#utility.yul\":4184:4214   */\n      calldatacopy\n        /* \"#utility.yul\":4248:4249   */\n      0x00\n        /* \"#utility.yul\":4239:4245   */\n      dup4\n        /* \"#utility.yul\":4234:4237   */\n      dup4\n        /* \"#utility.yul\":4230:4246   */\n      add\n        /* \"#utility.yul\":4223:4250   */\n      mstore\n        /* \"#utility.yul\":4109:4257   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4263:4688   */\n    tag_118:\n        /* \"#utility.yul\":4341:4346   */\n      0x00\n        /* \"#utility.yul\":4366:4432   */\n      tag_179\n        /* \"#utility.yul\":4382:4431   */\n      tag_180\n        /* \"#utility.yul\":4424:4430   */\n      dup5\n        /* \"#utility.yul\":4382:4431   */\n      tag_116\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":4366:4432   */\n      tag_115\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4357:4432   */\n      swap1\n      pop\n        /* \"#utility.yul\":4455:4461   */\n      dup3\n        /* \"#utility.yul\":4448:4453   */\n      dup2\n        /* \"#utility.yul\":4441:4462   */\n      mstore\n        /* \"#utility.yul\":4493:4497   */\n      0x20\n        /* \"#utility.yul\":4486:4491   */\n      dup2\n        /* \"#utility.yul\":4482:4498   */\n      add\n        /* \"#utility.yul\":4531:4534   */\n      dup5\n        /* \"#utility.yul\":4522:4528   */\n      dup5\n        /* \"#utility.yul\":4517:4520   */\n      dup5\n        /* \"#utility.yul\":4513:4529   */\n      add\n        /* \"#utility.yul\":4510:4535   */\n      gt\n        /* \"#utility.yul\":4507:4619   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":4538:4617   */\n      tag_182\n      tag_112\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":4507:4619   */\n    tag_181:\n        /* \"#utility.yul\":4628:4682   */\n      tag_183\n        /* \"#utility.yul\":4675:4681   */\n      dup5\n        /* \"#utility.yul\":4670:4673   */\n      dup3\n        /* \"#utility.yul\":4665:4668   */\n      dup6\n        /* \"#utility.yul\":4628:4682   */\n      tag_117\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":4347:4688   */\n      pop\n        /* \"#utility.yul\":4263:4688   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4708:5048   */\n    tag_119:\n        /* \"#utility.yul\":4764:4769   */\n      0x00\n        /* \"#utility.yul\":4813:4816   */\n      dup3\n        /* \"#utility.yul\":4806:4810   */\n      0x1f\n        /* \"#utility.yul\":4798:4804   */\n      dup4\n        /* \"#utility.yul\":4794:4811   */\n      add\n        /* \"#utility.yul\":4790:4817   */\n      slt\n        /* \"#utility.yul\":4780:4902   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":4821:4900   */\n      tag_186\n      tag_111\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":4780:4902   */\n    tag_185:\n        /* \"#utility.yul\":4938:4944   */\n      dup2\n        /* \"#utility.yul\":4925:4945   */\n      calldataload\n        /* \"#utility.yul\":4963:5042   */\n      tag_187\n        /* \"#utility.yul\":5038:5041   */\n      dup5\n        /* \"#utility.yul\":5030:5036   */\n      dup3\n        /* \"#utility.yul\":5023:5027   */\n      0x20\n        /* \"#utility.yul\":5015:5021   */\n      dup7\n        /* \"#utility.yul\":5011:5028   */\n      add\n        /* \"#utility.yul\":4963:5042   */\n      tag_118\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4954:5042   */\n      swap2\n      pop\n        /* \"#utility.yul\":4770:5048   */\n      pop\n        /* \"#utility.yul\":4708:5048   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5054:5708   */\n    tag_33:\n        /* \"#utility.yul\":5132:5138   */\n      0x00\n        /* \"#utility.yul\":5140:5146   */\n      dup1\n        /* \"#utility.yul\":5189:5191   */\n      0x40\n        /* \"#utility.yul\":5177:5186   */\n      dup4\n        /* \"#utility.yul\":5168:5175   */\n      dup6\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_190\n      tag_105\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":5157:5276   */\n    tag_189:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_191\n        /* \"#utility.yul\":5385:5392   */\n      dup6\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup7\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_110\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":5330:5393   */\n      swap3\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5470:5472   */\n      0x20\n        /* \"#utility.yul\":5459:5468   */\n      dup4\n        /* \"#utility.yul\":5455:5473   */\n      add\n        /* \"#utility.yul\":5442:5474   */\n      calldataload\n        /* \"#utility.yul\":5501:5519   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5493:5499   */\n      dup2\n        /* \"#utility.yul\":5490:5520   */\n      gt\n        /* \"#utility.yul\":5487:5604   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":5523:5602   */\n      tag_193\n      tag_106\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":5487:5604   */\n    tag_192:\n        /* \"#utility.yul\":5628:5691   */\n      tag_194\n        /* \"#utility.yul\":5683:5690   */\n      dup6\n        /* \"#utility.yul\":5674:5680   */\n      dup3\n        /* \"#utility.yul\":5663:5672   */\n      dup7\n        /* \"#utility.yul\":5659:5681   */\n      add\n        /* \"#utility.yul\":5628:5691   */\n      tag_119\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":5618:5691   */\n      swap2\n      pop\n        /* \"#utility.yul\":5413:5701   */\n      pop\n        /* \"#utility.yul\":5054:5708   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5714:5804   */\n    tag_120:\n        /* \"#utility.yul\":5748:5755   */\n      0x00\n        /* \"#utility.yul\":5791:5796   */\n      dup2\n        /* \"#utility.yul\":5784:5797   */\n      iszero\n        /* \"#utility.yul\":5777:5798   */\n      iszero\n        /* \"#utility.yul\":5766:5798   */\n      swap1\n      pop\n        /* \"#utility.yul\":5714:5804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5810:5919   */\n    tag_121:\n        /* \"#utility.yul\":5891:5912   */\n      tag_197\n        /* \"#utility.yul\":5906:5911   */\n      dup2\n        /* \"#utility.yul\":5891:5912   */\n      tag_120\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":5886:5889   */\n      dup3\n        /* \"#utility.yul\":5879:5913   */\n      mstore\n        /* \"#utility.yul\":5810:5919   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5925:6002   */\n    tag_122:\n        /* \"#utility.yul\":5962:5969   */\n      0x00\n        /* \"#utility.yul\":5991:5996   */\n      dup2\n        /* \"#utility.yul\":5980:5996   */\n      swap1\n      pop\n        /* \"#utility.yul\":5925:6002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6008:6126   */\n    tag_123:\n        /* \"#utility.yul\":6095:6119   */\n      tag_200\n        /* \"#utility.yul\":6113:6118   */\n      dup2\n        /* \"#utility.yul\":6095:6119   */\n      tag_122\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":6090:6093   */\n      dup3\n        /* \"#utility.yul\":6083:6120   */\n      mstore\n        /* \"#utility.yul\":6008:6126   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6132:6452   */\n    tag_36:\n        /* \"#utility.yul\":6247:6251   */\n      0x00\n        /* \"#utility.yul\":6285:6287   */\n      0x40\n        /* \"#utility.yul\":6274:6283   */\n      dup3\n        /* \"#utility.yul\":6270:6288   */\n      add\n        /* \"#utility.yul\":6262:6288   */\n      swap1\n      pop\n        /* \"#utility.yul\":6298:6363   */\n      tag_202\n        /* \"#utility.yul\":6360:6361   */\n      0x00\n        /* \"#utility.yul\":6349:6358   */\n      dup4\n        /* \"#utility.yul\":6345:6362   */\n      add\n        /* \"#utility.yul\":6336:6342   */\n      dup6\n        /* \"#utility.yul\":6298:6363   */\n      tag_121\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":6373:6445   */\n      tag_203\n        /* \"#utility.yul\":6441:6443   */\n      0x20\n        /* \"#utility.yul\":6430:6439   */\n      dup4\n        /* \"#utility.yul\":6426:6444   */\n      add\n        /* \"#utility.yul\":6417:6423   */\n      dup5\n        /* \"#utility.yul\":6373:6445   */\n      tag_123\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":6132:6452   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6458:6680   */\n    tag_55:\n        /* \"#utility.yul\":6551:6555   */\n      0x00\n        /* \"#utility.yul\":6589:6591   */\n      0x20\n        /* \"#utility.yul\":6578:6587   */\n      dup3\n        /* \"#utility.yul\":6574:6592   */\n      add\n        /* \"#utility.yul\":6566:6592   */\n      swap1\n      pop\n        /* \"#utility.yul\":6602:6673   */\n      tag_205\n        /* \"#utility.yul\":6670:6671   */\n      0x00\n        /* \"#utility.yul\":6659:6668   */\n      dup4\n        /* \"#utility.yul\":6655:6672   */\n      add\n        /* \"#utility.yul\":6646:6652   */\n      dup5\n        /* \"#utility.yul\":6602:6673   */\n      tag_123\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":6458:6680   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6686:6866   */\n    tag_124:\n        /* \"#utility.yul\":6734:6811   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6731:6732   */\n      0x00\n        /* \"#utility.yul\":6724:6812   */\n      mstore\n        /* \"#utility.yul\":6831:6835   */\n      0x22\n        /* \"#utility.yul\":6828:6829   */\n      0x04\n        /* \"#utility.yul\":6821:6836   */\n      mstore\n        /* \"#utility.yul\":6855:6859   */\n      0x24\n        /* \"#utility.yul\":6852:6853   */\n      0x00\n        /* \"#utility.yul\":6845:6860   */\n      revert\n        /* \"#utility.yul\":6872:7192   */\n    tag_61:\n        /* \"#utility.yul\":6916:6922   */\n      0x00\n        /* \"#utility.yul\":6953:6954   */\n      0x02\n        /* \"#utility.yul\":6947:6951   */\n      dup3\n        /* \"#utility.yul\":6943:6955   */\n      div\n        /* \"#utility.yul\":6933:6955   */\n      swap1\n      pop\n        /* \"#utility.yul\":7000:7001   */\n      0x01\n        /* \"#utility.yul\":6994:6998   */\n      dup3\n        /* \"#utility.yul\":6990:7002   */\n      and\n        /* \"#utility.yul\":7021:7039   */\n      dup1\n        /* \"#utility.yul\":7011:7092   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":7077:7081   */\n      0x7f\n        /* \"#utility.yul\":7069:7075   */\n      dup3\n        /* \"#utility.yul\":7065:7082   */\n      and\n        /* \"#utility.yul\":7055:7082   */\n      swap2\n      pop\n        /* \"#utility.yul\":7011:7092   */\n    tag_208:\n        /* \"#utility.yul\":7139:7141   */\n      0x20\n        /* \"#utility.yul\":7131:7137   */\n      dup3\n        /* \"#utility.yul\":7128:7142   */\n      lt\n        /* \"#utility.yul\":7108:7126   */\n      dup2\n        /* \"#utility.yul\":7105:7143   */\n      sub\n        /* \"#utility.yul\":7102:7186   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":7158:7176   */\n      tag_210\n      tag_124\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":7102:7186   */\n    tag_209:\n        /* \"#utility.yul\":6923:7192   */\n      pop\n        /* \"#utility.yul\":6872:7192   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7198:7346   */\n    tag_125:\n        /* \"#utility.yul\":7300:7311   */\n      0x00\n        /* \"#utility.yul\":7337:7340   */\n      dup2\n        /* \"#utility.yul\":7322:7340   */\n      swap1\n      pop\n        /* \"#utility.yul\":7198:7346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7352:7493   */\n    tag_126:\n        /* \"#utility.yul\":7401:7405   */\n      0x00\n        /* \"#utility.yul\":7424:7427   */\n      dup2\n        /* \"#utility.yul\":7416:7427   */\n      swap1\n      pop\n        /* \"#utility.yul\":7447:7450   */\n      dup2\n        /* \"#utility.yul\":7444:7445   */\n      0x00\n        /* \"#utility.yul\":7437:7451   */\n      mstore\n        /* \"#utility.yul\":7481:7485   */\n      0x20\n        /* \"#utility.yul\":7478:7479   */\n      0x00\n        /* \"#utility.yul\":7468:7486   */\n      keccak256\n        /* \"#utility.yul\":7460:7486   */\n      swap1\n      pop\n        /* \"#utility.yul\":7352:7493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7523:8397   */\n    tag_127:\n        /* \"#utility.yul\":7626:7629   */\n      0x00\n        /* \"#utility.yul\":7663:7668   */\n      dup2\n        /* \"#utility.yul\":7657:7669   */\n      sload\n        /* \"#utility.yul\":7692:7728   */\n      tag_214\n        /* \"#utility.yul\":7718:7727   */\n      dup2\n        /* \"#utility.yul\":7692:7728   */\n      tag_61\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":7744:7833   */\n      tag_215\n        /* \"#utility.yul\":7826:7832   */\n      dup2\n        /* \"#utility.yul\":7821:7824   */\n      dup7\n        /* \"#utility.yul\":7744:7833   */\n      tag_125\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":7737:7833   */\n      swap5\n      pop\n        /* \"#utility.yul\":7864:7865   */\n      0x01\n        /* \"#utility.yul\":7853:7862   */\n      dup3\n        /* \"#utility.yul\":7849:7866   */\n      and\n        /* \"#utility.yul\":7880:7881   */\n      0x00\n        /* \"#utility.yul\":7875:8041   */\n      dup2\n      eq\n      tag_217\n      jumpi\n        /* \"#utility.yul\":8055:8056   */\n      0x01\n        /* \"#utility.yul\":8050:8391   */\n      dup2\n      eq\n      tag_218\n      jumpi\n        /* \"#utility.yul\":7842:8391   */\n      jump(tag_216)\n        /* \"#utility.yul\":7875:8041   */\n    tag_217:\n        /* \"#utility.yul\":7959:7963   */\n      0xff\n        /* \"#utility.yul\":7955:7964   */\n      not\n        /* \"#utility.yul\":7944:7953   */\n      dup4\n        /* \"#utility.yul\":7940:7965   */\n      and\n        /* \"#utility.yul\":7935:7938   */\n      dup7\n        /* \"#utility.yul\":7928:7966   */\n      mstore\n        /* \"#utility.yul\":8021:8027   */\n      dup2\n        /* \"#utility.yul\":8014:8028   */\n      iszero\n        /* \"#utility.yul\":8007:8029   */\n      iszero\n        /* \"#utility.yul\":7999:8005   */\n      dup3\n        /* \"#utility.yul\":7995:8030   */\n      mul\n        /* \"#utility.yul\":7990:7993   */\n      dup7\n        /* \"#utility.yul\":7986:8031   */\n      add\n        /* \"#utility.yul\":7979:8031   */\n      swap4\n      pop\n        /* \"#utility.yul\":7875:8041   */\n      jump(tag_216)\n        /* \"#utility.yul\":8050:8391   */\n    tag_218:\n        /* \"#utility.yul\":8117:8155   */\n      tag_219\n        /* \"#utility.yul\":8149:8154   */\n      dup6\n        /* \"#utility.yul\":8117:8155   */\n      tag_126\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":8177:8178   */\n      0x00\n        /* \"#utility.yul\":8191:8345   */\n    tag_220:\n        /* \"#utility.yul\":8205:8211   */\n      dup4\n        /* \"#utility.yul\":8202:8203   */\n      dup2\n        /* \"#utility.yul\":8199:8212   */\n      lt\n        /* \"#utility.yul\":8191:8345   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":8279:8286   */\n      dup2\n        /* \"#utility.yul\":8273:8287   */\n      sload\n        /* \"#utility.yul\":8269:8270   */\n      dup2\n        /* \"#utility.yul\":8264:8267   */\n      dup10\n        /* \"#utility.yul\":8260:8271   */\n      add\n        /* \"#utility.yul\":8253:8288   */\n      mstore\n        /* \"#utility.yul\":8329:8330   */\n      0x01\n        /* \"#utility.yul\":8320:8327   */\n      dup3\n        /* \"#utility.yul\":8316:8331   */\n      add\n        /* \"#utility.yul\":8305:8331   */\n      swap2\n      pop\n        /* \"#utility.yul\":8227:8231   */\n      0x20\n        /* \"#utility.yul\":8224:8225   */\n      dup2\n        /* \"#utility.yul\":8220:8232   */\n      add\n        /* \"#utility.yul\":8215:8232   */\n      swap1\n      pop\n        /* \"#utility.yul\":8191:8345   */\n      jump(tag_220)\n    tag_222:\n        /* \"#utility.yul\":8374:8380   */\n      dup4\n        /* \"#utility.yul\":8369:8372   */\n      dup9\n        /* \"#utility.yul\":8365:8381   */\n      add\n        /* \"#utility.yul\":8358:8381   */\n      swap6\n      pop\n        /* \"#utility.yul\":8057:8391   */\n      pop\n      pop\n        /* \"#utility.yul\":7842:8391   */\n    tag_216:\n      pop\n        /* \"#utility.yul\":7630:8397   */\n      pop\n      pop\n        /* \"#utility.yul\":7523:8397   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8403:8793   */\n    tag_128:\n        /* \"#utility.yul\":8509:8512   */\n      0x00\n        /* \"#utility.yul\":8537:8576   */\n      tag_224\n        /* \"#utility.yul\":8570:8575   */\n      dup3\n        /* \"#utility.yul\":8537:8576   */\n      tag_97\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":8592:8681   */\n      tag_225\n        /* \"#utility.yul\":8674:8680   */\n      dup2\n        /* \"#utility.yul\":8669:8672   */\n      dup6\n        /* \"#utility.yul\":8592:8681   */\n      tag_125\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":8585:8681   */\n      swap4\n      pop\n        /* \"#utility.yul\":8690:8755   */\n      tag_226\n        /* \"#utility.yul\":8748:8754   */\n      dup2\n        /* \"#utility.yul\":8743:8746   */\n      dup6\n        /* \"#utility.yul\":8736:8740   */\n      0x20\n        /* \"#utility.yul\":8729:8734   */\n      dup7\n        /* \"#utility.yul\":8725:8741   */\n      add\n        /* \"#utility.yul\":8690:8755   */\n      tag_99\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":8780:8786   */\n      dup1\n        /* \"#utility.yul\":8775:8778   */\n      dup5\n        /* \"#utility.yul\":8771:8787   */\n      add\n        /* \"#utility.yul\":8764:8787   */\n      swap2\n      pop\n        /* \"#utility.yul\":8513:8793   */\n      pop\n        /* \"#utility.yul\":8403:8793   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8799:9228   */\n    tag_68:\n        /* \"#utility.yul\":8976:8979   */\n      0x00\n        /* \"#utility.yul\":8998:9090   */\n      tag_228\n        /* \"#utility.yul\":9086:9089   */\n      dup3\n        /* \"#utility.yul\":9077:9083   */\n      dup6\n        /* \"#utility.yul\":8998:9090   */\n      tag_127\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":8991:9090   */\n      swap2\n      pop\n        /* \"#utility.yul\":9107:9202   */\n      tag_229\n        /* \"#utility.yul\":9198:9201   */\n      dup3\n        /* \"#utility.yul\":9189:9195   */\n      dup5\n        /* \"#utility.yul\":9107:9202   */\n      tag_128\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":9100:9202   */\n      swap2\n      pop\n        /* \"#utility.yul\":9219:9222   */\n      dup2\n        /* \"#utility.yul\":9212:9222   */\n      swap1\n      pop\n        /* \"#utility.yul\":8799:9228   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9234:9414   */\n    tag_75:\n        /* \"#utility.yul\":9282:9359   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9279:9280   */\n      0x00\n        /* \"#utility.yul\":9272:9360   */\n      mstore\n        /* \"#utility.yul\":9379:9383   */\n      0x32\n        /* \"#utility.yul\":9376:9377   */\n      0x04\n        /* \"#utility.yul\":9369:9384   */\n      mstore\n        /* \"#utility.yul\":9403:9407   */\n      0x24\n        /* \"#utility.yul\":9400:9401   */\n      0x00\n        /* \"#utility.yul\":9393:9408   */\n      revert\n        /* \"#utility.yul\":9420:9600   */\n    tag_129:\n        /* \"#utility.yul\":9468:9545   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9465:9466   */\n      0x00\n        /* \"#utility.yul\":9458:9546   */\n      mstore\n        /* \"#utility.yul\":9565:9569   */\n      0x11\n        /* \"#utility.yul\":9562:9563   */\n      0x04\n        /* \"#utility.yul\":9555:9570   */\n      mstore\n        /* \"#utility.yul\":9589:9593   */\n      0x24\n        /* \"#utility.yul\":9586:9587   */\n      0x00\n        /* \"#utility.yul\":9579:9594   */\n      revert\n        /* \"#utility.yul\":9606:9773   */\n    tag_78:\n        /* \"#utility.yul\":9643:9646   */\n      0x00\n        /* \"#utility.yul\":9666:9688   */\n      tag_233\n        /* \"#utility.yul\":9682:9687   */\n      dup3\n        /* \"#utility.yul\":9666:9688   */\n      tag_102\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":9657:9688   */\n      swap2\n      pop\n        /* \"#utility.yul\":9710:9714   */\n      0xff\n        /* \"#utility.yul\":9703:9708   */\n      dup3\n        /* \"#utility.yul\":9700:9715   */\n      sub\n        /* \"#utility.yul\":9697:9738   */\n      tag_234\n      jumpi\n        /* \"#utility.yul\":9718:9736   */\n      tag_235\n      tag_129\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":9697:9738   */\n    tag_234:\n        /* \"#utility.yul\":9765:9766   */\n      0x01\n        /* \"#utility.yul\":9758:9763   */\n      dup3\n        /* \"#utility.yul\":9754:9767   */\n      add\n        /* \"#utility.yul\":9747:9767   */\n      swap1\n      pop\n        /* \"#utility.yul\":9606:9773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202ee99f0a55f292f0117329f20d9e897459eb6e84223f7b6467ba76b2a934f1f964736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3909": {
									"entryPoint": null,
									"id": 3909,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@calculateMiningRewards_3927": {
									"entryPoint": 714,
									"id": 3927,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateMiningTask_3987": {
									"entryPoint": 356,
									"id": 3987,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ceilDiv_2860": {
									"entryPoint": 968,
									"id": 2860,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_3472": {
									"entryPoint": 1054,
									"id": 3472,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toString_1762": {
									"entryPoint": 760,
									"id": 1762,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1719,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 1442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 1829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack": {
									"entryPoint": 3121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3218,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1391,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2383,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_bytes32": {
									"entryPoint": 3103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1705,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_bytes32": {
									"entryPoint": 3112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2887,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3279,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2014,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1537,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1513,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1517,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1404,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1400,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7": {
									"entryPoint": 2999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2152,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2284,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 1420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2321,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14770:23",
										"nodeType": "YulBlock",
										"src": "0:14770:23",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:23",
													"nodeType": "YulBlock",
													"src": "47:35:23",
													"statements": [
														{
															"nativeSrc": "57:19:23",
															"nodeType": "YulAssignment",
															"src": "57:19:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:23",
																		"nodeType": "YulLiteral",
																		"src": "73:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:23"
																},
																"nativeSrc": "67:9:23",
																"nodeType": "YulFunctionCall",
																"src": "67:9:23"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:23"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:23",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:23",
														"nodeType": "YulTypedName",
														"src": "40:6:23",
														"type": ""
													}
												],
												"src": "7:75:23"
											},
											{
												"body": {
													"nativeSrc": "177:28:23",
													"nodeType": "YulBlock",
													"src": "177:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:23",
																		"nodeType": "YulLiteral",
																		"src": "194:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:23",
																		"nodeType": "YulLiteral",
																		"src": "197:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:23"
																},
																"nativeSrc": "187:12:23",
																"nodeType": "YulFunctionCall",
																"src": "187:12:23"
															},
															"nativeSrc": "187:12:23",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:23"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:23",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:23"
											},
											{
												"body": {
													"nativeSrc": "300:28:23",
													"nodeType": "YulBlock",
													"src": "300:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:23",
																		"nodeType": "YulLiteral",
																		"src": "317:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:23",
																		"nodeType": "YulLiteral",
																		"src": "320:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:23"
																},
																"nativeSrc": "310:12:23",
																"nodeType": "YulFunctionCall",
																"src": "310:12:23"
															},
															"nativeSrc": "310:12:23",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:23"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:23",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:23"
											},
											{
												"body": {
													"nativeSrc": "377:43:23",
													"nodeType": "YulBlock",
													"src": "377:43:23",
													"statements": [
														{
															"nativeSrc": "387:27:23",
															"nodeType": "YulAssignment",
															"src": "387:27:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "402:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "402:5:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "409:4:23",
																		"nodeType": "YulLiteral",
																		"src": "409:4:23",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "398:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:23"
																},
																"nativeSrc": "398:16:23",
																"nodeType": "YulFunctionCall",
																"src": "398:16:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "387:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "387:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "334:86:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "359:5:23",
														"nodeType": "YulTypedName",
														"src": "359:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "369:7:23",
														"nodeType": "YulTypedName",
														"src": "369:7:23",
														"type": ""
													}
												],
												"src": "334:86:23"
											},
											{
												"body": {
													"nativeSrc": "467:77:23",
													"nodeType": "YulBlock",
													"src": "467:77:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "522:16:23",
																"nodeType": "YulBlock",
																"src": "522:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "531:1:23",
																					"nodeType": "YulLiteral",
																					"src": "531:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "534:1:23",
																					"nodeType": "YulLiteral",
																					"src": "534:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "524:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "524:6:23"
																			},
																			"nativeSrc": "524:12:23",
																			"nodeType": "YulFunctionCall",
																			"src": "524:12:23"
																		},
																		"nativeSrc": "524:12:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "524:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "490:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "490:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "513:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "513:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "497:15:23",
																					"nodeType": "YulIdentifier",
																					"src": "497:15:23"
																				},
																				"nativeSrc": "497:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "497:22:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "487:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "487:2:23"
																		},
																		"nativeSrc": "487:33:23",
																		"nodeType": "YulFunctionCall",
																		"src": "487:33:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "480:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:23"
																},
																"nativeSrc": "480:41:23",
																"nodeType": "YulFunctionCall",
																"src": "480:41:23"
															},
															"nativeSrc": "477:61:23",
															"nodeType": "YulIf",
															"src": "477:61:23"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "426:118:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "460:5:23",
														"nodeType": "YulTypedName",
														"src": "460:5:23",
														"type": ""
													}
												],
												"src": "426:118:23"
											},
											{
												"body": {
													"nativeSrc": "611:78:23",
													"nodeType": "YulBlock",
													"src": "611:78:23",
													"statements": [
														{
															"nativeSrc": "621:22:23",
															"nodeType": "YulAssignment",
															"src": "621:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "636:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "636:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "630:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "630:5:23"
																},
																"nativeSrc": "630:13:23",
																"nodeType": "YulFunctionCall",
																"src": "630:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "621:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "621:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "677:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "677:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "652:24:23",
																	"nodeType": "YulIdentifier",
																	"src": "652:24:23"
																},
																"nativeSrc": "652:31:23",
																"nodeType": "YulFunctionCall",
																"src": "652:31:23"
															},
															"nativeSrc": "652:31:23",
															"nodeType": "YulExpressionStatement",
															"src": "652:31:23"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "550:139:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "589:6:23",
														"nodeType": "YulTypedName",
														"src": "589:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "597:3:23",
														"nodeType": "YulTypedName",
														"src": "597:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "605:5:23",
														"nodeType": "YulTypedName",
														"src": "605:5:23",
														"type": ""
													}
												],
												"src": "550:139:23"
											},
											{
												"body": {
													"nativeSrc": "740:32:23",
													"nodeType": "YulBlock",
													"src": "740:32:23",
													"statements": [
														{
															"nativeSrc": "750:16:23",
															"nodeType": "YulAssignment",
															"src": "750:16:23",
															"value": {
																"name": "value",
																"nativeSrc": "761:5:23",
																"nodeType": "YulIdentifier",
																"src": "761:5:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "750:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "750:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "695:77:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "722:5:23",
														"nodeType": "YulTypedName",
														"src": "722:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "732:7:23",
														"nodeType": "YulTypedName",
														"src": "732:7:23",
														"type": ""
													}
												],
												"src": "695:77:23"
											},
											{
												"body": {
													"nativeSrc": "821:79:23",
													"nodeType": "YulBlock",
													"src": "821:79:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:23",
																"nodeType": "YulBlock",
																"src": "878:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:23",
																					"nodeType": "YulLiteral",
																					"src": "887:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:23",
																					"nodeType": "YulLiteral",
																					"src": "890:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:23"
																			},
																			"nativeSrc": "880:12:23",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:23"
																		},
																		"nativeSrc": "880:12:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "844:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "844:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "869:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "869:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "851:17:23",
																					"nodeType": "YulIdentifier",
																					"src": "851:17:23"
																				},
																				"nativeSrc": "851:24:23",
																				"nodeType": "YulFunctionCall",
																				"src": "851:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "841:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "841:2:23"
																		},
																		"nativeSrc": "841:35:23",
																		"nodeType": "YulFunctionCall",
																		"src": "841:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "834:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "834:6:23"
																},
																"nativeSrc": "834:43:23",
																"nodeType": "YulFunctionCall",
																"src": "834:43:23"
															},
															"nativeSrc": "831:63:23",
															"nodeType": "YulIf",
															"src": "831:63:23"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "778:122:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "814:5:23",
														"nodeType": "YulTypedName",
														"src": "814:5:23",
														"type": ""
													}
												],
												"src": "778:122:23"
											},
											{
												"body": {
													"nativeSrc": "969:80:23",
													"nodeType": "YulBlock",
													"src": "969:80:23",
													"statements": [
														{
															"nativeSrc": "979:22:23",
															"nodeType": "YulAssignment",
															"src": "979:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "994:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "994:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "988:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "988:5:23"
																},
																"nativeSrc": "988:13:23",
																"nodeType": "YulFunctionCall",
																"src": "988:13:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "979:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "979:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1037:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "1037:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1010:26:23",
																	"nodeType": "YulIdentifier",
																	"src": "1010:26:23"
																},
																"nativeSrc": "1010:33:23",
																"nodeType": "YulFunctionCall",
																"src": "1010:33:23"
															},
															"nativeSrc": "1010:33:23",
															"nodeType": "YulExpressionStatement",
															"src": "1010:33:23"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "906:143:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "947:6:23",
														"nodeType": "YulTypedName",
														"src": "947:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "955:3:23",
														"nodeType": "YulTypedName",
														"src": "955:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "963:5:23",
														"nodeType": "YulTypedName",
														"src": "963:5:23",
														"type": ""
													}
												],
												"src": "906:143:23"
											},
											{
												"body": {
													"nativeSrc": "1144:28:23",
													"nodeType": "YulBlock",
													"src": "1144:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1161:1:23",
																		"nodeType": "YulLiteral",
																		"src": "1161:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1164:1:23",
																		"nodeType": "YulLiteral",
																		"src": "1164:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1154:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:23"
																},
																"nativeSrc": "1154:12:23",
																"nodeType": "YulFunctionCall",
																"src": "1154:12:23"
															},
															"nativeSrc": "1154:12:23",
															"nodeType": "YulExpressionStatement",
															"src": "1154:12:23"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1055:117:23",
												"nodeType": "YulFunctionDefinition",
												"src": "1055:117:23"
											},
											{
												"body": {
													"nativeSrc": "1267:28:23",
													"nodeType": "YulBlock",
													"src": "1267:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1284:1:23",
																		"nodeType": "YulLiteral",
																		"src": "1284:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1287:1:23",
																		"nodeType": "YulLiteral",
																		"src": "1287:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1277:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:23"
																},
																"nativeSrc": "1277:12:23",
																"nodeType": "YulFunctionCall",
																"src": "1277:12:23"
															},
															"nativeSrc": "1277:12:23",
															"nodeType": "YulExpressionStatement",
															"src": "1277:12:23"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "1178:117:23",
												"nodeType": "YulFunctionDefinition",
												"src": "1178:117:23"
											},
											{
												"body": {
													"nativeSrc": "1349:54:23",
													"nodeType": "YulBlock",
													"src": "1349:54:23",
													"statements": [
														{
															"nativeSrc": "1359:38:23",
															"nodeType": "YulAssignment",
															"src": "1359:38:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1377:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "1377:5:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1384:2:23",
																				"nodeType": "YulLiteral",
																				"src": "1384:2:23",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1373:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "1373:3:23"
																		},
																		"nativeSrc": "1373:14:23",
																		"nodeType": "YulFunctionCall",
																		"src": "1373:14:23"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1393:2:23",
																				"nodeType": "YulLiteral",
																				"src": "1393:2:23",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1389:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:23"
																		},
																		"nativeSrc": "1389:7:23",
																		"nodeType": "YulFunctionCall",
																		"src": "1389:7:23"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1369:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "1369:3:23"
																},
																"nativeSrc": "1369:28:23",
																"nodeType": "YulFunctionCall",
																"src": "1369:28:23"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1359:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1359:6:23"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1301:102:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1332:5:23",
														"nodeType": "YulTypedName",
														"src": "1332:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1342:6:23",
														"nodeType": "YulTypedName",
														"src": "1342:6:23",
														"type": ""
													}
												],
												"src": "1301:102:23"
											},
											{
												"body": {
													"nativeSrc": "1437:152:23",
													"nodeType": "YulBlock",
													"src": "1437:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1454:1:23",
																		"nodeType": "YulLiteral",
																		"src": "1454:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:77:23",
																		"nodeType": "YulLiteral",
																		"src": "1457:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1447:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:23"
																},
																"nativeSrc": "1447:88:23",
																"nodeType": "YulFunctionCall",
																"src": "1447:88:23"
															},
															"nativeSrc": "1447:88:23",
															"nodeType": "YulExpressionStatement",
															"src": "1447:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1551:1:23",
																		"nodeType": "YulLiteral",
																		"src": "1551:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1554:4:23",
																		"nodeType": "YulLiteral",
																		"src": "1554:4:23",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1544:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1544:6:23"
																},
																"nativeSrc": "1544:15:23",
																"nodeType": "YulFunctionCall",
																"src": "1544:15:23"
															},
															"nativeSrc": "1544:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "1544:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1575:1:23",
																		"nodeType": "YulLiteral",
																		"src": "1575:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1578:4:23",
																		"nodeType": "YulLiteral",
																		"src": "1578:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1568:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1568:6:23"
																},
																"nativeSrc": "1568:15:23",
																"nodeType": "YulFunctionCall",
																"src": "1568:15:23"
															},
															"nativeSrc": "1568:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "1568:15:23"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1409:180:23",
												"nodeType": "YulFunctionDefinition",
												"src": "1409:180:23"
											},
											{
												"body": {
													"nativeSrc": "1638:238:23",
													"nodeType": "YulBlock",
													"src": "1638:238:23",
													"statements": [
														{
															"nativeSrc": "1648:58:23",
															"nodeType": "YulVariableDeclaration",
															"src": "1648:58:23",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1670:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1700:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "1700:4:23"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1678:21:23",
																			"nodeType": "YulIdentifier",
																			"src": "1678:21:23"
																		},
																		"nativeSrc": "1678:27:23",
																		"nodeType": "YulFunctionCall",
																		"src": "1678:27:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1666:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "1666:3:23"
																},
																"nativeSrc": "1666:40:23",
																"nodeType": "YulFunctionCall",
																"src": "1666:40:23"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1652:10:23",
																	"nodeType": "YulTypedName",
																	"src": "1652:10:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1817:22:23",
																"nodeType": "YulBlock",
																"src": "1817:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1819:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "1819:16:23"
																			},
																			"nativeSrc": "1819:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "1819:18:23"
																		},
																		"nativeSrc": "1819:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "1819:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1760:10:23",
																				"nodeType": "YulIdentifier",
																				"src": "1760:10:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1772:18:23",
																				"nodeType": "YulLiteral",
																				"src": "1772:18:23",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1757:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "1757:2:23"
																		},
																		"nativeSrc": "1757:34:23",
																		"nodeType": "YulFunctionCall",
																		"src": "1757:34:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1796:10:23",
																				"nodeType": "YulIdentifier",
																				"src": "1796:10:23"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1808:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "1808:6:23"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1793:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "1793:2:23"
																		},
																		"nativeSrc": "1793:22:23",
																		"nodeType": "YulFunctionCall",
																		"src": "1793:22:23"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1754:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "1754:2:23"
																},
																"nativeSrc": "1754:62:23",
																"nodeType": "YulFunctionCall",
																"src": "1754:62:23"
															},
															"nativeSrc": "1751:88:23",
															"nodeType": "YulIf",
															"src": "1751:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1855:2:23",
																		"nodeType": "YulLiteral",
																		"src": "1855:2:23",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1859:10:23",
																		"nodeType": "YulIdentifier",
																		"src": "1859:10:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1848:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1848:6:23"
																},
																"nativeSrc": "1848:22:23",
																"nodeType": "YulFunctionCall",
																"src": "1848:22:23"
															},
															"nativeSrc": "1848:22:23",
															"nodeType": "YulExpressionStatement",
															"src": "1848:22:23"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1595:281:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1624:6:23",
														"nodeType": "YulTypedName",
														"src": "1624:6:23",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1632:4:23",
														"nodeType": "YulTypedName",
														"src": "1632:4:23",
														"type": ""
													}
												],
												"src": "1595:281:23"
											},
											{
												"body": {
													"nativeSrc": "1923:88:23",
													"nodeType": "YulBlock",
													"src": "1923:88:23",
													"statements": [
														{
															"nativeSrc": "1933:30:23",
															"nodeType": "YulAssignment",
															"src": "1933:30:23",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1943:18:23",
																	"nodeType": "YulIdentifier",
																	"src": "1943:18:23"
																},
																"nativeSrc": "1943:20:23",
																"nodeType": "YulFunctionCall",
																"src": "1943:20:23"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1933:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1933:6:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1992:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "1992:6:23"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "2000:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "2000:4:23"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1972:19:23",
																	"nodeType": "YulIdentifier",
																	"src": "1972:19:23"
																},
																"nativeSrc": "1972:33:23",
																"nodeType": "YulFunctionCall",
																"src": "1972:33:23"
															},
															"nativeSrc": "1972:33:23",
															"nodeType": "YulExpressionStatement",
															"src": "1972:33:23"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1882:129:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1907:4:23",
														"nodeType": "YulTypedName",
														"src": "1907:4:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1916:6:23",
														"nodeType": "YulTypedName",
														"src": "1916:6:23",
														"type": ""
													}
												],
												"src": "1882:129:23"
											},
											{
												"body": {
													"nativeSrc": "2084:241:23",
													"nodeType": "YulBlock",
													"src": "2084:241:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "2189:22:23",
																"nodeType": "YulBlock",
																"src": "2189:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2191:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "2191:16:23"
																			},
																			"nativeSrc": "2191:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "2191:18:23"
																		},
																		"nativeSrc": "2191:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "2191:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2161:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "2161:6:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2169:18:23",
																		"nodeType": "YulLiteral",
																		"src": "2169:18:23",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2158:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "2158:2:23"
																},
																"nativeSrc": "2158:30:23",
																"nodeType": "YulFunctionCall",
																"src": "2158:30:23"
															},
															"nativeSrc": "2155:56:23",
															"nodeType": "YulIf",
															"src": "2155:56:23"
														},
														{
															"nativeSrc": "2221:37:23",
															"nodeType": "YulAssignment",
															"src": "2221:37:23",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2251:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "2251:6:23"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2229:21:23",
																	"nodeType": "YulIdentifier",
																	"src": "2229:21:23"
																},
																"nativeSrc": "2229:29:23",
																"nodeType": "YulFunctionCall",
																"src": "2229:29:23"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2221:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "2221:4:23"
																}
															]
														},
														{
															"nativeSrc": "2295:23:23",
															"nodeType": "YulAssignment",
															"src": "2295:23:23",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2307:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "2307:4:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2313:4:23",
																		"nodeType": "YulLiteral",
																		"src": "2313:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2303:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "2303:3:23"
																},
																"nativeSrc": "2303:15:23",
																"nodeType": "YulFunctionCall",
																"src": "2303:15:23"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2295:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "2295:4:23"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "2017:308:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2068:6:23",
														"nodeType": "YulTypedName",
														"src": "2068:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2079:4:23",
														"nodeType": "YulTypedName",
														"src": "2079:4:23",
														"type": ""
													}
												],
												"src": "2017:308:23"
											},
											{
												"body": {
													"nativeSrc": "2393:77:23",
													"nodeType": "YulBlock",
													"src": "2393:77:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2410:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "2410:3:23"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2415:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "2415:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2420:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "2420:6:23"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2404:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "2404:5:23"
																},
																"nativeSrc": "2404:23:23",
																"nodeType": "YulFunctionCall",
																"src": "2404:23:23"
															},
															"nativeSrc": "2404:23:23",
															"nodeType": "YulExpressionStatement",
															"src": "2404:23:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2447:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "2447:3:23"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2452:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "2452:6:23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2443:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "2443:3:23"
																		},
																		"nativeSrc": "2443:16:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2443:16:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2461:1:23",
																		"nodeType": "YulLiteral",
																		"src": "2461:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2436:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "2436:6:23"
																},
																"nativeSrc": "2436:27:23",
																"nodeType": "YulFunctionCall",
																"src": "2436:27:23"
															},
															"nativeSrc": "2436:27:23",
															"nodeType": "YulExpressionStatement",
															"src": "2436:27:23"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2331:139:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2375:3:23",
														"nodeType": "YulTypedName",
														"src": "2375:3:23",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2380:3:23",
														"nodeType": "YulTypedName",
														"src": "2380:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2385:6:23",
														"nodeType": "YulTypedName",
														"src": "2385:6:23",
														"type": ""
													}
												],
												"src": "2331:139:23"
											},
											{
												"body": {
													"nativeSrc": "2571:339:23",
													"nodeType": "YulBlock",
													"src": "2571:339:23",
													"statements": [
														{
															"nativeSrc": "2581:75:23",
															"nodeType": "YulAssignment",
															"src": "2581:75:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2648:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "2648:6:23"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2606:41:23",
																			"nodeType": "YulIdentifier",
																			"src": "2606:41:23"
																		},
																		"nativeSrc": "2606:49:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2606:49:23"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2590:15:23",
																	"nodeType": "YulIdentifier",
																	"src": "2590:15:23"
																},
																"nativeSrc": "2590:66:23",
																"nodeType": "YulFunctionCall",
																"src": "2590:66:23"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2581:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "2581:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2672:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "2672:5:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2679:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "2679:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2665:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "2665:6:23"
																},
																"nativeSrc": "2665:21:23",
																"nodeType": "YulFunctionCall",
																"src": "2665:21:23"
															},
															"nativeSrc": "2665:21:23",
															"nodeType": "YulExpressionStatement",
															"src": "2665:21:23"
														},
														{
															"nativeSrc": "2695:27:23",
															"nodeType": "YulVariableDeclaration",
															"src": "2695:27:23",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2710:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "2710:5:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2717:4:23",
																		"nodeType": "YulLiteral",
																		"src": "2717:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2706:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "2706:3:23"
																},
																"nativeSrc": "2706:16:23",
																"nodeType": "YulFunctionCall",
																"src": "2706:16:23"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2699:3:23",
																	"nodeType": "YulTypedName",
																	"src": "2699:3:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2760:83:23",
																"nodeType": "YulBlock",
																"src": "2760:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2762:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "2762:77:23"
																			},
																			"nativeSrc": "2762:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "2762:79:23"
																		},
																		"nativeSrc": "2762:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "2762:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2741:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "2741:3:23"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2746:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "2746:6:23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2737:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "2737:3:23"
																		},
																		"nativeSrc": "2737:16:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2737:16:23"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2755:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "2755:3:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2734:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "2734:2:23"
																},
																"nativeSrc": "2734:25:23",
																"nodeType": "YulFunctionCall",
																"src": "2734:25:23"
															},
															"nativeSrc": "2731:112:23",
															"nodeType": "YulIf",
															"src": "2731:112:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2887:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "2887:3:23"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2892:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "2892:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2897:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "2897:6:23"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2852:34:23",
																	"nodeType": "YulIdentifier",
																	"src": "2852:34:23"
																},
																"nativeSrc": "2852:52:23",
																"nodeType": "YulFunctionCall",
																"src": "2852:52:23"
															},
															"nativeSrc": "2852:52:23",
															"nodeType": "YulExpressionStatement",
															"src": "2852:52:23"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2476:434:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2544:3:23",
														"nodeType": "YulTypedName",
														"src": "2544:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2549:6:23",
														"nodeType": "YulTypedName",
														"src": "2549:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2557:3:23",
														"nodeType": "YulTypedName",
														"src": "2557:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2565:5:23",
														"nodeType": "YulTypedName",
														"src": "2565:5:23",
														"type": ""
													}
												],
												"src": "2476:434:23"
											},
											{
												"body": {
													"nativeSrc": "3003:282:23",
													"nodeType": "YulBlock",
													"src": "3003:282:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "3052:83:23",
																"nodeType": "YulBlock",
																"src": "3052:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3054:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "3054:77:23"
																			},
																			"nativeSrc": "3054:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "3054:79:23"
																		},
																		"nativeSrc": "3054:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "3054:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3031:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "3031:6:23"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3039:4:23",
																						"nodeType": "YulLiteral",
																						"src": "3039:4:23",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3027:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "3027:3:23"
																				},
																				"nativeSrc": "3027:17:23",
																				"nodeType": "YulFunctionCall",
																				"src": "3027:17:23"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3046:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "3046:3:23"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3023:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "3023:3:23"
																		},
																		"nativeSrc": "3023:27:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3023:27:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3016:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "3016:6:23"
																},
																"nativeSrc": "3016:35:23",
																"nodeType": "YulFunctionCall",
																"src": "3016:35:23"
															},
															"nativeSrc": "3013:122:23",
															"nodeType": "YulIf",
															"src": "3013:122:23"
														},
														{
															"nativeSrc": "3144:27:23",
															"nodeType": "YulVariableDeclaration",
															"src": "3144:27:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3164:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "3164:6:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3158:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "3158:5:23"
																},
																"nativeSrc": "3158:13:23",
																"nodeType": "YulFunctionCall",
																"src": "3158:13:23"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3148:6:23",
																	"nodeType": "YulTypedName",
																	"src": "3148:6:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3180:99:23",
															"nodeType": "YulAssignment",
															"src": "3180:99:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3252:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "3252:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3260:4:23",
																				"nodeType": "YulLiteral",
																				"src": "3260:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3248:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "3248:3:23"
																		},
																		"nativeSrc": "3248:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3248:17:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3267:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "3267:6:23"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3275:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "3275:3:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "3189:58:23",
																	"nodeType": "YulIdentifier",
																	"src": "3189:58:23"
																},
																"nativeSrc": "3189:90:23",
																"nodeType": "YulFunctionCall",
																"src": "3189:90:23"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3180:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "3180:5:23"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2930:355:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2981:6:23",
														"nodeType": "YulTypedName",
														"src": "2981:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2989:3:23",
														"nodeType": "YulTypedName",
														"src": "2989:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2997:5:23",
														"nodeType": "YulTypedName",
														"src": "2997:5:23",
														"type": ""
													}
												],
												"src": "2930:355:23"
											},
											{
												"body": {
													"nativeSrc": "3454:1156:23",
													"nodeType": "YulBlock",
													"src": "3454:1156:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "3501:83:23",
																"nodeType": "YulBlock",
																"src": "3501:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3503:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "3503:77:23"
																			},
																			"nativeSrc": "3503:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "3503:79:23"
																		},
																		"nativeSrc": "3503:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "3503:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3475:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "3475:7:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3484:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "3484:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3471:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "3471:3:23"
																		},
																		"nativeSrc": "3471:23:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3471:23:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3496:3:23",
																		"nodeType": "YulLiteral",
																		"src": "3496:3:23",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3467:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "3467:3:23"
																},
																"nativeSrc": "3467:33:23",
																"nodeType": "YulFunctionCall",
																"src": "3467:33:23"
															},
															"nativeSrc": "3464:120:23",
															"nodeType": "YulIf",
															"src": "3464:120:23"
														},
														{
															"nativeSrc": "3594:126:23",
															"nodeType": "YulBlock",
															"src": "3594:126:23",
															"statements": [
																{
																	"nativeSrc": "3609:15:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3609:15:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3623:1:23",
																		"nodeType": "YulLiteral",
																		"src": "3623:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3613:6:23",
																			"nodeType": "YulTypedName",
																			"src": "3613:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3638:72:23",
																	"nodeType": "YulAssignment",
																	"src": "3638:72:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3682:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "3682:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3693:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "3693:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3678:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "3678:3:23"
																				},
																				"nativeSrc": "3678:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "3678:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3702:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "3702:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "3648:29:23",
																			"nodeType": "YulIdentifier",
																			"src": "3648:29:23"
																		},
																		"nativeSrc": "3648:62:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3648:62:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3638:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "3638:6:23"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3730:129:23",
															"nodeType": "YulBlock",
															"src": "3730:129:23",
															"statements": [
																{
																	"nativeSrc": "3745:16:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3745:16:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3759:2:23",
																		"nodeType": "YulLiteral",
																		"src": "3759:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3749:6:23",
																			"nodeType": "YulTypedName",
																			"src": "3749:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3775:74:23",
																	"nodeType": "YulAssignment",
																	"src": "3775:74:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3821:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "3821:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3832:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "3832:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3817:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "3817:3:23"
																				},
																				"nativeSrc": "3817:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "3817:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3841:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "3841:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3785:31:23",
																			"nodeType": "YulIdentifier",
																			"src": "3785:31:23"
																		},
																		"nativeSrc": "3785:64:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3785:64:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3775:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "3775:6:23"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3869:292:23",
															"nodeType": "YulBlock",
															"src": "3869:292:23",
															"statements": [
																{
																	"nativeSrc": "3884:39:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3884:39:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3908:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "3908:9:23"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3919:2:23",
																						"nodeType": "YulLiteral",
																						"src": "3919:2:23",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3904:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "3904:3:23"
																				},
																				"nativeSrc": "3904:18:23",
																				"nodeType": "YulFunctionCall",
																				"src": "3904:18:23"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3898:5:23",
																			"nodeType": "YulIdentifier",
																			"src": "3898:5:23"
																		},
																		"nativeSrc": "3898:25:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3898:25:23"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3888:6:23",
																			"nodeType": "YulTypedName",
																			"src": "3888:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3970:83:23",
																		"nodeType": "YulBlock",
																		"src": "3970:83:23",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3972:77:23",
																						"nodeType": "YulIdentifier",
																						"src": "3972:77:23"
																					},
																					"nativeSrc": "3972:79:23",
																					"nodeType": "YulFunctionCall",
																					"src": "3972:79:23"
																				},
																				"nativeSrc": "3972:79:23",
																				"nodeType": "YulExpressionStatement",
																				"src": "3972:79:23"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3942:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "3942:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3950:18:23",
																				"nodeType": "YulLiteral",
																				"src": "3950:18:23",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3939:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "3939:2:23"
																		},
																		"nativeSrc": "3939:30:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3939:30:23"
																	},
																	"nativeSrc": "3936:117:23",
																	"nodeType": "YulIf",
																	"src": "3936:117:23"
																},
																{
																	"nativeSrc": "4067:84:23",
																	"nodeType": "YulAssignment",
																	"src": "4067:84:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4123:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "4123:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4134:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "4134:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4119:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "4119:3:23"
																				},
																				"nativeSrc": "4119:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "4119:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4143:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "4143:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4077:41:23",
																			"nodeType": "YulIdentifier",
																			"src": "4077:41:23"
																		},
																		"nativeSrc": "4077:74:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4077:74:23"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4067:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "4067:6:23"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4171:292:23",
															"nodeType": "YulBlock",
															"src": "4171:292:23",
															"statements": [
																{
																	"nativeSrc": "4186:39:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4186:39:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4210:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "4210:9:23"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4221:2:23",
																						"nodeType": "YulLiteral",
																						"src": "4221:2:23",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4206:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "4206:3:23"
																				},
																				"nativeSrc": "4206:18:23",
																				"nodeType": "YulFunctionCall",
																				"src": "4206:18:23"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4200:5:23",
																			"nodeType": "YulIdentifier",
																			"src": "4200:5:23"
																		},
																		"nativeSrc": "4200:25:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:25:23"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4190:6:23",
																			"nodeType": "YulTypedName",
																			"src": "4190:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4272:83:23",
																		"nodeType": "YulBlock",
																		"src": "4272:83:23",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4274:77:23",
																						"nodeType": "YulIdentifier",
																						"src": "4274:77:23"
																					},
																					"nativeSrc": "4274:79:23",
																					"nodeType": "YulFunctionCall",
																					"src": "4274:79:23"
																				},
																				"nativeSrc": "4274:79:23",
																				"nodeType": "YulExpressionStatement",
																				"src": "4274:79:23"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4244:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "4244:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4252:18:23",
																				"nodeType": "YulLiteral",
																				"src": "4252:18:23",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4241:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "4241:2:23"
																		},
																		"nativeSrc": "4241:30:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4241:30:23"
																	},
																	"nativeSrc": "4238:117:23",
																	"nodeType": "YulIf",
																	"src": "4238:117:23"
																},
																{
																	"nativeSrc": "4369:84:23",
																	"nodeType": "YulAssignment",
																	"src": "4369:84:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4425:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "4425:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4436:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "4436:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4421:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "4421:3:23"
																				},
																				"nativeSrc": "4421:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "4421:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4445:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "4445:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4379:41:23",
																			"nodeType": "YulIdentifier",
																			"src": "4379:41:23"
																		},
																		"nativeSrc": "4379:74:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4379:74:23"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4369:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "4369:6:23"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4473:130:23",
															"nodeType": "YulBlock",
															"src": "4473:130:23",
															"statements": [
																{
																	"nativeSrc": "4488:17:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4488:17:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4502:3:23",
																		"nodeType": "YulLiteral",
																		"src": "4502:3:23",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4492:6:23",
																			"nodeType": "YulTypedName",
																			"src": "4492:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4519:74:23",
																	"nodeType": "YulAssignment",
																	"src": "4519:74:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4565:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "4565:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4576:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "4576:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4561:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "4561:3:23"
																				},
																				"nativeSrc": "4561:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "4561:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4585:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "4585:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4529:31:23",
																			"nodeType": "YulIdentifier",
																			"src": "4529:31:23"
																		},
																		"nativeSrc": "4529:64:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4529:64:23"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "4519:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "4519:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nativeSrc": "3291:1319:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3392:9:23",
														"nodeType": "YulTypedName",
														"src": "3392:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3403:7:23",
														"nodeType": "YulTypedName",
														"src": "3403:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3415:6:23",
														"nodeType": "YulTypedName",
														"src": "3415:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3423:6:23",
														"nodeType": "YulTypedName",
														"src": "3423:6:23",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3431:6:23",
														"nodeType": "YulTypedName",
														"src": "3431:6:23",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3439:6:23",
														"nodeType": "YulTypedName",
														"src": "3439:6:23",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3447:6:23",
														"nodeType": "YulTypedName",
														"src": "3447:6:23",
														"type": ""
													}
												],
												"src": "3291:1319:23"
											},
											{
												"body": {
													"nativeSrc": "4675:40:23",
													"nodeType": "YulBlock",
													"src": "4675:40:23",
													"statements": [
														{
															"nativeSrc": "4686:22:23",
															"nodeType": "YulAssignment",
															"src": "4686:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4702:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "4702:5:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4696:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "4696:5:23"
																},
																"nativeSrc": "4696:12:23",
																"nodeType": "YulFunctionCall",
																"src": "4696:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4686:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:23"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4616:99:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4658:5:23",
														"nodeType": "YulTypedName",
														"src": "4658:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4668:6:23",
														"nodeType": "YulTypedName",
														"src": "4668:6:23",
														"type": ""
													}
												],
												"src": "4616:99:23"
											},
											{
												"body": {
													"nativeSrc": "4749:152:23",
													"nodeType": "YulBlock",
													"src": "4749:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4766:1:23",
																		"nodeType": "YulLiteral",
																		"src": "4766:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4769:77:23",
																		"nodeType": "YulLiteral",
																		"src": "4769:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4759:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "4759:6:23"
																},
																"nativeSrc": "4759:88:23",
																"nodeType": "YulFunctionCall",
																"src": "4759:88:23"
															},
															"nativeSrc": "4759:88:23",
															"nodeType": "YulExpressionStatement",
															"src": "4759:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4863:1:23",
																		"nodeType": "YulLiteral",
																		"src": "4863:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4866:4:23",
																		"nodeType": "YulLiteral",
																		"src": "4866:4:23",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4856:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "4856:6:23"
																},
																"nativeSrc": "4856:15:23",
																"nodeType": "YulFunctionCall",
																"src": "4856:15:23"
															},
															"nativeSrc": "4856:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "4856:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4887:1:23",
																		"nodeType": "YulLiteral",
																		"src": "4887:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4890:4:23",
																		"nodeType": "YulLiteral",
																		"src": "4890:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4880:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "4880:6:23"
																},
																"nativeSrc": "4880:15:23",
																"nodeType": "YulFunctionCall",
																"src": "4880:15:23"
															},
															"nativeSrc": "4880:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "4880:15:23"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4721:180:23",
												"nodeType": "YulFunctionDefinition",
												"src": "4721:180:23"
											},
											{
												"body": {
													"nativeSrc": "4958:269:23",
													"nodeType": "YulBlock",
													"src": "4958:269:23",
													"statements": [
														{
															"nativeSrc": "4968:22:23",
															"nodeType": "YulAssignment",
															"src": "4968:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4982:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "4982:4:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:1:23",
																		"nodeType": "YulLiteral",
																		"src": "4988:1:23",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4978:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "4978:3:23"
																},
																"nativeSrc": "4978:12:23",
																"nodeType": "YulFunctionCall",
																"src": "4978:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4968:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "4968:6:23"
																}
															]
														},
														{
															"nativeSrc": "4999:38:23",
															"nodeType": "YulVariableDeclaration",
															"src": "4999:38:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5029:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "5029:4:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5035:1:23",
																		"nodeType": "YulLiteral",
																		"src": "5035:1:23",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5025:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "5025:3:23"
																},
																"nativeSrc": "5025:12:23",
																"nodeType": "YulFunctionCall",
																"src": "5025:12:23"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5003:18:23",
																	"nodeType": "YulTypedName",
																	"src": "5003:18:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5076:51:23",
																"nodeType": "YulBlock",
																"src": "5076:51:23",
																"statements": [
																	{
																		"nativeSrc": "5090:27:23",
																		"nodeType": "YulAssignment",
																		"src": "5090:27:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5104:6:23",
																					"nodeType": "YulIdentifier",
																					"src": "5104:6:23"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5112:4:23",
																					"nodeType": "YulLiteral",
																					"src": "5112:4:23",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5100:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "5100:3:23"
																			},
																			"nativeSrc": "5100:17:23",
																			"nodeType": "YulFunctionCall",
																			"src": "5100:17:23"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5090:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "5090:6:23"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5056:18:23",
																		"nodeType": "YulIdentifier",
																		"src": "5056:18:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5049:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "5049:6:23"
																},
																"nativeSrc": "5049:26:23",
																"nodeType": "YulFunctionCall",
																"src": "5049:26:23"
															},
															"nativeSrc": "5046:81:23",
															"nodeType": "YulIf",
															"src": "5046:81:23"
														},
														{
															"body": {
																"nativeSrc": "5179:42:23",
																"nodeType": "YulBlock",
																"src": "5179:42:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5193:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "5193:16:23"
																			},
																			"nativeSrc": "5193:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "5193:18:23"
																		},
																		"nativeSrc": "5193:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "5193:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5143:18:23",
																		"nodeType": "YulIdentifier",
																		"src": "5143:18:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5166:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "5166:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5174:2:23",
																				"nodeType": "YulLiteral",
																				"src": "5174:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5163:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "5163:2:23"
																		},
																		"nativeSrc": "5163:14:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5163:14:23"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5140:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "5140:2:23"
																},
																"nativeSrc": "5140:38:23",
																"nodeType": "YulFunctionCall",
																"src": "5140:38:23"
															},
															"nativeSrc": "5137:84:23",
															"nodeType": "YulIf",
															"src": "5137:84:23"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4907:320:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4942:4:23",
														"nodeType": "YulTypedName",
														"src": "4942:4:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4951:6:23",
														"nodeType": "YulTypedName",
														"src": "4951:6:23",
														"type": ""
													}
												],
												"src": "4907:320:23"
											},
											{
												"body": {
													"nativeSrc": "5287:87:23",
													"nodeType": "YulBlock",
													"src": "5287:87:23",
													"statements": [
														{
															"nativeSrc": "5297:11:23",
															"nodeType": "YulAssignment",
															"src": "5297:11:23",
															"value": {
																"name": "ptr",
																"nativeSrc": "5305:3:23",
																"nodeType": "YulIdentifier",
																"src": "5305:3:23"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5297:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "5297:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5325:1:23",
																		"nodeType": "YulLiteral",
																		"src": "5325:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5328:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "5328:3:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5318:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "5318:6:23"
																},
																"nativeSrc": "5318:14:23",
																"nodeType": "YulFunctionCall",
																"src": "5318:14:23"
															},
															"nativeSrc": "5318:14:23",
															"nodeType": "YulExpressionStatement",
															"src": "5318:14:23"
														},
														{
															"nativeSrc": "5341:26:23",
															"nodeType": "YulAssignment",
															"src": "5341:26:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5359:1:23",
																		"nodeType": "YulLiteral",
																		"src": "5359:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5362:4:23",
																		"nodeType": "YulLiteral",
																		"src": "5362:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5349:9:23",
																	"nodeType": "YulIdentifier",
																	"src": "5349:9:23"
																},
																"nativeSrc": "5349:18:23",
																"nodeType": "YulFunctionCall",
																"src": "5349:18:23"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5341:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "5341:4:23"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5233:141:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5274:3:23",
														"nodeType": "YulTypedName",
														"src": "5274:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5282:4:23",
														"nodeType": "YulTypedName",
														"src": "5282:4:23",
														"type": ""
													}
												],
												"src": "5233:141:23"
											},
											{
												"body": {
													"nativeSrc": "5424:49:23",
													"nodeType": "YulBlock",
													"src": "5424:49:23",
													"statements": [
														{
															"nativeSrc": "5434:33:23",
															"nodeType": "YulAssignment",
															"src": "5434:33:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5452:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "5452:5:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5459:2:23",
																				"nodeType": "YulLiteral",
																				"src": "5459:2:23",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5448:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "5448:3:23"
																		},
																		"nativeSrc": "5448:14:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5448:14:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5464:2:23",
																		"nodeType": "YulLiteral",
																		"src": "5464:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5444:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "5444:3:23"
																},
																"nativeSrc": "5444:23:23",
																"nodeType": "YulFunctionCall",
																"src": "5444:23:23"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5434:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "5434:6:23"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5380:93:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5407:5:23",
														"nodeType": "YulTypedName",
														"src": "5407:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5417:6:23",
														"nodeType": "YulTypedName",
														"src": "5417:6:23",
														"type": ""
													}
												],
												"src": "5380:93:23"
											},
											{
												"body": {
													"nativeSrc": "5532:54:23",
													"nodeType": "YulBlock",
													"src": "5532:54:23",
													"statements": [
														{
															"nativeSrc": "5542:37:23",
															"nodeType": "YulAssignment",
															"src": "5542:37:23",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5567:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "5567:4:23"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5573:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "5573:5:23"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5563:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "5563:3:23"
																},
																"nativeSrc": "5563:16:23",
																"nodeType": "YulFunctionCall",
																"src": "5563:16:23"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5542:8:23",
																	"nodeType": "YulIdentifier",
																	"src": "5542:8:23"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5479:107:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5507:4:23",
														"nodeType": "YulTypedName",
														"src": "5507:4:23",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5513:5:23",
														"nodeType": "YulTypedName",
														"src": "5513:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5523:8:23",
														"nodeType": "YulTypedName",
														"src": "5523:8:23",
														"type": ""
													}
												],
												"src": "5479:107:23"
											},
											{
												"body": {
													"nativeSrc": "5668:317:23",
													"nodeType": "YulBlock",
													"src": "5668:317:23",
													"statements": [
														{
															"nativeSrc": "5678:35:23",
															"nodeType": "YulVariableDeclaration",
															"src": "5678:35:23",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5699:10:23",
																		"nodeType": "YulIdentifier",
																		"src": "5699:10:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5711:1:23",
																		"nodeType": "YulLiteral",
																		"src": "5711:1:23",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5695:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "5695:3:23"
																},
																"nativeSrc": "5695:18:23",
																"nodeType": "YulFunctionCall",
																"src": "5695:18:23"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5682:9:23",
																	"nodeType": "YulTypedName",
																	"src": "5682:9:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5722:109:23",
															"nodeType": "YulVariableDeclaration",
															"src": "5722:109:23",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5753:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "5753:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5764:66:23",
																		"nodeType": "YulLiteral",
																		"src": "5764:66:23",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5734:18:23",
																	"nodeType": "YulIdentifier",
																	"src": "5734:18:23"
																},
																"nativeSrc": "5734:97:23",
																"nodeType": "YulFunctionCall",
																"src": "5734:97:23"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5726:4:23",
																	"nodeType": "YulTypedName",
																	"src": "5726:4:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5840:51:23",
															"nodeType": "YulAssignment",
															"src": "5840:51:23",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5871:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "5871:9:23"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5882:8:23",
																		"nodeType": "YulIdentifier",
																		"src": "5882:8:23"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5852:18:23",
																	"nodeType": "YulIdentifier",
																	"src": "5852:18:23"
																},
																"nativeSrc": "5852:39:23",
																"nodeType": "YulFunctionCall",
																"src": "5852:39:23"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5840:8:23",
																	"nodeType": "YulIdentifier",
																	"src": "5840:8:23"
																}
															]
														},
														{
															"nativeSrc": "5900:30:23",
															"nodeType": "YulAssignment",
															"src": "5900:30:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5913:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "5913:5:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5924:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "5924:4:23"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5920:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "5920:3:23"
																		},
																		"nativeSrc": "5920:9:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5920:9:23"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5909:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "5909:3:23"
																},
																"nativeSrc": "5909:21:23",
																"nodeType": "YulFunctionCall",
																"src": "5909:21:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5900:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "5900:5:23"
																}
															]
														},
														{
															"nativeSrc": "5939:40:23",
															"nodeType": "YulAssignment",
															"src": "5939:40:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5952:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "5952:5:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5963:8:23",
																				"nodeType": "YulIdentifier",
																				"src": "5963:8:23"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5973:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "5973:4:23"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5959:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "5959:3:23"
																		},
																		"nativeSrc": "5959:19:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5959:19:23"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5949:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "5949:2:23"
																},
																"nativeSrc": "5949:30:23",
																"nodeType": "YulFunctionCall",
																"src": "5949:30:23"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5939:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "5939:6:23"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5592:393:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5629:5:23",
														"nodeType": "YulTypedName",
														"src": "5629:5:23",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5636:10:23",
														"nodeType": "YulTypedName",
														"src": "5636:10:23",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5648:8:23",
														"nodeType": "YulTypedName",
														"src": "5648:8:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5661:6:23",
														"nodeType": "YulTypedName",
														"src": "5661:6:23",
														"type": ""
													}
												],
												"src": "5592:393:23"
											},
											{
												"body": {
													"nativeSrc": "6023:28:23",
													"nodeType": "YulBlock",
													"src": "6023:28:23",
													"statements": [
														{
															"nativeSrc": "6033:12:23",
															"nodeType": "YulAssignment",
															"src": "6033:12:23",
															"value": {
																"name": "value",
																"nativeSrc": "6040:5:23",
																"nodeType": "YulIdentifier",
																"src": "6040:5:23"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6033:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "6033:3:23"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5991:60:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6009:5:23",
														"nodeType": "YulTypedName",
														"src": "6009:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6019:3:23",
														"nodeType": "YulTypedName",
														"src": "6019:3:23",
														"type": ""
													}
												],
												"src": "5991:60:23"
											},
											{
												"body": {
													"nativeSrc": "6117:82:23",
													"nodeType": "YulBlock",
													"src": "6117:82:23",
													"statements": [
														{
															"nativeSrc": "6127:66:23",
															"nodeType": "YulAssignment",
															"src": "6127:66:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6185:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "6185:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6167:17:23",
																					"nodeType": "YulIdentifier",
																					"src": "6167:17:23"
																				},
																				"nativeSrc": "6167:24:23",
																				"nodeType": "YulFunctionCall",
																				"src": "6167:24:23"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6158:8:23",
																			"nodeType": "YulIdentifier",
																			"src": "6158:8:23"
																		},
																		"nativeSrc": "6158:34:23",
																		"nodeType": "YulFunctionCall",
																		"src": "6158:34:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6140:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "6140:17:23"
																},
																"nativeSrc": "6140:53:23",
																"nodeType": "YulFunctionCall",
																"src": "6140:53:23"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6127:9:23",
																	"nodeType": "YulIdentifier",
																	"src": "6127:9:23"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6057:142:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6097:5:23",
														"nodeType": "YulTypedName",
														"src": "6097:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6107:9:23",
														"nodeType": "YulTypedName",
														"src": "6107:9:23",
														"type": ""
													}
												],
												"src": "6057:142:23"
											},
											{
												"body": {
													"nativeSrc": "6252:28:23",
													"nodeType": "YulBlock",
													"src": "6252:28:23",
													"statements": [
														{
															"nativeSrc": "6262:12:23",
															"nodeType": "YulAssignment",
															"src": "6262:12:23",
															"value": {
																"name": "value",
																"nativeSrc": "6269:5:23",
																"nodeType": "YulIdentifier",
																"src": "6269:5:23"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6262:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "6262:3:23"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6205:75:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6238:5:23",
														"nodeType": "YulTypedName",
														"src": "6238:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6248:3:23",
														"nodeType": "YulTypedName",
														"src": "6248:3:23",
														"type": ""
													}
												],
												"src": "6205:75:23"
											},
											{
												"body": {
													"nativeSrc": "6362:193:23",
													"nodeType": "YulBlock",
													"src": "6362:193:23",
													"statements": [
														{
															"nativeSrc": "6372:63:23",
															"nodeType": "YulVariableDeclaration",
															"src": "6372:63:23",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6427:7:23",
																		"nodeType": "YulIdentifier",
																		"src": "6427:7:23"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6396:30:23",
																	"nodeType": "YulIdentifier",
																	"src": "6396:30:23"
																},
																"nativeSrc": "6396:39:23",
																"nodeType": "YulFunctionCall",
																"src": "6396:39:23"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6376:16:23",
																	"nodeType": "YulTypedName",
																	"src": "6376:16:23",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6451:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "6451:4:23"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6491:4:23",
																						"nodeType": "YulIdentifier",
																						"src": "6491:4:23"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6485:5:23",
																					"nodeType": "YulIdentifier",
																					"src": "6485:5:23"
																				},
																				"nativeSrc": "6485:11:23",
																				"nodeType": "YulFunctionCall",
																				"src": "6485:11:23"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6498:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "6498:6:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6530:16:23",
																						"nodeType": "YulIdentifier",
																						"src": "6530:16:23"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6506:23:23",
																					"nodeType": "YulIdentifier",
																					"src": "6506:23:23"
																				},
																				"nativeSrc": "6506:41:23",
																				"nodeType": "YulFunctionCall",
																				"src": "6506:41:23"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6457:27:23",
																			"nodeType": "YulIdentifier",
																			"src": "6457:27:23"
																		},
																		"nativeSrc": "6457:91:23",
																		"nodeType": "YulFunctionCall",
																		"src": "6457:91:23"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6444:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "6444:6:23"
																},
																"nativeSrc": "6444:105:23",
																"nodeType": "YulFunctionCall",
																"src": "6444:105:23"
															},
															"nativeSrc": "6444:105:23",
															"nodeType": "YulExpressionStatement",
															"src": "6444:105:23"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6286:269:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6339:4:23",
														"nodeType": "YulTypedName",
														"src": "6339:4:23",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6345:6:23",
														"nodeType": "YulTypedName",
														"src": "6345:6:23",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6353:7:23",
														"nodeType": "YulTypedName",
														"src": "6353:7:23",
														"type": ""
													}
												],
												"src": "6286:269:23"
											},
											{
												"body": {
													"nativeSrc": "6610:24:23",
													"nodeType": "YulBlock",
													"src": "6610:24:23",
													"statements": [
														{
															"nativeSrc": "6620:8:23",
															"nodeType": "YulAssignment",
															"src": "6620:8:23",
															"value": {
																"kind": "number",
																"nativeSrc": "6627:1:23",
																"nodeType": "YulLiteral",
																"src": "6627:1:23",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6620:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "6620:3:23"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6561:73:23",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6606:3:23",
														"nodeType": "YulTypedName",
														"src": "6606:3:23",
														"type": ""
													}
												],
												"src": "6561:73:23"
											},
											{
												"body": {
													"nativeSrc": "6693:136:23",
													"nodeType": "YulBlock",
													"src": "6693:136:23",
													"statements": [
														{
															"nativeSrc": "6703:46:23",
															"nodeType": "YulVariableDeclaration",
															"src": "6703:46:23",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6717:30:23",
																	"nodeType": "YulIdentifier",
																	"src": "6717:30:23"
																},
																"nativeSrc": "6717:32:23",
																"nodeType": "YulFunctionCall",
																"src": "6717:32:23"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6707:6:23",
																	"nodeType": "YulTypedName",
																	"src": "6707:6:23",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6802:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "6802:4:23"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6808:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "6808:6:23"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6816:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "6816:6:23"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6758:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "6758:43:23"
																},
																"nativeSrc": "6758:65:23",
																"nodeType": "YulFunctionCall",
																"src": "6758:65:23"
															},
															"nativeSrc": "6758:65:23",
															"nodeType": "YulExpressionStatement",
															"src": "6758:65:23"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6640:189:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6679:4:23",
														"nodeType": "YulTypedName",
														"src": "6679:4:23",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6685:6:23",
														"nodeType": "YulTypedName",
														"src": "6685:6:23",
														"type": ""
													}
												],
												"src": "6640:189:23"
											},
											{
												"body": {
													"nativeSrc": "6885:136:23",
													"nodeType": "YulBlock",
													"src": "6885:136:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "6952:63:23",
																"nodeType": "YulBlock",
																"src": "6952:63:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6996:5:23",
																					"nodeType": "YulIdentifier",
																					"src": "6996:5:23"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7003:1:23",
																					"nodeType": "YulLiteral",
																					"src": "7003:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6966:29:23",
																				"nodeType": "YulIdentifier",
																				"src": "6966:29:23"
																			},
																			"nativeSrc": "6966:39:23",
																			"nodeType": "YulFunctionCall",
																			"src": "6966:39:23"
																		},
																		"nativeSrc": "6966:39:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "6966:39:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6905:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "6905:5:23"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6912:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "6912:3:23"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6902:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "6902:2:23"
																},
																"nativeSrc": "6902:14:23",
																"nodeType": "YulFunctionCall",
																"src": "6902:14:23"
															},
															"nativeSrc": "6895:120:23",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6917:26:23",
																"nodeType": "YulBlock",
																"src": "6917:26:23",
																"statements": [
																	{
																		"nativeSrc": "6919:22:23",
																		"nodeType": "YulAssignment",
																		"src": "6919:22:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6932:5:23",
																					"nodeType": "YulIdentifier",
																					"src": "6932:5:23"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6939:1:23",
																					"nodeType": "YulLiteral",
																					"src": "6939:1:23",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6928:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "6928:3:23"
																			},
																			"nativeSrc": "6928:13:23",
																			"nodeType": "YulFunctionCall",
																			"src": "6928:13:23"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6919:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "6919:5:23"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6899:2:23",
																"nodeType": "YulBlock",
																"src": "6899:2:23",
																"statements": []
															},
															"src": "6895:120:23"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6835:186:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6873:5:23",
														"nodeType": "YulTypedName",
														"src": "6873:5:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6880:3:23",
														"nodeType": "YulTypedName",
														"src": "6880:3:23",
														"type": ""
													}
												],
												"src": "6835:186:23"
											},
											{
												"body": {
													"nativeSrc": "7106:464:23",
													"nodeType": "YulBlock",
													"src": "7106:464:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "7132:431:23",
																"nodeType": "YulBlock",
																"src": "7132:431:23",
																"statements": [
																	{
																		"nativeSrc": "7146:54:23",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7146:54:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7194:5:23",
																					"nodeType": "YulIdentifier",
																					"src": "7194:5:23"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7162:31:23",
																				"nodeType": "YulIdentifier",
																				"src": "7162:31:23"
																			},
																			"nativeSrc": "7162:38:23",
																			"nodeType": "YulFunctionCall",
																			"src": "7162:38:23"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7150:8:23",
																				"nodeType": "YulTypedName",
																				"src": "7150:8:23",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7213:63:23",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7213:63:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7236:8:23",
																					"nodeType": "YulIdentifier",
																					"src": "7236:8:23"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7264:10:23",
																							"nodeType": "YulIdentifier",
																							"src": "7264:10:23"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7246:17:23",
																						"nodeType": "YulIdentifier",
																						"src": "7246:17:23"
																					},
																					"nativeSrc": "7246:29:23",
																					"nodeType": "YulFunctionCall",
																					"src": "7246:29:23"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7232:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "7232:3:23"
																			},
																			"nativeSrc": "7232:44:23",
																			"nodeType": "YulFunctionCall",
																			"src": "7232:44:23"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7217:11:23",
																				"nodeType": "YulTypedName",
																				"src": "7217:11:23",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7433:27:23",
																			"nodeType": "YulBlock",
																			"src": "7433:27:23",
																			"statements": [
																				{
																					"nativeSrc": "7435:23:23",
																					"nodeType": "YulAssignment",
																					"src": "7435:23:23",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7450:8:23",
																						"nodeType": "YulIdentifier",
																						"src": "7450:8:23"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7435:11:23",
																							"nodeType": "YulIdentifier",
																							"src": "7435:11:23"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7417:10:23",
																					"nodeType": "YulIdentifier",
																					"src": "7417:10:23"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7429:2:23",
																					"nodeType": "YulLiteral",
																					"src": "7429:2:23",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7414:2:23",
																				"nodeType": "YulIdentifier",
																				"src": "7414:2:23"
																			},
																			"nativeSrc": "7414:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "7414:18:23"
																		},
																		"nativeSrc": "7411:49:23",
																		"nodeType": "YulIf",
																		"src": "7411:49:23"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7502:11:23",
																					"nodeType": "YulIdentifier",
																					"src": "7502:11:23"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7519:8:23",
																							"nodeType": "YulIdentifier",
																							"src": "7519:8:23"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7547:3:23",
																									"nodeType": "YulIdentifier",
																									"src": "7547:3:23"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7529:17:23",
																								"nodeType": "YulIdentifier",
																								"src": "7529:17:23"
																							},
																							"nativeSrc": "7529:22:23",
																							"nodeType": "YulFunctionCall",
																							"src": "7529:22:23"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7515:3:23",
																						"nodeType": "YulIdentifier",
																						"src": "7515:3:23"
																					},
																					"nativeSrc": "7515:37:23",
																					"nodeType": "YulFunctionCall",
																					"src": "7515:37:23"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7473:28:23",
																				"nodeType": "YulIdentifier",
																				"src": "7473:28:23"
																			},
																			"nativeSrc": "7473:80:23",
																			"nodeType": "YulFunctionCall",
																			"src": "7473:80:23"
																		},
																		"nativeSrc": "7473:80:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "7473:80:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7123:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7128:2:23",
																		"nodeType": "YulLiteral",
																		"src": "7128:2:23",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7120:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "7120:2:23"
																},
																"nativeSrc": "7120:11:23",
																"nodeType": "YulFunctionCall",
																"src": "7120:11:23"
															},
															"nativeSrc": "7117:446:23",
															"nodeType": "YulIf",
															"src": "7117:446:23"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7027:543:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7082:5:23",
														"nodeType": "YulTypedName",
														"src": "7082:5:23",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7089:3:23",
														"nodeType": "YulTypedName",
														"src": "7089:3:23",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7094:10:23",
														"nodeType": "YulTypedName",
														"src": "7094:10:23",
														"type": ""
													}
												],
												"src": "7027:543:23"
											},
											{
												"body": {
													"nativeSrc": "7639:54:23",
													"nodeType": "YulBlock",
													"src": "7639:54:23",
													"statements": [
														{
															"nativeSrc": "7649:37:23",
															"nodeType": "YulAssignment",
															"src": "7649:37:23",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7674:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "7674:4:23"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7680:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "7680:5:23"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7670:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "7670:3:23"
																},
																"nativeSrc": "7670:16:23",
																"nodeType": "YulFunctionCall",
																"src": "7670:16:23"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7649:8:23",
																	"nodeType": "YulIdentifier",
																	"src": "7649:8:23"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7576:117:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7614:4:23",
														"nodeType": "YulTypedName",
														"src": "7614:4:23",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7620:5:23",
														"nodeType": "YulTypedName",
														"src": "7620:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7630:8:23",
														"nodeType": "YulTypedName",
														"src": "7630:8:23",
														"type": ""
													}
												],
												"src": "7576:117:23"
											},
											{
												"body": {
													"nativeSrc": "7750:118:23",
													"nodeType": "YulBlock",
													"src": "7750:118:23",
													"statements": [
														{
															"nativeSrc": "7760:68:23",
															"nodeType": "YulVariableDeclaration",
															"src": "7760:68:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7809:1:23",
																						"nodeType": "YulLiteral",
																						"src": "7809:1:23",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7812:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "7812:5:23"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7805:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "7805:3:23"
																				},
																				"nativeSrc": "7805:13:23",
																				"nodeType": "YulFunctionCall",
																				"src": "7805:13:23"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7824:1:23",
																						"nodeType": "YulLiteral",
																						"src": "7824:1:23",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7820:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "7820:3:23"
																				},
																				"nativeSrc": "7820:6:23",
																				"nodeType": "YulFunctionCall",
																				"src": "7820:6:23"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7776:28:23",
																			"nodeType": "YulIdentifier",
																			"src": "7776:28:23"
																		},
																		"nativeSrc": "7776:51:23",
																		"nodeType": "YulFunctionCall",
																		"src": "7776:51:23"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7772:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "7772:3:23"
																},
																"nativeSrc": "7772:56:23",
																"nodeType": "YulFunctionCall",
																"src": "7772:56:23"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7764:4:23",
																	"nodeType": "YulTypedName",
																	"src": "7764:4:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7837:25:23",
															"nodeType": "YulAssignment",
															"src": "7837:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7851:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "7851:4:23"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7857:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "7857:4:23"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7847:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "7847:3:23"
																},
																"nativeSrc": "7847:15:23",
																"nodeType": "YulFunctionCall",
																"src": "7847:15:23"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7837:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "7837:6:23"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7699:169:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7727:4:23",
														"nodeType": "YulTypedName",
														"src": "7727:4:23",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7733:5:23",
														"nodeType": "YulTypedName",
														"src": "7733:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7743:6:23",
														"nodeType": "YulTypedName",
														"src": "7743:6:23",
														"type": ""
													}
												],
												"src": "7699:169:23"
											},
											{
												"body": {
													"nativeSrc": "7954:214:23",
													"nodeType": "YulBlock",
													"src": "7954:214:23",
													"statements": [
														{
															"nativeSrc": "8087:37:23",
															"nodeType": "YulAssignment",
															"src": "8087:37:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8114:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "8114:4:23"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8120:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "8120:3:23"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8095:18:23",
																	"nodeType": "YulIdentifier",
																	"src": "8095:18:23"
																},
																"nativeSrc": "8095:29:23",
																"nodeType": "YulFunctionCall",
																"src": "8095:29:23"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8087:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "8087:4:23"
																}
															]
														},
														{
															"nativeSrc": "8133:29:23",
															"nodeType": "YulAssignment",
															"src": "8133:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8144:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "8144:4:23"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8154:1:23",
																				"nodeType": "YulLiteral",
																				"src": "8154:1:23",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8157:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "8157:3:23"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8150:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "8150:3:23"
																		},
																		"nativeSrc": "8150:11:23",
																		"nodeType": "YulFunctionCall",
																		"src": "8150:11:23"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8141:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "8141:2:23"
																},
																"nativeSrc": "8141:21:23",
																"nodeType": "YulFunctionCall",
																"src": "8141:21:23"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8133:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "8133:4:23"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7873:295:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7935:4:23",
														"nodeType": "YulTypedName",
														"src": "7935:4:23",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7941:3:23",
														"nodeType": "YulTypedName",
														"src": "7941:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7949:4:23",
														"nodeType": "YulTypedName",
														"src": "7949:4:23",
														"type": ""
													}
												],
												"src": "7873:295:23"
											},
											{
												"body": {
													"nativeSrc": "8265:1303:23",
													"nodeType": "YulBlock",
													"src": "8265:1303:23",
													"statements": [
														{
															"nativeSrc": "8276:51:23",
															"nodeType": "YulVariableDeclaration",
															"src": "8276:51:23",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8323:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "8323:3:23"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8290:32:23",
																	"nodeType": "YulIdentifier",
																	"src": "8290:32:23"
																},
																"nativeSrc": "8290:37:23",
																"nodeType": "YulFunctionCall",
																"src": "8290:37:23"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8280:6:23",
																	"nodeType": "YulTypedName",
																	"src": "8280:6:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8412:22:23",
																"nodeType": "YulBlock",
																"src": "8412:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8414:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "8414:16:23"
																			},
																			"nativeSrc": "8414:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "8414:18:23"
																		},
																		"nativeSrc": "8414:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "8414:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8384:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "8384:6:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8392:18:23",
																		"nodeType": "YulLiteral",
																		"src": "8392:18:23",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8381:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "8381:2:23"
																},
																"nativeSrc": "8381:30:23",
																"nodeType": "YulFunctionCall",
																"src": "8381:30:23"
															},
															"nativeSrc": "8378:56:23",
															"nodeType": "YulIf",
															"src": "8378:56:23"
														},
														{
															"nativeSrc": "8444:52:23",
															"nodeType": "YulVariableDeclaration",
															"src": "8444:52:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8490:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "8490:4:23"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8484:5:23",
																			"nodeType": "YulIdentifier",
																			"src": "8484:5:23"
																		},
																		"nativeSrc": "8484:11:23",
																		"nodeType": "YulFunctionCall",
																		"src": "8484:11:23"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8458:25:23",
																	"nodeType": "YulIdentifier",
																	"src": "8458:25:23"
																},
																"nativeSrc": "8458:38:23",
																"nodeType": "YulFunctionCall",
																"src": "8458:38:23"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8448:6:23",
																	"nodeType": "YulTypedName",
																	"src": "8448:6:23",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8589:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "8589:4:23"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8595:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "8595:6:23"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8603:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "8603:6:23"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8543:45:23",
																	"nodeType": "YulIdentifier",
																	"src": "8543:45:23"
																},
																"nativeSrc": "8543:67:23",
																"nodeType": "YulFunctionCall",
																"src": "8543:67:23"
															},
															"nativeSrc": "8543:67:23",
															"nodeType": "YulExpressionStatement",
															"src": "8543:67:23"
														},
														{
															"nativeSrc": "8620:18:23",
															"nodeType": "YulVariableDeclaration",
															"src": "8620:18:23",
															"value": {
																"kind": "number",
																"nativeSrc": "8637:1:23",
																"nodeType": "YulLiteral",
																"src": "8637:1:23",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8624:9:23",
																	"nodeType": "YulTypedName",
																	"src": "8624:9:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8648:17:23",
															"nodeType": "YulAssignment",
															"src": "8648:17:23",
															"value": {
																"kind": "number",
																"nativeSrc": "8661:4:23",
																"nodeType": "YulLiteral",
																"src": "8661:4:23",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8648:9:23",
																	"nodeType": "YulIdentifier",
																	"src": "8648:9:23"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8712:611:23",
																		"nodeType": "YulBlock",
																		"src": "8712:611:23",
																		"statements": [
																			{
																				"nativeSrc": "8726:37:23",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8726:37:23",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8745:6:23",
																							"nodeType": "YulIdentifier",
																							"src": "8745:6:23"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8757:4:23",
																									"nodeType": "YulLiteral",
																									"src": "8757:4:23",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8753:3:23",
																								"nodeType": "YulIdentifier",
																								"src": "8753:3:23"
																							},
																							"nativeSrc": "8753:9:23",
																							"nodeType": "YulFunctionCall",
																							"src": "8753:9:23"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8741:3:23",
																						"nodeType": "YulIdentifier",
																						"src": "8741:3:23"
																					},
																					"nativeSrc": "8741:22:23",
																					"nodeType": "YulFunctionCall",
																					"src": "8741:22:23"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8730:7:23",
																						"nodeType": "YulTypedName",
																						"src": "8730:7:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8777:51:23",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8777:51:23",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8823:4:23",
																							"nodeType": "YulIdentifier",
																							"src": "8823:4:23"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8791:31:23",
																						"nodeType": "YulIdentifier",
																						"src": "8791:31:23"
																					},
																					"nativeSrc": "8791:37:23",
																					"nodeType": "YulFunctionCall",
																					"src": "8791:37:23"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8781:6:23",
																						"nodeType": "YulTypedName",
																						"src": "8781:6:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8841:10:23",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8841:10:23",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8850:1:23",
																					"nodeType": "YulLiteral",
																					"src": "8850:1:23",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8845:1:23",
																						"nodeType": "YulTypedName",
																						"src": "8845:1:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8909:163:23",
																					"nodeType": "YulBlock",
																					"src": "8909:163:23",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8934:6:23",
																										"nodeType": "YulIdentifier",
																										"src": "8934:6:23"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8952:3:23",
																														"nodeType": "YulIdentifier",
																														"src": "8952:3:23"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8957:9:23",
																														"nodeType": "YulIdentifier",
																														"src": "8957:9:23"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8948:3:23",
																													"nodeType": "YulIdentifier",
																													"src": "8948:3:23"
																												},
																												"nativeSrc": "8948:19:23",
																												"nodeType": "YulFunctionCall",
																												"src": "8948:19:23"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8942:5:23",
																											"nodeType": "YulIdentifier",
																											"src": "8942:5:23"
																										},
																										"nativeSrc": "8942:26:23",
																										"nodeType": "YulFunctionCall",
																										"src": "8942:26:23"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8927:6:23",
																									"nodeType": "YulIdentifier",
																									"src": "8927:6:23"
																								},
																								"nativeSrc": "8927:42:23",
																								"nodeType": "YulFunctionCall",
																								"src": "8927:42:23"
																							},
																							"nativeSrc": "8927:42:23",
																							"nodeType": "YulExpressionStatement",
																							"src": "8927:42:23"
																						},
																						{
																							"nativeSrc": "8986:24:23",
																							"nodeType": "YulAssignment",
																							"src": "8986:24:23",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9000:6:23",
																										"nodeType": "YulIdentifier",
																										"src": "9000:6:23"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9008:1:23",
																										"nodeType": "YulLiteral",
																										"src": "9008:1:23",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8996:3:23",
																									"nodeType": "YulIdentifier",
																									"src": "8996:3:23"
																								},
																								"nativeSrc": "8996:14:23",
																								"nodeType": "YulFunctionCall",
																								"src": "8996:14:23"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8986:6:23",
																									"nodeType": "YulIdentifier",
																									"src": "8986:6:23"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9027:31:23",
																							"nodeType": "YulAssignment",
																							"src": "9027:31:23",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9044:9:23",
																										"nodeType": "YulIdentifier",
																										"src": "9044:9:23"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9055:2:23",
																										"nodeType": "YulLiteral",
																										"src": "9055:2:23",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9040:3:23",
																									"nodeType": "YulIdentifier",
																									"src": "9040:3:23"
																								},
																								"nativeSrc": "9040:18:23",
																								"nodeType": "YulFunctionCall",
																								"src": "9040:18:23"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9027:9:23",
																									"nodeType": "YulIdentifier",
																									"src": "9027:9:23"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8875:1:23",
																							"nodeType": "YulIdentifier",
																							"src": "8875:1:23"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8878:7:23",
																							"nodeType": "YulIdentifier",
																							"src": "8878:7:23"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8872:2:23",
																						"nodeType": "YulIdentifier",
																						"src": "8872:2:23"
																					},
																					"nativeSrc": "8872:14:23",
																					"nodeType": "YulFunctionCall",
																					"src": "8872:14:23"
																				},
																				"nativeSrc": "8864:208:23",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8887:21:23",
																					"nodeType": "YulBlock",
																					"src": "8887:21:23",
																					"statements": [
																						{
																							"nativeSrc": "8889:17:23",
																							"nodeType": "YulAssignment",
																							"src": "8889:17:23",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8898:1:23",
																										"nodeType": "YulIdentifier",
																										"src": "8898:1:23"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8901:4:23",
																										"nodeType": "YulLiteral",
																										"src": "8901:4:23",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8894:3:23",
																									"nodeType": "YulIdentifier",
																									"src": "8894:3:23"
																								},
																								"nativeSrc": "8894:12:23",
																								"nodeType": "YulFunctionCall",
																								"src": "8894:12:23"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8889:1:23",
																									"nodeType": "YulIdentifier",
																									"src": "8889:1:23"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8868:3:23",
																					"nodeType": "YulBlock",
																					"src": "8868:3:23",
																					"statements": []
																				},
																				"src": "8864:208:23"
																			},
																			{
																				"body": {
																					"nativeSrc": "9108:156:23",
																					"nodeType": "YulBlock",
																					"src": "9108:156:23",
																					"statements": [
																						{
																							"nativeSrc": "9126:43:23",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9126:43:23",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9153:3:23",
																												"nodeType": "YulIdentifier",
																												"src": "9153:3:23"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9158:9:23",
																												"nodeType": "YulIdentifier",
																												"src": "9158:9:23"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9149:3:23",
																											"nodeType": "YulIdentifier",
																											"src": "9149:3:23"
																										},
																										"nativeSrc": "9149:19:23",
																										"nodeType": "YulFunctionCall",
																										"src": "9149:19:23"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9143:5:23",
																									"nodeType": "YulIdentifier",
																									"src": "9143:5:23"
																								},
																								"nativeSrc": "9143:26:23",
																								"nodeType": "YulFunctionCall",
																								"src": "9143:26:23"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9130:9:23",
																									"nodeType": "YulTypedName",
																									"src": "9130:9:23",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9193:6:23",
																										"nodeType": "YulIdentifier",
																										"src": "9193:6:23"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9220:9:23",
																												"nodeType": "YulIdentifier",
																												"src": "9220:9:23"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9235:6:23",
																														"nodeType": "YulIdentifier",
																														"src": "9235:6:23"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9243:4:23",
																														"nodeType": "YulLiteral",
																														"src": "9243:4:23",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9231:3:23",
																													"nodeType": "YulIdentifier",
																													"src": "9231:3:23"
																												},
																												"nativeSrc": "9231:17:23",
																												"nodeType": "YulFunctionCall",
																												"src": "9231:17:23"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9201:18:23",
																											"nodeType": "YulIdentifier",
																											"src": "9201:18:23"
																										},
																										"nativeSrc": "9201:48:23",
																										"nodeType": "YulFunctionCall",
																										"src": "9201:48:23"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9186:6:23",
																									"nodeType": "YulIdentifier",
																									"src": "9186:6:23"
																								},
																								"nativeSrc": "9186:64:23",
																								"nodeType": "YulFunctionCall",
																								"src": "9186:64:23"
																							},
																							"nativeSrc": "9186:64:23",
																							"nodeType": "YulExpressionStatement",
																							"src": "9186:64:23"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9091:7:23",
																							"nodeType": "YulIdentifier",
																							"src": "9091:7:23"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9100:6:23",
																							"nodeType": "YulIdentifier",
																							"src": "9100:6:23"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9088:2:23",
																						"nodeType": "YulIdentifier",
																						"src": "9088:2:23"
																					},
																					"nativeSrc": "9088:19:23",
																					"nodeType": "YulFunctionCall",
																					"src": "9088:19:23"
																				},
																				"nativeSrc": "9085:179:23",
																				"nodeType": "YulIf",
																				"src": "9085:179:23"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9284:4:23",
																							"nodeType": "YulIdentifier",
																							"src": "9284:4:23"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9298:6:23",
																											"nodeType": "YulIdentifier",
																											"src": "9298:6:23"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9306:1:23",
																											"nodeType": "YulLiteral",
																											"src": "9306:1:23",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9294:3:23",
																										"nodeType": "YulIdentifier",
																										"src": "9294:3:23"
																									},
																									"nativeSrc": "9294:14:23",
																									"nodeType": "YulFunctionCall",
																									"src": "9294:14:23"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9310:1:23",
																									"nodeType": "YulLiteral",
																									"src": "9310:1:23",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9290:3:23",
																								"nodeType": "YulIdentifier",
																								"src": "9290:3:23"
																							},
																							"nativeSrc": "9290:22:23",
																							"nodeType": "YulFunctionCall",
																							"src": "9290:22:23"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9277:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "9277:6:23"
																					},
																					"nativeSrc": "9277:36:23",
																					"nodeType": "YulFunctionCall",
																					"src": "9277:36:23"
																				},
																				"nativeSrc": "9277:36:23",
																				"nodeType": "YulExpressionStatement",
																				"src": "9277:36:23"
																			}
																		]
																	},
																	"nativeSrc": "8705:618:23",
																	"nodeType": "YulCase",
																	"src": "8705:618:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8710:1:23",
																		"nodeType": "YulLiteral",
																		"src": "8710:1:23",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9340:222:23",
																		"nodeType": "YulBlock",
																		"src": "9340:222:23",
																		"statements": [
																			{
																				"nativeSrc": "9354:14:23",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9354:14:23",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9367:1:23",
																					"nodeType": "YulLiteral",
																					"src": "9367:1:23",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9358:5:23",
																						"nodeType": "YulTypedName",
																						"src": "9358:5:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9391:67:23",
																					"nodeType": "YulBlock",
																					"src": "9391:67:23",
																					"statements": [
																						{
																							"nativeSrc": "9409:35:23",
																							"nodeType": "YulAssignment",
																							"src": "9409:35:23",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9428:3:23",
																												"nodeType": "YulIdentifier",
																												"src": "9428:3:23"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9433:9:23",
																												"nodeType": "YulIdentifier",
																												"src": "9433:9:23"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9424:3:23",
																											"nodeType": "YulIdentifier",
																											"src": "9424:3:23"
																										},
																										"nativeSrc": "9424:19:23",
																										"nodeType": "YulFunctionCall",
																										"src": "9424:19:23"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9418:5:23",
																									"nodeType": "YulIdentifier",
																									"src": "9418:5:23"
																								},
																								"nativeSrc": "9418:26:23",
																								"nodeType": "YulFunctionCall",
																								"src": "9418:26:23"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9409:5:23",
																									"nodeType": "YulIdentifier",
																									"src": "9409:5:23"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9384:6:23",
																					"nodeType": "YulIdentifier",
																					"src": "9384:6:23"
																				},
																				"nativeSrc": "9381:77:23",
																				"nodeType": "YulIf",
																				"src": "9381:77:23"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9478:4:23",
																							"nodeType": "YulIdentifier",
																							"src": "9478:4:23"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9537:5:23",
																									"nodeType": "YulIdentifier",
																									"src": "9537:5:23"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9544:6:23",
																									"nodeType": "YulIdentifier",
																									"src": "9544:6:23"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9484:52:23",
																								"nodeType": "YulIdentifier",
																								"src": "9484:52:23"
																							},
																							"nativeSrc": "9484:67:23",
																							"nodeType": "YulFunctionCall",
																							"src": "9484:67:23"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9471:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "9471:6:23"
																					},
																					"nativeSrc": "9471:81:23",
																					"nodeType": "YulFunctionCall",
																					"src": "9471:81:23"
																				},
																				"nativeSrc": "9471:81:23",
																				"nodeType": "YulExpressionStatement",
																				"src": "9471:81:23"
																			}
																		]
																	},
																	"nativeSrc": "9332:230:23",
																	"nodeType": "YulCase",
																	"src": "9332:230:23",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8685:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "8685:6:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8693:2:23",
																		"nodeType": "YulLiteral",
																		"src": "8693:2:23",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8682:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "8682:2:23"
																},
																"nativeSrc": "8682:14:23",
																"nodeType": "YulFunctionCall",
																"src": "8682:14:23"
															},
															"nativeSrc": "8675:887:23",
															"nodeType": "YulSwitch",
															"src": "8675:887:23"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8173:1395:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8254:4:23",
														"nodeType": "YulTypedName",
														"src": "8254:4:23",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8260:3:23",
														"nodeType": "YulTypedName",
														"src": "8260:3:23",
														"type": ""
													}
												],
												"src": "8173:1395:23"
											},
											{
												"body": {
													"nativeSrc": "9688:34:23",
													"nodeType": "YulBlock",
													"src": "9688:34:23",
													"statements": [
														{
															"nativeSrc": "9698:18:23",
															"nodeType": "YulAssignment",
															"src": "9698:18:23",
															"value": {
																"name": "pos",
																"nativeSrc": "9713:3:23",
																"nodeType": "YulIdentifier",
																"src": "9713:3:23"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9698:11:23",
																	"nodeType": "YulIdentifier",
																	"src": "9698:11:23"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9574:148:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9660:3:23",
														"nodeType": "YulTypedName",
														"src": "9660:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9665:6:23",
														"nodeType": "YulTypedName",
														"src": "9665:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9676:11:23",
														"nodeType": "YulTypedName",
														"src": "9676:11:23",
														"type": ""
													}
												],
												"src": "9574:148:23"
											},
											{
												"body": {
													"nativeSrc": "9859:767:23",
													"nodeType": "YulBlock",
													"src": "9859:767:23",
													"statements": [
														{
															"nativeSrc": "9869:29:23",
															"nodeType": "YulVariableDeclaration",
															"src": "9869:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9892:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "9892:5:23"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "9886:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "9886:5:23"
																},
																"nativeSrc": "9886:12:23",
																"nodeType": "YulFunctionCall",
																"src": "9886:12:23"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nativeSrc": "9873:9:23",
																	"nodeType": "YulTypedName",
																	"src": "9873:9:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9907:50:23",
															"nodeType": "YulVariableDeclaration",
															"src": "9907:50:23",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "9947:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "9947:9:23"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "9921:25:23",
																	"nodeType": "YulIdentifier",
																	"src": "9921:25:23"
																},
																"nativeSrc": "9921:36:23",
																"nodeType": "YulFunctionCall",
																"src": "9921:36:23"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9911:6:23",
																	"nodeType": "YulTypedName",
																	"src": "9911:6:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9966:96:23",
															"nodeType": "YulAssignment",
															"src": "9966:96:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10050:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "10050:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10055:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "10055:6:23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "9973:76:23",
																	"nodeType": "YulIdentifier",
																	"src": "9973:76:23"
																},
																"nativeSrc": "9973:89:23",
																"nodeType": "YulFunctionCall",
																"src": "9973:89:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9966:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "9966:3:23"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10111:159:23",
																		"nodeType": "YulBlock",
																		"src": "10111:159:23",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "10164:3:23",
																							"nodeType": "YulIdentifier",
																							"src": "10164:3:23"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nativeSrc": "10173:9:23",
																									"nodeType": "YulIdentifier",
																									"src": "10173:9:23"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "10188:4:23",
																											"nodeType": "YulLiteral",
																											"src": "10188:4:23",
																											"type": "",
																											"value": "0xff"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "10184:3:23",
																										"nodeType": "YulIdentifier",
																										"src": "10184:3:23"
																									},
																									"nativeSrc": "10184:9:23",
																									"nodeType": "YulFunctionCall",
																									"src": "10184:9:23"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "10169:3:23",
																								"nodeType": "YulIdentifier",
																								"src": "10169:3:23"
																							},
																							"nativeSrc": "10169:25:23",
																							"nodeType": "YulFunctionCall",
																							"src": "10169:25:23"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "10157:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "10157:6:23"
																					},
																					"nativeSrc": "10157:38:23",
																					"nodeType": "YulFunctionCall",
																					"src": "10157:38:23"
																				},
																				"nativeSrc": "10157:38:23",
																				"nodeType": "YulExpressionStatement",
																				"src": "10157:38:23"
																			},
																			{
																				"nativeSrc": "10208:52:23",
																				"nodeType": "YulAssignment",
																				"src": "10208:52:23",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "10219:3:23",
																							"nodeType": "YulIdentifier",
																							"src": "10219:3:23"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length",
																									"nativeSrc": "10228:6:23",
																									"nodeType": "YulIdentifier",
																									"src": "10228:6:23"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nativeSrc": "10250:6:23",
																													"nodeType": "YulIdentifier",
																													"src": "10250:6:23"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nativeSrc": "10243:6:23",
																												"nodeType": "YulIdentifier",
																												"src": "10243:6:23"
																											},
																											"nativeSrc": "10243:14:23",
																											"nodeType": "YulFunctionCall",
																											"src": "10243:14:23"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "10236:6:23",
																										"nodeType": "YulIdentifier",
																										"src": "10236:6:23"
																									},
																									"nativeSrc": "10236:22:23",
																									"nodeType": "YulFunctionCall",
																									"src": "10236:22:23"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "10224:3:23",
																								"nodeType": "YulIdentifier",
																								"src": "10224:3:23"
																							},
																							"nativeSrc": "10224:35:23",
																							"nodeType": "YulFunctionCall",
																							"src": "10224:35:23"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "10215:3:23",
																						"nodeType": "YulIdentifier",
																						"src": "10215:3:23"
																					},
																					"nativeSrc": "10215:45:23",
																					"nodeType": "YulFunctionCall",
																					"src": "10215:45:23"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "10208:3:23",
																						"nodeType": "YulIdentifier",
																						"src": "10208:3:23"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "10104:166:23",
																	"nodeType": "YulCase",
																	"src": "10104:166:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10109:1:23",
																		"nodeType": "YulLiteral",
																		"src": "10109:1:23",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10286:334:23",
																		"nodeType": "YulBlock",
																		"src": "10286:334:23",
																		"statements": [
																			{
																				"nativeSrc": "10331:53:23",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10331:53:23",
																				"value": {
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "10378:5:23",
																							"nodeType": "YulIdentifier",
																							"src": "10378:5:23"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "10346:31:23",
																						"nodeType": "YulIdentifier",
																						"src": "10346:31:23"
																					},
																					"nativeSrc": "10346:38:23",
																					"nodeType": "YulFunctionCall",
																					"src": "10346:38:23"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nativeSrc": "10335:7:23",
																						"nodeType": "YulTypedName",
																						"src": "10335:7:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10397:10:23",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10397:10:23",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10406:1:23",
																					"nodeType": "YulLiteral",
																					"src": "10406:1:23",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "10401:1:23",
																						"nodeType": "YulTypedName",
																						"src": "10401:1:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10464:110:23",
																					"nodeType": "YulBlock",
																					"src": "10464:110:23",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nativeSrc": "10493:3:23",
																												"nodeType": "YulIdentifier",
																												"src": "10493:3:23"
																											},
																											{
																												"name": "i",
																												"nativeSrc": "10498:1:23",
																												"nodeType": "YulIdentifier",
																												"src": "10498:1:23"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10489:3:23",
																											"nodeType": "YulIdentifier",
																											"src": "10489:3:23"
																										},
																										"nativeSrc": "10489:11:23",
																										"nodeType": "YulFunctionCall",
																										"src": "10489:11:23"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nativeSrc": "10508:7:23",
																												"nodeType": "YulIdentifier",
																												"src": "10508:7:23"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "10502:5:23",
																											"nodeType": "YulIdentifier",
																											"src": "10502:5:23"
																										},
																										"nativeSrc": "10502:14:23",
																										"nodeType": "YulFunctionCall",
																										"src": "10502:14:23"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "10482:6:23",
																									"nodeType": "YulIdentifier",
																									"src": "10482:6:23"
																								},
																								"nativeSrc": "10482:35:23",
																								"nodeType": "YulFunctionCall",
																								"src": "10482:35:23"
																							},
																							"nativeSrc": "10482:35:23",
																							"nodeType": "YulExpressionStatement",
																							"src": "10482:35:23"
																						},
																						{
																							"nativeSrc": "10534:26:23",
																							"nodeType": "YulAssignment",
																							"src": "10534:26:23",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nativeSrc": "10549:7:23",
																										"nodeType": "YulIdentifier",
																										"src": "10549:7:23"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10558:1:23",
																										"nodeType": "YulLiteral",
																										"src": "10558:1:23",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10545:3:23",
																									"nodeType": "YulIdentifier",
																									"src": "10545:3:23"
																								},
																								"nativeSrc": "10545:15:23",
																								"nodeType": "YulFunctionCall",
																								"src": "10545:15:23"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nativeSrc": "10534:7:23",
																									"nodeType": "YulIdentifier",
																									"src": "10534:7:23"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "10431:1:23",
																							"nodeType": "YulIdentifier",
																							"src": "10431:1:23"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "10434:6:23",
																							"nodeType": "YulIdentifier",
																							"src": "10434:6:23"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10428:2:23",
																						"nodeType": "YulIdentifier",
																						"src": "10428:2:23"
																					},
																					"nativeSrc": "10428:13:23",
																					"nodeType": "YulFunctionCall",
																					"src": "10428:13:23"
																				},
																				"nativeSrc": "10420:154:23",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "10442:21:23",
																					"nodeType": "YulBlock",
																					"src": "10442:21:23",
																					"statements": [
																						{
																							"nativeSrc": "10444:17:23",
																							"nodeType": "YulAssignment",
																							"src": "10444:17:23",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "10453:1:23",
																										"nodeType": "YulIdentifier",
																										"src": "10453:1:23"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10456:4:23",
																										"nodeType": "YulLiteral",
																										"src": "10456:4:23",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10449:3:23",
																									"nodeType": "YulIdentifier",
																									"src": "10449:3:23"
																								},
																								"nativeSrc": "10449:12:23",
																								"nodeType": "YulFunctionCall",
																								"src": "10449:12:23"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "10444:1:23",
																									"nodeType": "YulIdentifier",
																									"src": "10444:1:23"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "10424:3:23",
																					"nodeType": "YulBlock",
																					"src": "10424:3:23",
																					"statements": []
																				},
																				"src": "10420:154:23"
																			},
																			{
																				"nativeSrc": "10587:23:23",
																				"nodeType": "YulAssignment",
																				"src": "10587:23:23",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "10598:3:23",
																							"nodeType": "YulIdentifier",
																							"src": "10598:3:23"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "10603:6:23",
																							"nodeType": "YulIdentifier",
																							"src": "10603:6:23"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "10594:3:23",
																						"nodeType": "YulIdentifier",
																						"src": "10594:3:23"
																					},
																					"nativeSrc": "10594:16:23",
																					"nodeType": "YulFunctionCall",
																					"src": "10594:16:23"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "10587:3:23",
																						"nodeType": "YulIdentifier",
																						"src": "10587:3:23"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "10279:341:23",
																	"nodeType": "YulCase",
																	"src": "10279:341:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10284:1:23",
																		"nodeType": "YulLiteral",
																		"src": "10284:1:23",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "10082:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "10082:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10093:1:23",
																		"nodeType": "YulLiteral",
																		"src": "10093:1:23",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10078:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "10078:3:23"
																},
																"nativeSrc": "10078:17:23",
																"nodeType": "YulFunctionCall",
																"src": "10078:17:23"
															},
															"nativeSrc": "10071:549:23",
															"nodeType": "YulSwitch",
															"src": "10071:549:23"
														}
													]
												},
												"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9752:874:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9840:5:23",
														"nodeType": "YulTypedName",
														"src": "9840:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9847:3:23",
														"nodeType": "YulTypedName",
														"src": "9847:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9855:3:23",
														"nodeType": "YulTypedName",
														"src": "9855:3:23",
														"type": ""
													}
												],
												"src": "9752:874:23"
											},
											{
												"body": {
													"nativeSrc": "10765:136:23",
													"nodeType": "YulBlock",
													"src": "10765:136:23",
													"statements": [
														{
															"nativeSrc": "10776:99:23",
															"nodeType": "YulAssignment",
															"src": "10776:99:23",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10862:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "10862:6:23"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10871:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "10871:3:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "10783:78:23",
																	"nodeType": "YulIdentifier",
																	"src": "10783:78:23"
																},
																"nativeSrc": "10783:92:23",
																"nodeType": "YulFunctionCall",
																"src": "10783:92:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10776:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "10776:3:23"
																}
															]
														},
														{
															"nativeSrc": "10885:10:23",
															"nodeType": "YulAssignment",
															"src": "10885:10:23",
															"value": {
																"name": "pos",
																"nativeSrc": "10892:3:23",
																"nodeType": "YulIdentifier",
																"src": "10892:3:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10885:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "10885:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10632:269:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10744:3:23",
														"nodeType": "YulTypedName",
														"src": "10744:3:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10750:6:23",
														"nodeType": "YulTypedName",
														"src": "10750:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10761:3:23",
														"nodeType": "YulTypedName",
														"src": "10761:3:23",
														"type": ""
													}
												],
												"src": "10632:269:23"
											},
											{
												"body": {
													"nativeSrc": "10935:152:23",
													"nodeType": "YulBlock",
													"src": "10935:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10952:1:23",
																		"nodeType": "YulLiteral",
																		"src": "10952:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10955:77:23",
																		"nodeType": "YulLiteral",
																		"src": "10955:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10945:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "10945:6:23"
																},
																"nativeSrc": "10945:88:23",
																"nodeType": "YulFunctionCall",
																"src": "10945:88:23"
															},
															"nativeSrc": "10945:88:23",
															"nodeType": "YulExpressionStatement",
															"src": "10945:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11049:1:23",
																		"nodeType": "YulLiteral",
																		"src": "11049:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11052:4:23",
																		"nodeType": "YulLiteral",
																		"src": "11052:4:23",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11042:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "11042:6:23"
																},
																"nativeSrc": "11042:15:23",
																"nodeType": "YulFunctionCall",
																"src": "11042:15:23"
															},
															"nativeSrc": "11042:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "11042:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11073:1:23",
																		"nodeType": "YulLiteral",
																		"src": "11073:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11076:4:23",
																		"nodeType": "YulLiteral",
																		"src": "11076:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11066:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "11066:6:23"
																},
																"nativeSrc": "11066:15:23",
																"nodeType": "YulFunctionCall",
																"src": "11066:15:23"
															},
															"nativeSrc": "11066:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "11066:15:23"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10907:180:23",
												"nodeType": "YulFunctionDefinition",
												"src": "10907:180:23"
											},
											{
												"body": {
													"nativeSrc": "11137:147:23",
													"nodeType": "YulBlock",
													"src": "11137:147:23",
													"statements": [
														{
															"nativeSrc": "11147:25:23",
															"nodeType": "YulAssignment",
															"src": "11147:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11170:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "11170:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11152:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "11152:17:23"
																},
																"nativeSrc": "11152:20:23",
																"nodeType": "YulFunctionCall",
																"src": "11152:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11147:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "11147:1:23"
																}
															]
														},
														{
															"nativeSrc": "11181:25:23",
															"nodeType": "YulAssignment",
															"src": "11181:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11204:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "11204:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11186:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "11186:17:23"
																},
																"nativeSrc": "11186:20:23",
																"nodeType": "YulFunctionCall",
																"src": "11186:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11181:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "11181:1:23"
																}
															]
														},
														{
															"nativeSrc": "11215:16:23",
															"nodeType": "YulAssignment",
															"src": "11215:16:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11226:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "11226:1:23"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11229:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "11229:1:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11222:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "11222:3:23"
																},
																"nativeSrc": "11222:9:23",
																"nodeType": "YulFunctionCall",
																"src": "11222:9:23"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11215:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "11215:3:23"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11255:22:23",
																"nodeType": "YulBlock",
																"src": "11255:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11257:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "11257:16:23"
																			},
																			"nativeSrc": "11257:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "11257:18:23"
																		},
																		"nativeSrc": "11257:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "11257:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11247:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "11247:1:23"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11250:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "11250:3:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11244:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "11244:2:23"
																},
																"nativeSrc": "11244:10:23",
																"nodeType": "YulFunctionCall",
																"src": "11244:10:23"
															},
															"nativeSrc": "11241:36:23",
															"nodeType": "YulIf",
															"src": "11241:36:23"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11093:191:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11124:1:23",
														"nodeType": "YulTypedName",
														"src": "11124:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11127:1:23",
														"nodeType": "YulTypedName",
														"src": "11127:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11133:3:23",
														"nodeType": "YulTypedName",
														"src": "11133:3:23",
														"type": ""
													}
												],
												"src": "11093:191:23"
											},
											{
												"body": {
													"nativeSrc": "11386:73:23",
													"nodeType": "YulBlock",
													"src": "11386:73:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11403:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "11403:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11408:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "11408:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11396:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "11396:6:23"
																},
																"nativeSrc": "11396:19:23",
																"nodeType": "YulFunctionCall",
																"src": "11396:19:23"
															},
															"nativeSrc": "11396:19:23",
															"nodeType": "YulExpressionStatement",
															"src": "11396:19:23"
														},
														{
															"nativeSrc": "11424:29:23",
															"nodeType": "YulAssignment",
															"src": "11424:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11443:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "11443:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11448:4:23",
																		"nodeType": "YulLiteral",
																		"src": "11448:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11439:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "11439:3:23"
																},
																"nativeSrc": "11439:14:23",
																"nodeType": "YulFunctionCall",
																"src": "11439:14:23"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11424:11:23",
																	"nodeType": "YulIdentifier",
																	"src": "11424:11:23"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11290:169:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11358:3:23",
														"nodeType": "YulTypedName",
														"src": "11358:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11363:6:23",
														"nodeType": "YulTypedName",
														"src": "11363:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11374:11:23",
														"nodeType": "YulTypedName",
														"src": "11374:11:23",
														"type": ""
													}
												],
												"src": "11290:169:23"
											},
											{
												"body": {
													"nativeSrc": "11571:72:23",
													"nodeType": "YulBlock",
													"src": "11571:72:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11593:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "11593:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11601:1:23",
																				"nodeType": "YulLiteral",
																				"src": "11601:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11589:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "11589:3:23"
																		},
																		"nativeSrc": "11589:14:23",
																		"nodeType": "YulFunctionCall",
																		"src": "11589:14:23"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e",
																		"kind": "string",
																		"nativeSrc": "11605:30:23",
																		"nodeType": "YulLiteral",
																		"src": "11605:30:23",
																		"type": "",
																		"value": "Not enough tokens available."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11582:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "11582:6:23"
																},
																"nativeSrc": "11582:54:23",
																"nodeType": "YulFunctionCall",
																"src": "11582:54:23"
															},
															"nativeSrc": "11582:54:23",
															"nodeType": "YulExpressionStatement",
															"src": "11582:54:23"
														}
													]
												},
												"name": "store_literal_in_memory_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7",
												"nativeSrc": "11465:178:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11563:6:23",
														"nodeType": "YulTypedName",
														"src": "11563:6:23",
														"type": ""
													}
												],
												"src": "11465:178:23"
											},
											{
												"body": {
													"nativeSrc": "11795:220:23",
													"nodeType": "YulBlock",
													"src": "11795:220:23",
													"statements": [
														{
															"nativeSrc": "11805:74:23",
															"nodeType": "YulAssignment",
															"src": "11805:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11871:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "11871:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11876:2:23",
																		"nodeType": "YulLiteral",
																		"src": "11876:2:23",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11812:58:23",
																	"nodeType": "YulIdentifier",
																	"src": "11812:58:23"
																},
																"nativeSrc": "11812:67:23",
																"nodeType": "YulFunctionCall",
																"src": "11812:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11805:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "11805:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11977:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "11977:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7",
																	"nativeSrc": "11888:88:23",
																	"nodeType": "YulIdentifier",
																	"src": "11888:88:23"
																},
																"nativeSrc": "11888:93:23",
																"nodeType": "YulFunctionCall",
																"src": "11888:93:23"
															},
															"nativeSrc": "11888:93:23",
															"nodeType": "YulExpressionStatement",
															"src": "11888:93:23"
														},
														{
															"nativeSrc": "11990:19:23",
															"nodeType": "YulAssignment",
															"src": "11990:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12001:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "12001:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12006:2:23",
																		"nodeType": "YulLiteral",
																		"src": "12006:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11997:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "11997:3:23"
																},
																"nativeSrc": "11997:12:23",
																"nodeType": "YulFunctionCall",
																"src": "11997:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11990:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "11990:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11649:366:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11783:3:23",
														"nodeType": "YulTypedName",
														"src": "11783:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11791:3:23",
														"nodeType": "YulTypedName",
														"src": "11791:3:23",
														"type": ""
													}
												],
												"src": "11649:366:23"
											},
											{
												"body": {
													"nativeSrc": "12192:248:23",
													"nodeType": "YulBlock",
													"src": "12192:248:23",
													"statements": [
														{
															"nativeSrc": "12202:26:23",
															"nodeType": "YulAssignment",
															"src": "12202:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12214:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "12214:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12225:2:23",
																		"nodeType": "YulLiteral",
																		"src": "12225:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12210:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "12210:3:23"
																},
																"nativeSrc": "12210:18:23",
																"nodeType": "YulFunctionCall",
																"src": "12210:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12202:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "12202:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12249:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "12249:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12260:1:23",
																				"nodeType": "YulLiteral",
																				"src": "12260:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12245:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "12245:3:23"
																		},
																		"nativeSrc": "12245:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "12245:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12268:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "12268:4:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12274:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "12274:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12264:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "12264:3:23"
																		},
																		"nativeSrc": "12264:20:23",
																		"nodeType": "YulFunctionCall",
																		"src": "12264:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12238:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "12238:6:23"
																},
																"nativeSrc": "12238:47:23",
																"nodeType": "YulFunctionCall",
																"src": "12238:47:23"
															},
															"nativeSrc": "12238:47:23",
															"nodeType": "YulExpressionStatement",
															"src": "12238:47:23"
														},
														{
															"nativeSrc": "12294:139:23",
															"nodeType": "YulAssignment",
															"src": "12294:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12428:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "12428:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12302:124:23",
																	"nodeType": "YulIdentifier",
																	"src": "12302:124:23"
																},
																"nativeSrc": "12302:131:23",
																"nodeType": "YulFunctionCall",
																"src": "12302:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12294:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "12294:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12021:419:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12172:9:23",
														"nodeType": "YulTypedName",
														"src": "12172:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12187:4:23",
														"nodeType": "YulTypedName",
														"src": "12187:4:23",
														"type": ""
													}
												],
												"src": "12021:419:23"
											},
											{
												"body": {
													"nativeSrc": "12491:32:23",
													"nodeType": "YulBlock",
													"src": "12491:32:23",
													"statements": [
														{
															"nativeSrc": "12501:16:23",
															"nodeType": "YulAssignment",
															"src": "12501:16:23",
															"value": {
																"name": "value",
																"nativeSrc": "12512:5:23",
																"nodeType": "YulIdentifier",
																"src": "12512:5:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12501:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "12501:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "12446:77:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12473:5:23",
														"nodeType": "YulTypedName",
														"src": "12473:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12483:7:23",
														"nodeType": "YulTypedName",
														"src": "12483:7:23",
														"type": ""
													}
												],
												"src": "12446:77:23"
											},
											{
												"body": {
													"nativeSrc": "12576:32:23",
													"nodeType": "YulBlock",
													"src": "12576:32:23",
													"statements": [
														{
															"nativeSrc": "12586:16:23",
															"nodeType": "YulAssignment",
															"src": "12586:16:23",
															"value": {
																"name": "value",
																"nativeSrc": "12597:5:23",
																"nodeType": "YulIdentifier",
																"src": "12597:5:23"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "12586:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "12586:7:23"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_bytes32",
												"nativeSrc": "12529:79:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12558:5:23",
														"nodeType": "YulTypedName",
														"src": "12558:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "12568:7:23",
														"nodeType": "YulTypedName",
														"src": "12568:7:23",
														"type": ""
													}
												],
												"src": "12529:79:23"
											},
											{
												"body": {
													"nativeSrc": "12697:74:23",
													"nodeType": "YulBlock",
													"src": "12697:74:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12714:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "12714:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12757:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "12757:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "12739:17:23",
																					"nodeType": "YulIdentifier",
																					"src": "12739:17:23"
																				},
																				"nativeSrc": "12739:24:23",
																				"nodeType": "YulFunctionCall",
																				"src": "12739:24:23"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_bytes32",
																			"nativeSrc": "12719:19:23",
																			"nodeType": "YulIdentifier",
																			"src": "12719:19:23"
																		},
																		"nativeSrc": "12719:45:23",
																		"nodeType": "YulFunctionCall",
																		"src": "12719:45:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12707:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "12707:6:23"
																},
																"nativeSrc": "12707:58:23",
																"nodeType": "YulFunctionCall",
																"src": "12707:58:23"
															},
															"nativeSrc": "12707:58:23",
															"nodeType": "YulExpressionStatement",
															"src": "12707:58:23"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
												"nativeSrc": "12614:157:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12685:5:23",
														"nodeType": "YulTypedName",
														"src": "12685:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12692:3:23",
														"nodeType": "YulTypedName",
														"src": "12692:3:23",
														"type": ""
													}
												],
												"src": "12614:157:23"
											},
											{
												"body": {
													"nativeSrc": "12893:140:23",
													"nodeType": "YulBlock",
													"src": "12893:140:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12966:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "12966:6:23"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12975:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "12975:3:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
																	"nativeSrc": "12904:61:23",
																	"nodeType": "YulIdentifier",
																	"src": "12904:61:23"
																},
																"nativeSrc": "12904:75:23",
																"nodeType": "YulFunctionCall",
																"src": "12904:75:23"
															},
															"nativeSrc": "12904:75:23",
															"nodeType": "YulExpressionStatement",
															"src": "12904:75:23"
														},
														{
															"nativeSrc": "12988:19:23",
															"nodeType": "YulAssignment",
															"src": "12988:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12999:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "12999:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13004:2:23",
																		"nodeType": "YulLiteral",
																		"src": "13004:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12995:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "12995:3:23"
																},
																"nativeSrc": "12995:12:23",
																"nodeType": "YulFunctionCall",
																"src": "12995:12:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12988:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "12988:3:23"
																}
															]
														},
														{
															"nativeSrc": "13017:10:23",
															"nodeType": "YulAssignment",
															"src": "13017:10:23",
															"value": {
																"name": "pos",
																"nativeSrc": "13024:3:23",
																"nodeType": "YulIdentifier",
																"src": "13024:3:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13017:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "13017:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12777:256:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12872:3:23",
														"nodeType": "YulTypedName",
														"src": "12872:3:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12878:6:23",
														"nodeType": "YulTypedName",
														"src": "12878:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12889:3:23",
														"nodeType": "YulTypedName",
														"src": "12889:3:23",
														"type": ""
													}
												],
												"src": "12777:256:23"
											},
											{
												"body": {
													"nativeSrc": "13149:280:23",
													"nodeType": "YulBlock",
													"src": "13149:280:23",
													"statements": [
														{
															"nativeSrc": "13159:53:23",
															"nodeType": "YulVariableDeclaration",
															"src": "13159:53:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13206:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "13206:5:23"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "13173:32:23",
																	"nodeType": "YulIdentifier",
																	"src": "13173:32:23"
																},
																"nativeSrc": "13173:39:23",
																"nodeType": "YulFunctionCall",
																"src": "13173:39:23"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13163:6:23",
																	"nodeType": "YulTypedName",
																	"src": "13163:6:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13221:96:23",
															"nodeType": "YulAssignment",
															"src": "13221:96:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13305:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "13305:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13310:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "13310:6:23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13228:76:23",
																	"nodeType": "YulIdentifier",
																	"src": "13228:76:23"
																},
																"nativeSrc": "13228:89:23",
																"nodeType": "YulFunctionCall",
																"src": "13228:89:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13221:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "13221:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13365:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "13365:5:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13372:4:23",
																				"nodeType": "YulLiteral",
																				"src": "13372:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13361:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "13361:3:23"
																		},
																		"nativeSrc": "13361:16:23",
																		"nodeType": "YulFunctionCall",
																		"src": "13361:16:23"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13379:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "13379:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13384:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "13384:6:23"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13326:34:23",
																	"nodeType": "YulIdentifier",
																	"src": "13326:34:23"
																},
																"nativeSrc": "13326:65:23",
																"nodeType": "YulFunctionCall",
																"src": "13326:65:23"
															},
															"nativeSrc": "13326:65:23",
															"nodeType": "YulExpressionStatement",
															"src": "13326:65:23"
														},
														{
															"nativeSrc": "13400:23:23",
															"nodeType": "YulAssignment",
															"src": "13400:23:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13411:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "13411:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13416:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "13416:6:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13407:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "13407:3:23"
																},
																"nativeSrc": "13407:16:23",
																"nodeType": "YulFunctionCall",
																"src": "13407:16:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13400:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "13400:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13039:390:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13130:5:23",
														"nodeType": "YulTypedName",
														"src": "13130:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13137:3:23",
														"nodeType": "YulTypedName",
														"src": "13137:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13145:3:23",
														"nodeType": "YulTypedName",
														"src": "13145:3:23",
														"type": ""
													}
												],
												"src": "13039:390:23"
											},
											{
												"body": {
													"nativeSrc": "13715:475:23",
													"nodeType": "YulBlock",
													"src": "13715:475:23",
													"statements": [
														{
															"nativeSrc": "13726:102:23",
															"nodeType": "YulAssignment",
															"src": "13726:102:23",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13815:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "13815:6:23"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13824:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "13824:3:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13733:81:23",
																	"nodeType": "YulIdentifier",
																	"src": "13733:81:23"
																},
																"nativeSrc": "13733:95:23",
																"nodeType": "YulFunctionCall",
																"src": "13733:95:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13726:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "13726:3:23"
																}
															]
														},
														{
															"nativeSrc": "13838:102:23",
															"nodeType": "YulAssignment",
															"src": "13838:102:23",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13927:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "13927:6:23"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13936:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "13936:3:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13845:81:23",
																	"nodeType": "YulIdentifier",
																	"src": "13845:81:23"
																},
																"nativeSrc": "13845:95:23",
																"nodeType": "YulFunctionCall",
																"src": "13845:95:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13838:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "13838:3:23"
																}
															]
														},
														{
															"nativeSrc": "13950:102:23",
															"nodeType": "YulAssignment",
															"src": "13950:102:23",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14039:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "14039:6:23"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14048:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "14048:3:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13957:81:23",
																	"nodeType": "YulIdentifier",
																	"src": "13957:81:23"
																},
																"nativeSrc": "13957:95:23",
																"nodeType": "YulFunctionCall",
																"src": "13957:95:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13950:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "13950:3:23"
																}
															]
														},
														{
															"nativeSrc": "14062:102:23",
															"nodeType": "YulAssignment",
															"src": "14062:102:23",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "14151:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "14151:6:23"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14160:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "14160:3:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14069:81:23",
																	"nodeType": "YulIdentifier",
																	"src": "14069:81:23"
																},
																"nativeSrc": "14069:95:23",
																"nodeType": "YulFunctionCall",
																"src": "14069:95:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14062:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "14062:3:23"
																}
															]
														},
														{
															"nativeSrc": "14174:10:23",
															"nodeType": "YulAssignment",
															"src": "14174:10:23",
															"value": {
																"name": "pos",
																"nativeSrc": "14181:3:23",
																"nodeType": "YulIdentifier",
																"src": "14181:3:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14174:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "14174:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13435:755:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13670:3:23",
														"nodeType": "YulTypedName",
														"src": "13670:3:23",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13676:6:23",
														"nodeType": "YulTypedName",
														"src": "13676:6:23",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13684:6:23",
														"nodeType": "YulTypedName",
														"src": "13684:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13692:6:23",
														"nodeType": "YulTypedName",
														"src": "13692:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13700:6:23",
														"nodeType": "YulTypedName",
														"src": "13700:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13711:3:23",
														"nodeType": "YulTypedName",
														"src": "13711:3:23",
														"type": ""
													}
												],
												"src": "13435:755:23"
											},
											{
												"body": {
													"nativeSrc": "14224:152:23",
													"nodeType": "YulBlock",
													"src": "14224:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14241:1:23",
																		"nodeType": "YulLiteral",
																		"src": "14241:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14244:77:23",
																		"nodeType": "YulLiteral",
																		"src": "14244:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14234:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "14234:6:23"
																},
																"nativeSrc": "14234:88:23",
																"nodeType": "YulFunctionCall",
																"src": "14234:88:23"
															},
															"nativeSrc": "14234:88:23",
															"nodeType": "YulExpressionStatement",
															"src": "14234:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14338:1:23",
																		"nodeType": "YulLiteral",
																		"src": "14338:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14341:4:23",
																		"nodeType": "YulLiteral",
																		"src": "14341:4:23",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14331:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "14331:6:23"
																},
																"nativeSrc": "14331:15:23",
																"nodeType": "YulFunctionCall",
																"src": "14331:15:23"
															},
															"nativeSrc": "14331:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "14331:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14362:1:23",
																		"nodeType": "YulLiteral",
																		"src": "14362:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14365:4:23",
																		"nodeType": "YulLiteral",
																		"src": "14365:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14355:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "14355:6:23"
																},
																"nativeSrc": "14355:15:23",
																"nodeType": "YulFunctionCall",
																"src": "14355:15:23"
															},
															"nativeSrc": "14355:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "14355:15:23"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14196:180:23",
												"nodeType": "YulFunctionDefinition",
												"src": "14196:180:23"
											},
											{
												"body": {
													"nativeSrc": "14424:143:23",
													"nodeType": "YulBlock",
													"src": "14424:143:23",
													"statements": [
														{
															"nativeSrc": "14434:25:23",
															"nodeType": "YulAssignment",
															"src": "14434:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14457:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "14457:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14439:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "14439:17:23"
																},
																"nativeSrc": "14439:20:23",
																"nodeType": "YulFunctionCall",
																"src": "14439:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14434:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "14434:1:23"
																}
															]
														},
														{
															"nativeSrc": "14468:25:23",
															"nodeType": "YulAssignment",
															"src": "14468:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14491:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "14491:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14473:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "14473:17:23"
																},
																"nativeSrc": "14473:20:23",
																"nodeType": "YulFunctionCall",
																"src": "14473:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14468:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "14468:1:23"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14515:22:23",
																"nodeType": "YulBlock",
																"src": "14515:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14517:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "14517:16:23"
																			},
																			"nativeSrc": "14517:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "14517:18:23"
																		},
																		"nativeSrc": "14517:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "14517:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14512:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "14512:1:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14505:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "14505:6:23"
																},
																"nativeSrc": "14505:9:23",
																"nodeType": "YulFunctionCall",
																"src": "14505:9:23"
															},
															"nativeSrc": "14502:35:23",
															"nodeType": "YulIf",
															"src": "14502:35:23"
														},
														{
															"nativeSrc": "14547:14:23",
															"nodeType": "YulAssignment",
															"src": "14547:14:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14556:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "14556:1:23"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14559:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "14559:1:23"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14552:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "14552:3:23"
																},
																"nativeSrc": "14552:9:23",
																"nodeType": "YulFunctionCall",
																"src": "14552:9:23"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14547:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "14547:1:23"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14382:185:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14413:1:23",
														"nodeType": "YulTypedName",
														"src": "14413:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14416:1:23",
														"nodeType": "YulTypedName",
														"src": "14416:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14422:1:23",
														"nodeType": "YulTypedName",
														"src": "14422:1:23",
														"type": ""
													}
												],
												"src": "14382:185:23"
											},
											{
												"body": {
													"nativeSrc": "14618:149:23",
													"nodeType": "YulBlock",
													"src": "14618:149:23",
													"statements": [
														{
															"nativeSrc": "14628:25:23",
															"nodeType": "YulAssignment",
															"src": "14628:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14651:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "14651:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14633:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "14633:17:23"
																},
																"nativeSrc": "14633:20:23",
																"nodeType": "YulFunctionCall",
																"src": "14633:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14628:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "14628:1:23"
																}
															]
														},
														{
															"nativeSrc": "14662:25:23",
															"nodeType": "YulAssignment",
															"src": "14662:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14685:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "14685:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14667:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "14667:17:23"
																},
																"nativeSrc": "14667:20:23",
																"nodeType": "YulFunctionCall",
																"src": "14667:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14662:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "14662:1:23"
																}
															]
														},
														{
															"nativeSrc": "14696:17:23",
															"nodeType": "YulAssignment",
															"src": "14696:17:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14708:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "14708:1:23"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14711:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "14711:1:23"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14704:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "14704:3:23"
																},
																"nativeSrc": "14704:9:23",
																"nodeType": "YulFunctionCall",
																"src": "14704:9:23"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14696:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "14696:4:23"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14738:22:23",
																"nodeType": "YulBlock",
																"src": "14738:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14740:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "14740:16:23"
																			},
																			"nativeSrc": "14740:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "14740:18:23"
																		},
																		"nativeSrc": "14740:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "14740:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14729:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "14729:4:23"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14735:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "14735:1:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14726:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "14726:2:23"
																},
																"nativeSrc": "14726:11:23",
																"nodeType": "YulFunctionCall",
																"src": "14726:11:23"
															},
															"nativeSrc": "14723:37:23",
															"nodeType": "YulIf",
															"src": "14723:37:23"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14573:194:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14604:1:23",
														"nodeType": "YulTypedName",
														"src": "14604:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14607:1:23",
														"nodeType": "YulTypedName",
														"src": "14607:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14613:4:23",
														"nodeType": "YulTypedName",
														"src": "14613:4:23",
														"type": ""
													}
												],
												"src": "14573:194:23"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint8t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough tokens available.\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value3,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 23,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600160075f6101000a81548160ff021916908360ff1602179055505f600a5f6101000a81548160ff021916908360ff160217905550609060f81b600a60016101000a81548160ff021916908360f81c0217905550348015610063575f80fd5b506040516118b93803806118b983398181016040528101906100859190610725565b43600581905550600554406006819055508460045f6101000a81548160ff021916908360ff160217905550835f8190555082600290816100c591906109d8565b5081600390816100d591906109d8565b50806001819055506100eb61016460201b60201c565b600890816100f991906109d8565b5061010b6001546102ca60201b60201c565b60098190555060086040516101209190610b31565b60405180910390206006546005547f9f4da1eb02e98b4ab1d9b713f225d0f993b2222a21852024e9d90204be64706a60405160405180910390a45050505050610d5f565b60605f6009546001546101779190610b74565b9050805f5410156101bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b490610c01565b60405180910390fd5b5f6101ce5f546102f860201b60201c565b90505f6101e26001546102f860201b60201c565b90505f600380546101f29061080b565b80601f016020809104026020016040519081016040528092919081815260200182805461021e9061080b565b80156102695780601f1061024057610100808354040283529160200191610269565b820191905f5260205f20905b81548152906001019060200180831161024c57829003601f168201915b505050505090505f6006546040516020016102849190610c48565b60405160208183030381529060405290505f828585846040516020016102ad9493929190610c92565b604051602081830303815290604052905080965050505050505090565b5f806102ed8360045f9054906101000a900460ff1660ff166103c860201b60201c565b905080915050919050565b60605f600161030c8461041e60201b60201c565b0190505f8167ffffffffffffffff81111561032a57610329610601565b5b6040519080825280601f01601f19166020018201604052801561035c5781602001600182028036833780820191505090505b5090505f82602001820190505b6001156103bd578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816103b2576103b1610ccf565b5b0494505f8503610369575b819350505050919050565b5f8082036103e35781836103dc9190610cfc565b9050610418565b5f8314610413576001826001856103fa9190610d2c565b6104049190610cfc565b61040e9190610b74565b610415565b5f5b90505b92915050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061047a577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816104705761046f610ccf565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106104b7576d04ee2d6d415b85acef810000000083816104ad576104ac610ccf565b5b0492506020810190505b662386f26fc1000083106104e657662386f26fc1000083816104dc576104db610ccf565b5b0492506010810190505b6305f5e100831061050f576305f5e100838161050557610504610ccf565b5b0492506008810190505b612710831061053457612710838161052a57610529610ccf565b5b0492506004810190505b60648310610557576064838161054d5761054c610ccf565b5b0492506002810190505b600a8310610566576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f60ff82169050919050565b61059581610580565b811461059f575f80fd5b50565b5f815190506105b08161058c565b92915050565b5f819050919050565b6105c8816105b6565b81146105d2575f80fd5b50565b5f815190506105e3816105bf565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610637826105f1565b810181811067ffffffffffffffff8211171561065657610655610601565b5b80604052505050565b5f61066861056f565b9050610674828261062e565b919050565b5f67ffffffffffffffff82111561069357610692610601565b5b61069c826105f1565b9050602081019050919050565b8281835e5f83830152505050565b5f6106c96106c484610679565b61065f565b9050828152602081018484840111156106e5576106e46105ed565b5b6106f08482856106a9565b509392505050565b5f82601f83011261070c5761070b6105e9565b5b815161071c8482602086016106b7565b91505092915050565b5f805f805f60a0868803121561073e5761073d610578565b5b5f61074b888289016105a2565b955050602061075c888289016105d5565b945050604086015167ffffffffffffffff81111561077d5761077c61057c565b5b610789888289016106f8565b935050606086015167ffffffffffffffff8111156107aa576107a961057c565b5b6107b6888289016106f8565b92505060806107c7888289016105d5565b9150509295509295909350565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061082257607f821691505b602082108103610835576108346107de565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026108977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261085c565b6108a1868361085c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6108dc6108d76108d2846105b6565b6108b9565b6105b6565b9050919050565b5f819050919050565b6108f5836108c2565b610909610901826108e3565b848454610868565b825550505050565b5f90565b61091d610911565b6109288184846108ec565b505050565b5b8181101561094b576109405f82610915565b60018101905061092e565b5050565b601f821115610990576109618161083b565b61096a8461084d565b81016020851015610979578190505b61098d6109858561084d565b83018261092d565b50505b505050565b5f82821c905092915050565b5f6109b05f1984600802610995565b1980831691505092915050565b5f6109c883836109a1565b9150826002028217905092915050565b6109e1826107d4565b67ffffffffffffffff8111156109fa576109f9610601565b5b610a04825461080b565b610a0f82828561094f565b5f60209050601f831160018114610a40575f8415610a2e578287015190505b610a3885826109bd565b865550610a9f565b601f198416610a4e8661083b565b5f5b82811015610a7557848901518255600182019150602085019450602081019050610a50565b86831015610a925784890151610a8e601f8916826109a1565b8355505b6001600288020188555050505b505050505050565b5f81905092915050565b5f8154610abd8161080b565b610ac78186610aa7565b9450600182165f8114610ae15760018114610af657610b28565b60ff1983168652811515820286019350610b28565b610aff8561083b565b5f5b83811015610b2057815481890152600182019150602081019050610b01565b838801955050505b50505092915050565b5f610b3c8284610ab1565b915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b7e826105b6565b9150610b89836105b6565b9250828201905080821115610ba157610ba0610b47565b5b92915050565b5f82825260208201905092915050565b7f4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e000000005f82015250565b5f610beb601c83610ba7565b9150610bf682610bb7565b602082019050919050565b5f6020820190508181035f830152610c1881610bdf565b9050919050565b5f819050919050565b5f819050919050565b610c42610c3d82610c1f565b610c28565b82525050565b5f610c538284610c31565b60208201915081905092915050565b5f610c6c826107d4565b610c768185610aa7565b9350610c868185602086016106a9565b80840191505092915050565b5f610c9d8287610c62565b9150610ca98286610c62565b9150610cb58285610c62565b9150610cc18284610c62565b915081905095945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610d06826105b6565b9150610d11836105b6565b925082610d2157610d20610ccf565b5b828204905092915050565b5f610d36826105b6565b9150610d41836105b6565b9250828203905081811115610d5957610d58610b47565b5b92915050565b610b4d80610d6c5f395ff3fe608060405234801561000f575f80fd5b50600436106100b2575f3560e01c80636a49f9791161006f5780636a49f9791461017d57806395d89b411461019b578063b62a62ec146101b9578063e8315742146101d7578063f22a195e146101f5578063f82900b114610213576100b2565b80630572b0cc146100b657806306fdde03146100d457806318160ddd146100f25780633ba0b9a9146101105780634fc8a9911461012e57806357e871e71461015f575b5f80fd5b6100be610231565b6040516100cb9190610609565b60405180910390f35b6100dc61023a565b6040516100e99190610692565b60405180910390f35b6100fa6102c6565b6040516101079190610609565b60405180910390f35b6101186102cc565b60405161012591906106cd565b60405180910390f35b6101486004803603810190610143919061087d565b6102de565b604051610156929190610909565b60405180910390f35b610167610432565b6040516101749190610609565b60405180910390f35b610185610438565b6040516101929190610692565b60405180910390f35b6101a36104c4565b6040516101b09190610692565b60405180910390f35b6101c1610550565b6040516101ce9190610692565b60405180910390f35b6101df6105e0565b6040516101ec9190610609565b60405180910390f35b6101fd6105e5565b60405161020a9190610930565b60405180910390f35b61021b6105eb565b6040516102289190610609565b60405180910390f35b5f600954905090565b6003805461024790610976565b80601f016020809104026020016040519081016040528092919081815260200182805461027390610976565b80156102be5780601f10610295576101008083540402835291602001916102be565b820191905f5260205f20905b8154815290600101906020018083116102a157829003601f168201915b505050505081565b60015481565b60045f9054906101000a900460ff1681565b5f805f6008846040516020016102f5929190610a72565b60405160208183030381529060405290505f816040516020016103189190610692565b6040516020818303038152906040528051906020012090505f5b60208160ff1611610421575f828260ff166020811061035457610353610a95565b5b1a60f81b9050600a60019054906101000a900460f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361040d576009546005548973ffffffffffffffffffffffffffffffffffffffff167f5a9ec13c12ca9563a7b3108125f74c57ed388bb313394ea50f7e4a71b01497c260405160405180910390a4600183955095505050505061042b565b50808061041990610aef565b915050610332565b505f819350935050505b9250929050565b60055481565b6008805461044590610976565b80601f016020809104026020016040519081016040528092919081815260200182805461047190610976565b80156104bc5780601f10610493576101008083540402835291602001916104bc565b820191905f5260205f20905b81548152906001019060200180831161049f57829003601f168201915b505050505081565b600280546104d190610976565b80601f01602080910402602001604051908101604052809291908181526020018280546104fd90610976565b80156105485780601f1061051f57610100808354040283529160200191610548565b820191905f5260205f20905b81548152906001019060200180831161052b57829003601f168201915b505050505081565b60606008805461055f90610976565b80601f016020809104026020016040519081016040528092919081815260200182805461058b90610976565b80156105d65780601f106105ad576101008083540402835291602001916105d6565b820191905f5260205f20905b8154815290600101906020018083116105b957829003601f168201915b5050505050905090565b5f5481565b60065481565b60095481565b5f819050919050565b610603816105f1565b82525050565b5f60208201905061061c5f8301846105fa565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61066482610622565b61066e818561062c565b935061067e81856020860161063c565b6106878161064a565b840191505092915050565b5f6020820190508181035f8301526106aa818461065a565b905092915050565b5f60ff82169050919050565b6106c7816106b2565b82525050565b5f6020820190506106e05f8301846106be565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610720826106f7565b9050919050565b61073081610716565b811461073a575f80fd5b50565b5f8135905061074b81610727565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61078f8261064a565b810181811067ffffffffffffffff821117156107ae576107ad610759565b5b80604052505050565b5f6107c06106e6565b90506107cc8282610786565b919050565b5f67ffffffffffffffff8211156107eb576107ea610759565b5b6107f48261064a565b9050602081019050919050565b828183375f83830152505050565b5f61082161081c846107d1565b6107b7565b90508281526020810184848401111561083d5761083c610755565b5b610848848285610801565b509392505050565b5f82601f83011261086457610863610751565b5b813561087484826020860161080f565b91505092915050565b5f8060408385031215610893576108926106ef565b5b5f6108a08582860161073d565b925050602083013567ffffffffffffffff8111156108c1576108c06106f3565b5b6108cd85828601610850565b9150509250929050565b5f8115159050919050565b6108eb816108d7565b82525050565b5f819050919050565b610903816108f1565b82525050565b5f60408201905061091c5f8301856108e2565b61092960208301846108fa565b9392505050565b5f6020820190506109435f8301846108fa565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061098d57607f821691505b6020821081036109a05761099f610949565b5b50919050565b5f81905092915050565b5f819050815f5260205f209050919050565b5f81546109ce81610976565b6109d881866109a6565b9450600182165f81146109f25760018114610a0757610a39565b60ff1983168652811515820286019350610a39565b610a10856109b0565b5f5b83811015610a3157815481890152600182019150602081019050610a12565b838801955050505b50505092915050565b5f610a4c82610622565b610a5681856109a6565b9350610a6681856020860161063c565b80840191505092915050565b5f610a7d82856109c2565b9150610a898284610a42565b91508190509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610af9826106b2565b915060ff8203610b0c57610b0b610ac2565b5b60018201905091905056fea26469706673582212202ee99f0a55f292f0117329f20d9e897459eb6e84223f7b6467ba76b2a934f1f964736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x90 PUSH1 0xF8 SHL PUSH1 0xA PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xF8 SHR MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x18B9 CODESIZE SUB DUP1 PUSH2 0x18B9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x85 SWAP2 SWAP1 PUSH2 0x725 JUMP JUMPDEST NUMBER PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD BLOCKHASH PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH0 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x9D8 JUMP JUMPDEST POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x9D8 JUMP JUMPDEST POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0xEB PUSH2 0x164 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x8 SWAP1 DUP2 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x9D8 JUMP JUMPDEST POP PUSH2 0x10B PUSH1 0x1 SLOAD PUSH2 0x2CA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH32 0x9F4DA1EB02E98B4AB1D9B713F225D0F993B2222A21852024E9D90204BE64706A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x9 SLOAD PUSH1 0x1 SLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SLOAD LT ISZERO PUSH2 0x1BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B4 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1CE PUSH0 SLOAD PUSH2 0x2F8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1E2 PUSH1 0x1 SLOAD PUSH2 0x2F8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1F2 SWAP1 PUSH2 0x80B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21E SWAP1 PUSH2 0x80B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x269 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x240 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x269 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x24C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH0 DUP3 DUP6 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2AD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2ED DUP4 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH2 0x3C8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x30C DUP5 PUSH2 0x41E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32A JUMPI PUSH2 0x329 PUSH2 0x601 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x35C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x3BD JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x3B2 JUMPI PUSH2 0x3B1 PUSH2 0xCCF JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x369 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SUB PUSH2 0x3E3 JUMPI DUP2 DUP4 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST SWAP1 POP PUSH2 0x418 JUMP JUMPDEST PUSH0 DUP4 EQ PUSH2 0x413 JUMPI PUSH1 0x1 DUP3 PUSH1 0x1 DUP6 PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0xD2C JUMP JUMPDEST PUSH2 0x404 SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0x40E SWAP2 SWAP1 PUSH2 0xB74 JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST PUSH0 JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x47A JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x470 JUMPI PUSH2 0x46F PUSH2 0xCCF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x4B7 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x4AD JUMPI PUSH2 0x4AC PUSH2 0xCCF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x4E6 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x4DC JUMPI PUSH2 0x4DB PUSH2 0xCCF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x50F JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x505 JUMPI PUSH2 0x504 PUSH2 0xCCF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x534 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x52A JUMPI PUSH2 0x529 PUSH2 0xCCF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x557 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x54D JUMPI PUSH2 0x54C PUSH2 0xCCF JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x566 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x595 DUP2 PUSH2 0x580 JUMP JUMPDEST DUP2 EQ PUSH2 0x59F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x5B0 DUP2 PUSH2 0x58C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C8 DUP2 PUSH2 0x5B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x5D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x5E3 DUP2 PUSH2 0x5BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x637 DUP3 PUSH2 0x5F1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x656 JUMPI PUSH2 0x655 PUSH2 0x601 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x668 PUSH2 0x56F JUMP JUMPDEST SWAP1 POP PUSH2 0x674 DUP3 DUP3 PUSH2 0x62E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x693 JUMPI PUSH2 0x692 PUSH2 0x601 JUMP JUMPDEST JUMPDEST PUSH2 0x69C DUP3 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6C9 PUSH2 0x6C4 DUP5 PUSH2 0x679 JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x6E5 JUMPI PUSH2 0x6E4 PUSH2 0x5ED JUMP JUMPDEST JUMPDEST PUSH2 0x6F0 DUP5 DUP3 DUP6 PUSH2 0x6A9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x70C JUMPI PUSH2 0x70B PUSH2 0x5E9 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x71C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x6B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x73E JUMPI PUSH2 0x73D PUSH2 0x578 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x74B DUP9 DUP3 DUP10 ADD PUSH2 0x5A2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x75C DUP9 DUP3 DUP10 ADD PUSH2 0x5D5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x77D JUMPI PUSH2 0x77C PUSH2 0x57C JUMP JUMPDEST JUMPDEST PUSH2 0x789 DUP9 DUP3 DUP10 ADD PUSH2 0x6F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7AA JUMPI PUSH2 0x7A9 PUSH2 0x57C JUMP JUMPDEST JUMPDEST PUSH2 0x7B6 DUP9 DUP3 DUP10 ADD PUSH2 0x6F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x7C7 DUP9 DUP3 DUP10 ADD PUSH2 0x5D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x822 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x835 JUMPI PUSH2 0x834 PUSH2 0x7DE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x897 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x85C JUMP JUMPDEST PUSH2 0x8A1 DUP7 DUP4 PUSH2 0x85C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8DC PUSH2 0x8D7 PUSH2 0x8D2 DUP5 PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0x8B9 JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F5 DUP4 PUSH2 0x8C2 JUMP JUMPDEST PUSH2 0x909 PUSH2 0x901 DUP3 PUSH2 0x8E3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x868 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x91D PUSH2 0x911 JUMP JUMPDEST PUSH2 0x928 DUP2 DUP5 DUP5 PUSH2 0x8EC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x94B JUMPI PUSH2 0x940 PUSH0 DUP3 PUSH2 0x915 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x92E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x990 JUMPI PUSH2 0x961 DUP2 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x96A DUP5 PUSH2 0x84D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x979 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x98D PUSH2 0x985 DUP6 PUSH2 0x84D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x92D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9B0 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x995 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9C8 DUP4 DUP4 PUSH2 0x9A1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9E1 DUP3 PUSH2 0x7D4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9FA JUMPI PUSH2 0x9F9 PUSH2 0x601 JUMP JUMPDEST JUMPDEST PUSH2 0xA04 DUP3 SLOAD PUSH2 0x80B JUMP JUMPDEST PUSH2 0xA0F DUP3 DUP3 DUP6 PUSH2 0x94F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA40 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xA2E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA38 DUP6 DUP3 PUSH2 0x9BD JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA4E DUP7 PUSH2 0x83B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA75 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA50 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA92 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA8E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x9A1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0xABD DUP2 PUSH2 0x80B JUMP JUMPDEST PUSH2 0xAC7 DUP2 DUP7 PUSH2 0xAA7 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0xAE1 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xAF6 JUMPI PUSH2 0xB28 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0xB28 JUMP JUMPDEST PUSH2 0xAFF DUP6 PUSH2 0x83B JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB20 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB01 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB3C DUP3 DUP5 PUSH2 0xAB1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB7E DUP3 PUSH2 0x5B6 JUMP JUMPDEST SWAP2 POP PUSH2 0xB89 DUP4 PUSH2 0x5B6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xBA1 JUMPI PUSH2 0xBA0 PUSH2 0xB47 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320617661696C61626C652E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBEB PUSH1 0x1C DUP4 PUSH2 0xBA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xBF6 DUP3 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC18 DUP2 PUSH2 0xBDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC42 PUSH2 0xC3D DUP3 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0xC28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC53 DUP3 DUP5 PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC6C DUP3 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0xC76 DUP2 DUP6 PUSH2 0xAA7 JUMP JUMPDEST SWAP4 POP PUSH2 0xC86 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x6A9 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC9D DUP3 DUP8 PUSH2 0xC62 JUMP JUMPDEST SWAP2 POP PUSH2 0xCA9 DUP3 DUP7 PUSH2 0xC62 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB5 DUP3 DUP6 PUSH2 0xC62 JUMP JUMPDEST SWAP2 POP PUSH2 0xCC1 DUP3 DUP5 PUSH2 0xC62 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD06 DUP3 PUSH2 0x5B6 JUMP JUMPDEST SWAP2 POP PUSH2 0xD11 DUP4 PUSH2 0x5B6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xD21 JUMPI PUSH2 0xD20 PUSH2 0xCCF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD36 DUP3 PUSH2 0x5B6 JUMP JUMPDEST SWAP2 POP PUSH2 0xD41 DUP4 PUSH2 0x5B6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xD59 JUMPI PUSH2 0xD58 PUSH2 0xB47 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB4D DUP1 PUSH2 0xD6C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A49F979 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x6A49F979 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xB62A62EC EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xE8315742 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xF22A195E EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xF82900B1 EQ PUSH2 0x213 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x572B0CC EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x3BA0B9A9 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x4FC8A991 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x57E871E7 EQ PUSH2 0x15F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x23A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x87D JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP3 SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH2 0x438 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x9 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x247 SWAP1 PUSH2 0x976 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x273 SWAP1 PUSH2 0x976 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x295 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x8 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2F5 SWAP3 SWAP2 SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xFF AND GT PUSH2 0x421 JUMPI PUSH0 DUP3 DUP3 PUSH1 0xFF AND PUSH1 0x20 DUP2 LT PUSH2 0x354 JUMPI PUSH2 0x353 PUSH2 0xA95 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL SWAP1 POP PUSH1 0xA PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x40D JUMPI PUSH1 0x9 SLOAD PUSH1 0x5 SLOAD DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5A9EC13C12CA9563A7B3108125F74C57ED388BB313394EA50F7E4A71B01497C2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 DUP4 SWAP6 POP SWAP6 POP POP POP POP POP PUSH2 0x42B JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x419 SWAP1 PUSH2 0xAEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x332 JUMP JUMPDEST POP PUSH0 DUP2 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x445 SWAP1 PUSH2 0x976 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x471 SWAP1 PUSH2 0x976 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x493 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x4D1 SWAP1 PUSH2 0x976 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FD SWAP1 PUSH2 0x976 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x548 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x548 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x55F SWAP1 PUSH2 0x976 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58B SWAP1 PUSH2 0x976 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x603 DUP2 PUSH2 0x5F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x61C PUSH0 DUP4 ADD DUP5 PUSH2 0x5FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x664 DUP3 PUSH2 0x622 JUMP JUMPDEST PUSH2 0x66E DUP2 DUP6 PUSH2 0x62C JUMP JUMPDEST SWAP4 POP PUSH2 0x67E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x63C JUMP JUMPDEST PUSH2 0x687 DUP2 PUSH2 0x64A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6AA DUP2 DUP5 PUSH2 0x65A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C7 DUP2 PUSH2 0x6B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x6BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x720 DUP3 PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x730 DUP2 PUSH2 0x716 JUMP JUMPDEST DUP2 EQ PUSH2 0x73A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x74B DUP2 PUSH2 0x727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x78F DUP3 PUSH2 0x64A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x7AE JUMPI PUSH2 0x7AD PUSH2 0x759 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7C0 PUSH2 0x6E6 JUMP JUMPDEST SWAP1 POP PUSH2 0x7CC DUP3 DUP3 PUSH2 0x786 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x7EB JUMPI PUSH2 0x7EA PUSH2 0x759 JUMP JUMPDEST JUMPDEST PUSH2 0x7F4 DUP3 PUSH2 0x64A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x821 PUSH2 0x81C DUP5 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x83D JUMPI PUSH2 0x83C PUSH2 0x755 JUMP JUMPDEST JUMPDEST PUSH2 0x848 DUP5 DUP3 DUP6 PUSH2 0x801 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x864 JUMPI PUSH2 0x863 PUSH2 0x751 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x874 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x80F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x893 JUMPI PUSH2 0x892 PUSH2 0x6EF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8A0 DUP6 DUP3 DUP7 ADD PUSH2 0x73D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8C1 JUMPI PUSH2 0x8C0 PUSH2 0x6F3 JUMP JUMPDEST JUMPDEST PUSH2 0x8CD DUP6 DUP3 DUP7 ADD PUSH2 0x850 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EB DUP2 PUSH2 0x8D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x903 DUP2 PUSH2 0x8F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x91C PUSH0 DUP4 ADD DUP6 PUSH2 0x8E2 JUMP JUMPDEST PUSH2 0x929 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8FA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x943 PUSH0 DUP4 ADD DUP5 PUSH2 0x8FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x98D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x9A0 JUMPI PUSH2 0x99F PUSH2 0x949 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x9CE DUP2 PUSH2 0x976 JUMP JUMPDEST PUSH2 0x9D8 DUP2 DUP7 PUSH2 0x9A6 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0x9F2 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xA07 JUMPI PUSH2 0xA39 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0xA39 JUMP JUMPDEST PUSH2 0xA10 DUP6 PUSH2 0x9B0 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA31 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA12 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA4C DUP3 PUSH2 0x622 JUMP JUMPDEST PUSH2 0xA56 DUP2 DUP6 PUSH2 0x9A6 JUMP JUMPDEST SWAP4 POP PUSH2 0xA66 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x63C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA7D DUP3 DUP6 PUSH2 0x9C2 JUMP JUMPDEST SWAP2 POP PUSH2 0xA89 DUP3 DUP5 PUSH2 0xA42 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAF9 DUP3 PUSH2 0x6B2 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0xB0C JUMPI PUSH2 0xB0B PUSH2 0xAC2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xE9 SWAP16 EXP SSTORE CALLCODE SWAP3 CREATE GT PUSH20 0x29F20D9E897459EB6E84223F7B6467BA76B2A934 CALL 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "555:3408:21:-:0;;;883:1;855:29;;;;;;;;;;;;;;;;;;;;982:1;961:22;;;;;;;;;;;;;;;;;;;;1015:4;990:29;;;;;;;;;;;;;;;;;;;;;;1463:568;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1645:12;1631:11;:26;;;;1690:11;;1680:22;1668:9;:34;;;;1728:8;1713:12;;:23;;;;;;;;;;;;;;;;;;1759:6;1747:9;:18;;;;1785:4;1776:6;:13;;;;;;:::i;:::-;;1808:7;1801:4;:14;;;;;;:::i;:::-;;1841:8;1827:11;:22;;;;1873:21;:19;;;:21;;:::i;:::-;1860:10;:34;;;;;;:::i;:::-;;1923:35;1946:11;;1923:22;;;:35;;:::i;:::-;1907:13;:51;;;;2012:10;1974:49;;;;;;:::i;:::-;;;;;;;;2001:9;;1988:11;;1974:49;;;;;;;;;;1463:568;;;;;555:3408;;2249:822;2329:28;2375:20;2412:13;;2398:11;;:27;;;;:::i;:::-;2375:50;;2457:12;2444:9;;:25;;2436:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2607:29;2639:27;2656:9;;2639:16;;;:27;;:::i;:::-;2607:59;;2677:31;2711:29;2728:11;;2711:16;;;:29;;:::i;:::-;2677:63;;2751:24;2778:4;2751:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2793:29;2849:9;;2832:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;2793:67;;2871:22;2924:10;2949:15;2979:17;3011:15;2896:141;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2871:166;;3055:8;3048:15;;;;;;;;2249:822;:::o;2039:202::-;2129:7;2154:15;2172:36;2185:8;2195:12;;;;;;;;;;;2172:36;;:12;;;:36;;:::i;:::-;2154:54;;2226:7;2219:14;;;2039:202;;;:::o;637:698:14:-;693:13;742:14;779:1;759:17;770:5;759:10;;;:17;;:::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;3148:331:18:-;3210:7;3238:1;3233;:6;3229:127;;3344:1;3340;:5;;;;:::i;:::-;3333:12;;;;3229:127;3449:1;3444;:6;:28;;3471:1;3467;3462;3458;:5;;;;:::i;:::-;3457:11;;;;:::i;:::-;:15;;;;:::i;:::-;3444:28;;;3453:1;3444:28;3437:35;;3148:331;;;;;:::o;12214:916::-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7:75:23:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:86;369:7;409:4;402:5;398:16;387:27;;334:86;;;:::o;426:118::-;497:22;513:5;497:22;:::i;:::-;490:5;487:33;477:61;;534:1;531;524:12;477:61;426:118;:::o;550:139::-;605:5;636:6;630:13;621:22;;652:31;677:5;652:31;:::i;:::-;550:139;;;;:::o;695:77::-;732:7;761:5;750:16;;695:77;;;:::o;778:122::-;851:24;869:5;851:24;:::i;:::-;844:5;841:35;831:63;;890:1;887;880:12;831:63;778:122;:::o;906:143::-;963:5;994:6;988:13;979:22;;1010:33;1037:5;1010:33;:::i;:::-;906:143;;;;:::o;1055:117::-;1164:1;1161;1154:12;1178:117;1287:1;1284;1277:12;1301:102;1342:6;1393:2;1389:7;1384:2;1377:5;1373:14;1369:28;1359:38;;1301:102;;;:::o;1409:180::-;1457:77;1454:1;1447:88;1554:4;1551:1;1544:15;1578:4;1575:1;1568:15;1595:281;1678:27;1700:4;1678:27;:::i;:::-;1670:6;1666:40;1808:6;1796:10;1793:22;1772:18;1760:10;1757:34;1754:62;1751:88;;;1819:18;;:::i;:::-;1751:88;1859:10;1855:2;1848:22;1638:238;1595:281;;:::o;1882:129::-;1916:6;1943:20;;:::i;:::-;1933:30;;1972:33;2000:4;1992:6;1972:33;:::i;:::-;1882:129;;;:::o;2017:308::-;2079:4;2169:18;2161:6;2158:30;2155:56;;;2191:18;;:::i;:::-;2155:56;2229:29;2251:6;2229:29;:::i;:::-;2221:37;;2313:4;2307;2303:15;2295:23;;2017:308;;;:::o;2331:139::-;2420:6;2415:3;2410;2404:23;2461:1;2452:6;2447:3;2443:16;2436:27;2331:139;;;:::o;2476:434::-;2565:5;2590:66;2606:49;2648:6;2606:49;:::i;:::-;2590:66;:::i;:::-;2581:75;;2679:6;2672:5;2665:21;2717:4;2710:5;2706:16;2755:3;2746:6;2741:3;2737:16;2734:25;2731:112;;;2762:79;;:::i;:::-;2731:112;2852:52;2897:6;2892:3;2887;2852:52;:::i;:::-;2571:339;2476:434;;;;;:::o;2930:355::-;2997:5;3046:3;3039:4;3031:6;3027:17;3023:27;3013:122;;3054:79;;:::i;:::-;3013:122;3164:6;3158:13;3189:90;3275:3;3267:6;3260:4;3252:6;3248:17;3189:90;:::i;:::-;3180:99;;3003:282;2930:355;;;;:::o;3291:1319::-;3415:6;3423;3431;3439;3447;3496:3;3484:9;3475:7;3471:23;3467:33;3464:120;;;3503:79;;:::i;:::-;3464:120;3623:1;3648:62;3702:7;3693:6;3682:9;3678:22;3648:62;:::i;:::-;3638:72;;3594:126;3759:2;3785:64;3841:7;3832:6;3821:9;3817:22;3785:64;:::i;:::-;3775:74;;3730:129;3919:2;3908:9;3904:18;3898:25;3950:18;3942:6;3939:30;3936:117;;;3972:79;;:::i;:::-;3936:117;4077:74;4143:7;4134:6;4123:9;4119:22;4077:74;:::i;:::-;4067:84;;3869:292;4221:2;4210:9;4206:18;4200:25;4252:18;4244:6;4241:30;4238:117;;;4274:79;;:::i;:::-;4238:117;4379:74;4445:7;4436:6;4425:9;4421:22;4379:74;:::i;:::-;4369:84;;4171:292;4502:3;4529:64;4585:7;4576:6;4565:9;4561:22;4529:64;:::i;:::-;4519:74;;4473:130;3291:1319;;;;;;;;:::o;4616:99::-;4668:6;4702:5;4696:12;4686:22;;4616:99;;;:::o;4721:180::-;4769:77;4766:1;4759:88;4866:4;4863:1;4856:15;4890:4;4887:1;4880:15;4907:320;4951:6;4988:1;4982:4;4978:12;4968:22;;5035:1;5029:4;5025:12;5056:18;5046:81;;5112:4;5104:6;5100:17;5090:27;;5046:81;5174:2;5166:6;5163:14;5143:18;5140:38;5137:84;;5193:18;;:::i;:::-;5137:84;4958:269;4907:320;;;:::o;5233:141::-;5282:4;5305:3;5297:11;;5328:3;5325:1;5318:14;5362:4;5359:1;5349:18;5341:26;;5233:141;;;:::o;5380:93::-;5417:6;5464:2;5459;5452:5;5448:14;5444:23;5434:33;;5380:93;;;:::o;5479:107::-;5523:8;5573:5;5567:4;5563:16;5542:37;;5479:107;;;;:::o;5592:393::-;5661:6;5711:1;5699:10;5695:18;5734:97;5764:66;5753:9;5734:97;:::i;:::-;5852:39;5882:8;5871:9;5852:39;:::i;:::-;5840:51;;5924:4;5920:9;5913:5;5909:21;5900:30;;5973:4;5963:8;5959:19;5952:5;5949:30;5939:40;;5668:317;;5592:393;;;;;:::o;5991:60::-;6019:3;6040:5;6033:12;;5991:60;;;:::o;6057:142::-;6107:9;6140:53;6158:34;6167:24;6185:5;6167:24;:::i;:::-;6158:34;:::i;:::-;6140:53;:::i;:::-;6127:66;;6057:142;;;:::o;6205:75::-;6248:3;6269:5;6262:12;;6205:75;;;:::o;6286:269::-;6396:39;6427:7;6396:39;:::i;:::-;6457:91;6506:41;6530:16;6506:41;:::i;:::-;6498:6;6491:4;6485:11;6457:91;:::i;:::-;6451:4;6444:105;6362:193;6286:269;;;:::o;6561:73::-;6606:3;6561:73;:::o;6640:189::-;6717:32;;:::i;:::-;6758:65;6816:6;6808;6802:4;6758:65;:::i;:::-;6693:136;6640:189;;:::o;6835:186::-;6895:120;6912:3;6905:5;6902:14;6895:120;;;6966:39;7003:1;6996:5;6966:39;:::i;:::-;6939:1;6932:5;6928:13;6919:22;;6895:120;;;6835:186;;:::o;7027:543::-;7128:2;7123:3;7120:11;7117:446;;;7162:38;7194:5;7162:38;:::i;:::-;7246:29;7264:10;7246:29;:::i;:::-;7236:8;7232:44;7429:2;7417:10;7414:18;7411:49;;;7450:8;7435:23;;7411:49;7473:80;7529:22;7547:3;7529:22;:::i;:::-;7519:8;7515:37;7502:11;7473:80;:::i;:::-;7132:431;;7117:446;7027:543;;;:::o;7576:117::-;7630:8;7680:5;7674:4;7670:16;7649:37;;7576:117;;;;:::o;7699:169::-;7743:6;7776:51;7824:1;7820:6;7812:5;7809:1;7805:13;7776:51;:::i;:::-;7772:56;7857:4;7851;7847:15;7837:25;;7750:118;7699:169;;;;:::o;7873:295::-;7949:4;8095:29;8120:3;8114:4;8095:29;:::i;:::-;8087:37;;8157:3;8154:1;8150:11;8144:4;8141:21;8133:29;;7873:295;;;;:::o;8173:1395::-;8290:37;8323:3;8290:37;:::i;:::-;8392:18;8384:6;8381:30;8378:56;;;8414:18;;:::i;:::-;8378:56;8458:38;8490:4;8484:11;8458:38;:::i;:::-;8543:67;8603:6;8595;8589:4;8543:67;:::i;:::-;8637:1;8661:4;8648:17;;8693:2;8685:6;8682:14;8710:1;8705:618;;;;9367:1;9384:6;9381:77;;;9433:9;9428:3;9424:19;9418:26;9409:35;;9381:77;9484:67;9544:6;9537:5;9484:67;:::i;:::-;9478:4;9471:81;9340:222;8675:887;;8705:618;8757:4;8753:9;8745:6;8741:22;8791:37;8823:4;8791:37;:::i;:::-;8850:1;8864:208;8878:7;8875:1;8872:14;8864:208;;;8957:9;8952:3;8948:19;8942:26;8934:6;8927:42;9008:1;9000:6;8996:14;8986:24;;9055:2;9044:9;9040:18;9027:31;;8901:4;8898:1;8894:12;8889:17;;8864:208;;;9100:6;9091:7;9088:19;9085:179;;;9158:9;9153:3;9149:19;9143:26;9201:48;9243:4;9235:6;9231:17;9220:9;9201:48;:::i;:::-;9193:6;9186:64;9108:156;9085:179;9310:1;9306;9298:6;9294:14;9290:22;9284:4;9277:36;8712:611;;;8675:887;;8265:1303;;;8173:1395;;:::o;9574:148::-;9676:11;9713:3;9698:18;;9574:148;;;;:::o;9752:874::-;9855:3;9892:5;9886:12;9921:36;9947:9;9921:36;:::i;:::-;9973:89;10055:6;10050:3;9973:89;:::i;:::-;9966:96;;10093:1;10082:9;10078:17;10109:1;10104:166;;;;10284:1;10279:341;;;;10071:549;;10104:166;10188:4;10184:9;10173;10169:25;10164:3;10157:38;10250:6;10243:14;10236:22;10228:6;10224:35;10219:3;10215:45;10208:52;;10104:166;;10279:341;10346:38;10378:5;10346:38;:::i;:::-;10406:1;10420:154;10434:6;10431:1;10428:13;10420:154;;;10508:7;10502:14;10498:1;10493:3;10489:11;10482:35;10558:1;10549:7;10545:15;10534:26;;10456:4;10453:1;10449:12;10444:17;;10420:154;;;10603:6;10598:3;10594:16;10587:23;;10286:334;;10071:549;;9859:767;;9752:874;;;;:::o;10632:269::-;10761:3;10783:92;10871:3;10862:6;10783:92;:::i;:::-;10776:99;;10892:3;10885:10;;10632:269;;;;:::o;10907:180::-;10955:77;10952:1;10945:88;11052:4;11049:1;11042:15;11076:4;11073:1;11066:15;11093:191;11133:3;11152:20;11170:1;11152:20;:::i;:::-;11147:25;;11186:20;11204:1;11186:20;:::i;:::-;11181:25;;11229:1;11226;11222:9;11215:16;;11250:3;11247:1;11244:10;11241:36;;;11257:18;;:::i;:::-;11241:36;11093:191;;;;:::o;11290:169::-;11374:11;11408:6;11403:3;11396:19;11448:4;11443:3;11439:14;11424:29;;11290:169;;;;:::o;11465:178::-;11605:30;11601:1;11593:6;11589:14;11582:54;11465:178;:::o;11649:366::-;11791:3;11812:67;11876:2;11871:3;11812:67;:::i;:::-;11805:74;;11888:93;11977:3;11888:93;:::i;:::-;12006:2;12001:3;11997:12;11990:19;;11649:366;;;:::o;12021:419::-;12187:4;12225:2;12214:9;12210:18;12202:26;;12274:9;12268:4;12264:20;12260:1;12249:9;12245:17;12238:47;12302:131;12428:4;12302:131;:::i;:::-;12294:139;;12021:419;;;:::o;12446:77::-;12483:7;12512:5;12501:16;;12446:77;;;:::o;12529:79::-;12568:7;12597:5;12586:16;;12529:79;;;:::o;12614:157::-;12719:45;12739:24;12757:5;12739:24;:::i;:::-;12719:45;:::i;:::-;12714:3;12707:58;12614:157;;:::o;12777:256::-;12889:3;12904:75;12975:3;12966:6;12904:75;:::i;:::-;13004:2;12999:3;12995:12;12988:19;;13024:3;13017:10;;12777:256;;;;:::o;13039:390::-;13145:3;13173:39;13206:5;13173:39;:::i;:::-;13228:89;13310:6;13305:3;13228:89;:::i;:::-;13221:96;;13326:65;13384:6;13379:3;13372:4;13365:5;13361:16;13326:65;:::i;:::-;13416:6;13411:3;13407:16;13400:23;;13149:280;13039:390;;;;:::o;13435:755::-;13711:3;13733:95;13824:3;13815:6;13733:95;:::i;:::-;13726:102;;13845:95;13936:3;13927:6;13845:95;:::i;:::-;13838:102;;13957:95;14048:3;14039:6;13957:95;:::i;:::-;13950:102;;14069:95;14160:3;14151:6;14069:95;:::i;:::-;14062:102;;14181:3;14174:10;;13435:755;;;;;;;:::o;14196:180::-;14244:77;14241:1;14234:88;14341:4;14338:1;14331:15;14365:4;14362:1;14355:15;14382:185;14422:1;14439:20;14457:1;14439:20;:::i;:::-;14434:25;;14473:20;14491:1;14473:20;:::i;:::-;14468:25;;14512:1;14502:35;;14517:18;;:::i;:::-;14502:35;14559:1;14556;14552:9;14547:14;;14382:185;;;;:::o;14573:194::-;14613:4;14633:20;14651:1;14633:20;:::i;:::-;14628:25;;14667:20;14685:1;14667:20;:::i;:::-;14662:25;;14711:1;14708;14704:9;14696:17;;14735:1;14729:4;14726:11;14723:37;;;14740:18;;:::i;:::-;14723:37;14573:194;;;;:::o;555:3408:21:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@blockHash_3818": {
									"entryPoint": 1509,
									"id": 3818,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@blockNumber_3816": {
									"entryPoint": 1074,
									"id": 3816,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@exchangeRate_3814": {
									"entryPoint": 716,
									"id": 3814,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getMiningTask_4072": {
									"entryPoint": 1360,
									"id": 4072,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRewards_4064": {
									"entryPoint": 561,
									"id": 4064,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@maxTokens_3806": {
									"entryPoint": 1504,
									"id": 3806,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mineTokens_4056": {
									"entryPoint": 734,
									"id": 4056,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@miningRewards_3825": {
									"entryPoint": 1515,
									"id": 3825,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@miningTask_3823": {
									"entryPoint": 1080,
									"id": 3823,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_3812": {
									"entryPoint": 570,
									"id": 3812,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_3810": {
									"entryPoint": 1220,
									"id": 3810,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_3808": {
									"entryPoint": 710,
									"id": 3808,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 2063,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 2128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 2173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2674,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bytes32__to_t_bool_t_bytes32__fromStack_reversed": {
									"entryPoint": 2313,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 2352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 1741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1766,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 2001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1596,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 2422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint8": {
									"entryPoint": 2799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2377,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2709,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1881,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1873,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1877,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1779,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1775,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9776:23",
										"nodeType": "YulBlock",
										"src": "0:9776:23",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:23",
													"nodeType": "YulBlock",
													"src": "52:32:23",
													"statements": [
														{
															"nativeSrc": "62:16:23",
															"nodeType": "YulAssignment",
															"src": "62:16:23",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:23",
																"nodeType": "YulIdentifier",
																"src": "73:5:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:23",
														"nodeType": "YulTypedName",
														"src": "34:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:23",
														"nodeType": "YulTypedName",
														"src": "44:7:23",
														"type": ""
													}
												],
												"src": "7:77:23"
											},
											{
												"body": {
													"nativeSrc": "155:53:23",
													"nodeType": "YulBlock",
													"src": "155:53:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:23",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:23"
																		},
																		"nativeSrc": "177:24:23",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:23"
																},
																"nativeSrc": "165:37:23",
																"nodeType": "YulFunctionCall",
																"src": "165:37:23"
															},
															"nativeSrc": "165:37:23",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:23"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:23",
														"nodeType": "YulTypedName",
														"src": "143:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:23",
														"nodeType": "YulTypedName",
														"src": "150:3:23",
														"type": ""
													}
												],
												"src": "90:118:23"
											},
											{
												"body": {
													"nativeSrc": "312:124:23",
													"nodeType": "YulBlock",
													"src": "312:124:23",
													"statements": [
														{
															"nativeSrc": "322:26:23",
															"nodeType": "YulAssignment",
															"src": "322:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:23",
																		"nodeType": "YulLiteral",
																		"src": "345:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:23"
																},
																"nativeSrc": "330:18:23",
																"nodeType": "YulFunctionCall",
																"src": "330:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:23",
																				"nodeType": "YulLiteral",
																				"src": "426:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:23"
																		},
																		"nativeSrc": "411:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:23"
																},
																"nativeSrc": "358:71:23",
																"nodeType": "YulFunctionCall",
																"src": "358:71:23"
															},
															"nativeSrc": "358:71:23",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:23",
														"nodeType": "YulTypedName",
														"src": "284:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:23",
														"nodeType": "YulTypedName",
														"src": "296:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:23",
														"nodeType": "YulTypedName",
														"src": "307:4:23",
														"type": ""
													}
												],
												"src": "214:222:23"
											},
											{
												"body": {
													"nativeSrc": "501:40:23",
													"nodeType": "YulBlock",
													"src": "501:40:23",
													"statements": [
														{
															"nativeSrc": "512:22:23",
															"nodeType": "YulAssignment",
															"src": "512:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "528:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:23"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "522:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:23"
																},
																"nativeSrc": "522:12:23",
																"nodeType": "YulFunctionCall",
																"src": "522:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "512:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:23"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "442:99:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "484:5:23",
														"nodeType": "YulTypedName",
														"src": "484:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "494:6:23",
														"nodeType": "YulTypedName",
														"src": "494:6:23",
														"type": ""
													}
												],
												"src": "442:99:23"
											},
											{
												"body": {
													"nativeSrc": "643:73:23",
													"nodeType": "YulBlock",
													"src": "643:73:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "660:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "665:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "653:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:23"
																},
																"nativeSrc": "653:19:23",
																"nodeType": "YulFunctionCall",
																"src": "653:19:23"
															},
															"nativeSrc": "653:19:23",
															"nodeType": "YulExpressionStatement",
															"src": "653:19:23"
														},
														{
															"nativeSrc": "681:29:23",
															"nodeType": "YulAssignment",
															"src": "681:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "700:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "700:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "705:4:23",
																		"nodeType": "YulLiteral",
																		"src": "705:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "696:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:23"
																},
																"nativeSrc": "696:14:23",
																"nodeType": "YulFunctionCall",
																"src": "696:14:23"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "681:11:23",
																	"nodeType": "YulIdentifier",
																	"src": "681:11:23"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "547:169:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "615:3:23",
														"nodeType": "YulTypedName",
														"src": "615:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "620:6:23",
														"nodeType": "YulTypedName",
														"src": "620:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "631:11:23",
														"nodeType": "YulTypedName",
														"src": "631:11:23",
														"type": ""
													}
												],
												"src": "547:169:23"
											},
											{
												"body": {
													"nativeSrc": "784:77:23",
													"nodeType": "YulBlock",
													"src": "784:77:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "801:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "801:3:23"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "806:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "806:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "811:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "811:6:23"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "795:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "795:5:23"
																},
																"nativeSrc": "795:23:23",
																"nodeType": "YulFunctionCall",
																"src": "795:23:23"
															},
															"nativeSrc": "795:23:23",
															"nodeType": "YulExpressionStatement",
															"src": "795:23:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "838:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "838:3:23"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "843:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "843:6:23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "834:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "834:3:23"
																		},
																		"nativeSrc": "834:16:23",
																		"nodeType": "YulFunctionCall",
																		"src": "834:16:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "852:1:23",
																		"nodeType": "YulLiteral",
																		"src": "852:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "827:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "827:6:23"
																},
																"nativeSrc": "827:27:23",
																"nodeType": "YulFunctionCall",
																"src": "827:27:23"
															},
															"nativeSrc": "827:27:23",
															"nodeType": "YulExpressionStatement",
															"src": "827:27:23"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "722:139:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "766:3:23",
														"nodeType": "YulTypedName",
														"src": "766:3:23",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "771:3:23",
														"nodeType": "YulTypedName",
														"src": "771:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "776:6:23",
														"nodeType": "YulTypedName",
														"src": "776:6:23",
														"type": ""
													}
												],
												"src": "722:139:23"
											},
											{
												"body": {
													"nativeSrc": "915:54:23",
													"nodeType": "YulBlock",
													"src": "915:54:23",
													"statements": [
														{
															"nativeSrc": "925:38:23",
															"nodeType": "YulAssignment",
															"src": "925:38:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "943:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "943:5:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "950:2:23",
																				"nodeType": "YulLiteral",
																				"src": "950:2:23",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "939:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:23"
																		},
																		"nativeSrc": "939:14:23",
																		"nodeType": "YulFunctionCall",
																		"src": "939:14:23"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "959:2:23",
																				"nodeType": "YulLiteral",
																				"src": "959:2:23",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "955:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:23"
																		},
																		"nativeSrc": "955:7:23",
																		"nodeType": "YulFunctionCall",
																		"src": "955:7:23"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "935:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:23"
																},
																"nativeSrc": "935:28:23",
																"nodeType": "YulFunctionCall",
																"src": "935:28:23"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "925:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "925:6:23"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "867:102:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "898:5:23",
														"nodeType": "YulTypedName",
														"src": "898:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "908:6:23",
														"nodeType": "YulTypedName",
														"src": "908:6:23",
														"type": ""
													}
												],
												"src": "867:102:23"
											},
											{
												"body": {
													"nativeSrc": "1067:285:23",
													"nodeType": "YulBlock",
													"src": "1067:285:23",
													"statements": [
														{
															"nativeSrc": "1077:53:23",
															"nodeType": "YulVariableDeclaration",
															"src": "1077:53:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1124:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "1124:5:23"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1091:32:23",
																	"nodeType": "YulIdentifier",
																	"src": "1091:32:23"
																},
																"nativeSrc": "1091:39:23",
																"nodeType": "YulFunctionCall",
																"src": "1091:39:23"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1081:6:23",
																	"nodeType": "YulTypedName",
																	"src": "1081:6:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1139:78:23",
															"nodeType": "YulAssignment",
															"src": "1139:78:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1205:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "1205:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1210:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1146:58:23",
																	"nodeType": "YulIdentifier",
																	"src": "1146:58:23"
																},
																"nativeSrc": "1146:71:23",
																"nodeType": "YulFunctionCall",
																"src": "1146:71:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1139:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1265:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "1265:5:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1272:4:23",
																				"nodeType": "YulLiteral",
																				"src": "1272:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1261:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "1261:3:23"
																		},
																		"nativeSrc": "1261:16:23",
																		"nodeType": "YulFunctionCall",
																		"src": "1261:16:23"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1279:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "1279:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1284:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "1284:6:23"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1226:34:23",
																	"nodeType": "YulIdentifier",
																	"src": "1226:34:23"
																},
																"nativeSrc": "1226:65:23",
																"nodeType": "YulFunctionCall",
																"src": "1226:65:23"
															},
															"nativeSrc": "1226:65:23",
															"nodeType": "YulExpressionStatement",
															"src": "1226:65:23"
														},
														{
															"nativeSrc": "1300:46:23",
															"nodeType": "YulAssignment",
															"src": "1300:46:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1311:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "1311:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1338:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "1338:6:23"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1316:21:23",
																			"nodeType": "YulIdentifier",
																			"src": "1316:21:23"
																		},
																		"nativeSrc": "1316:29:23",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:29:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1307:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "1307:3:23"
																},
																"nativeSrc": "1307:39:23",
																"nodeType": "YulFunctionCall",
																"src": "1307:39:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1300:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "1300:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "975:377:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1048:5:23",
														"nodeType": "YulTypedName",
														"src": "1048:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1055:3:23",
														"nodeType": "YulTypedName",
														"src": "1055:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1063:3:23",
														"nodeType": "YulTypedName",
														"src": "1063:3:23",
														"type": ""
													}
												],
												"src": "975:377:23"
											},
											{
												"body": {
													"nativeSrc": "1476:195:23",
													"nodeType": "YulBlock",
													"src": "1476:195:23",
													"statements": [
														{
															"nativeSrc": "1486:26:23",
															"nodeType": "YulAssignment",
															"src": "1486:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1509:2:23",
																		"nodeType": "YulLiteral",
																		"src": "1509:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1494:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "1494:3:23"
																},
																"nativeSrc": "1494:18:23",
																"nodeType": "YulFunctionCall",
																"src": "1494:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1486:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "1486:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1533:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "1533:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1544:1:23",
																				"nodeType": "YulLiteral",
																				"src": "1544:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1529:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:23"
																		},
																		"nativeSrc": "1529:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "1529:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1552:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "1552:4:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1558:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "1558:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1548:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:23"
																		},
																		"nativeSrc": "1548:20:23",
																		"nodeType": "YulFunctionCall",
																		"src": "1548:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1522:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1522:6:23"
																},
																"nativeSrc": "1522:47:23",
																"nodeType": "YulFunctionCall",
																"src": "1522:47:23"
															},
															"nativeSrc": "1522:47:23",
															"nodeType": "YulExpressionStatement",
															"src": "1522:47:23"
														},
														{
															"nativeSrc": "1578:86:23",
															"nodeType": "YulAssignment",
															"src": "1578:86:23",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1650:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "1650:6:23"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1659:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "1659:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1586:63:23",
																	"nodeType": "YulIdentifier",
																	"src": "1586:63:23"
																},
																"nativeSrc": "1586:78:23",
																"nodeType": "YulFunctionCall",
																"src": "1586:78:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1578:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "1578:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1358:313:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1448:9:23",
														"nodeType": "YulTypedName",
														"src": "1448:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1460:6:23",
														"nodeType": "YulTypedName",
														"src": "1460:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1471:4:23",
														"nodeType": "YulTypedName",
														"src": "1471:4:23",
														"type": ""
													}
												],
												"src": "1358:313:23"
											},
											{
												"body": {
													"nativeSrc": "1720:43:23",
													"nodeType": "YulBlock",
													"src": "1720:43:23",
													"statements": [
														{
															"nativeSrc": "1730:27:23",
															"nodeType": "YulAssignment",
															"src": "1730:27:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1745:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "1745:5:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1752:4:23",
																		"nodeType": "YulLiteral",
																		"src": "1752:4:23",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1741:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "1741:3:23"
																},
																"nativeSrc": "1741:16:23",
																"nodeType": "YulFunctionCall",
																"src": "1741:16:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1730:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "1730:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "1677:86:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1702:5:23",
														"nodeType": "YulTypedName",
														"src": "1702:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1712:7:23",
														"nodeType": "YulTypedName",
														"src": "1712:7:23",
														"type": ""
													}
												],
												"src": "1677:86:23"
											},
											{
												"body": {
													"nativeSrc": "1830:51:23",
													"nodeType": "YulBlock",
													"src": "1830:51:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1847:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "1847:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1868:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "1868:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "1852:15:23",
																			"nodeType": "YulIdentifier",
																			"src": "1852:15:23"
																		},
																		"nativeSrc": "1852:22:23",
																		"nodeType": "YulFunctionCall",
																		"src": "1852:22:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1840:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1840:6:23"
																},
																"nativeSrc": "1840:35:23",
																"nodeType": "YulFunctionCall",
																"src": "1840:35:23"
															},
															"nativeSrc": "1840:35:23",
															"nodeType": "YulExpressionStatement",
															"src": "1840:35:23"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "1769:112:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1818:5:23",
														"nodeType": "YulTypedName",
														"src": "1818:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1825:3:23",
														"nodeType": "YulTypedName",
														"src": "1825:3:23",
														"type": ""
													}
												],
												"src": "1769:112:23"
											},
											{
												"body": {
													"nativeSrc": "1981:120:23",
													"nodeType": "YulBlock",
													"src": "1981:120:23",
													"statements": [
														{
															"nativeSrc": "1991:26:23",
															"nodeType": "YulAssignment",
															"src": "1991:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2003:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "2003:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2014:2:23",
																		"nodeType": "YulLiteral",
																		"src": "2014:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1999:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "1999:3:23"
																},
																"nativeSrc": "1999:18:23",
																"nodeType": "YulFunctionCall",
																"src": "1999:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1991:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "1991:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2067:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "2067:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2080:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "2080:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2091:1:23",
																				"nodeType": "YulLiteral",
																				"src": "2091:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2076:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "2076:3:23"
																		},
																		"nativeSrc": "2076:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2076:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "2027:39:23",
																	"nodeType": "YulIdentifier",
																	"src": "2027:39:23"
																},
																"nativeSrc": "2027:67:23",
																"nodeType": "YulFunctionCall",
																"src": "2027:67:23"
															},
															"nativeSrc": "2027:67:23",
															"nodeType": "YulExpressionStatement",
															"src": "2027:67:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1887:214:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1953:9:23",
														"nodeType": "YulTypedName",
														"src": "1953:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1965:6:23",
														"nodeType": "YulTypedName",
														"src": "1965:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1976:4:23",
														"nodeType": "YulTypedName",
														"src": "1976:4:23",
														"type": ""
													}
												],
												"src": "1887:214:23"
											},
											{
												"body": {
													"nativeSrc": "2147:35:23",
													"nodeType": "YulBlock",
													"src": "2147:35:23",
													"statements": [
														{
															"nativeSrc": "2157:19:23",
															"nodeType": "YulAssignment",
															"src": "2157:19:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2173:2:23",
																		"nodeType": "YulLiteral",
																		"src": "2173:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2167:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "2167:5:23"
																},
																"nativeSrc": "2167:9:23",
																"nodeType": "YulFunctionCall",
																"src": "2167:9:23"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2157:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "2157:6:23"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "2107:75:23",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2140:6:23",
														"nodeType": "YulTypedName",
														"src": "2140:6:23",
														"type": ""
													}
												],
												"src": "2107:75:23"
											},
											{
												"body": {
													"nativeSrc": "2277:28:23",
													"nodeType": "YulBlock",
													"src": "2277:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2294:1:23",
																		"nodeType": "YulLiteral",
																		"src": "2294:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2297:1:23",
																		"nodeType": "YulLiteral",
																		"src": "2297:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2287:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:23"
																},
																"nativeSrc": "2287:12:23",
																"nodeType": "YulFunctionCall",
																"src": "2287:12:23"
															},
															"nativeSrc": "2287:12:23",
															"nodeType": "YulExpressionStatement",
															"src": "2287:12:23"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2188:117:23",
												"nodeType": "YulFunctionDefinition",
												"src": "2188:117:23"
											},
											{
												"body": {
													"nativeSrc": "2400:28:23",
													"nodeType": "YulBlock",
													"src": "2400:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2417:1:23",
																		"nodeType": "YulLiteral",
																		"src": "2417:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2420:1:23",
																		"nodeType": "YulLiteral",
																		"src": "2420:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2410:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "2410:6:23"
																},
																"nativeSrc": "2410:12:23",
																"nodeType": "YulFunctionCall",
																"src": "2410:12:23"
															},
															"nativeSrc": "2410:12:23",
															"nodeType": "YulExpressionStatement",
															"src": "2410:12:23"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2311:117:23",
												"nodeType": "YulFunctionDefinition",
												"src": "2311:117:23"
											},
											{
												"body": {
													"nativeSrc": "2479:81:23",
													"nodeType": "YulBlock",
													"src": "2479:81:23",
													"statements": [
														{
															"nativeSrc": "2489:65:23",
															"nodeType": "YulAssignment",
															"src": "2489:65:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2504:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "2504:5:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2511:42:23",
																		"nodeType": "YulLiteral",
																		"src": "2511:42:23",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2500:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "2500:3:23"
																},
																"nativeSrc": "2500:54:23",
																"nodeType": "YulFunctionCall",
																"src": "2500:54:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2489:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "2489:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2434:126:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2461:5:23",
														"nodeType": "YulTypedName",
														"src": "2461:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2471:7:23",
														"nodeType": "YulTypedName",
														"src": "2471:7:23",
														"type": ""
													}
												],
												"src": "2434:126:23"
											},
											{
												"body": {
													"nativeSrc": "2611:51:23",
													"nodeType": "YulBlock",
													"src": "2611:51:23",
													"statements": [
														{
															"nativeSrc": "2621:35:23",
															"nodeType": "YulAssignment",
															"src": "2621:35:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2650:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "2650:5:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2632:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "2632:17:23"
																},
																"nativeSrc": "2632:24:23",
																"nodeType": "YulFunctionCall",
																"src": "2632:24:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2621:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "2621:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2566:96:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2593:5:23",
														"nodeType": "YulTypedName",
														"src": "2593:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2603:7:23",
														"nodeType": "YulTypedName",
														"src": "2603:7:23",
														"type": ""
													}
												],
												"src": "2566:96:23"
											},
											{
												"body": {
													"nativeSrc": "2711:79:23",
													"nodeType": "YulBlock",
													"src": "2711:79:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "2768:16:23",
																"nodeType": "YulBlock",
																"src": "2768:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2777:1:23",
																					"nodeType": "YulLiteral",
																					"src": "2777:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2780:1:23",
																					"nodeType": "YulLiteral",
																					"src": "2780:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2770:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "2770:6:23"
																			},
																			"nativeSrc": "2770:12:23",
																			"nodeType": "YulFunctionCall",
																			"src": "2770:12:23"
																		},
																		"nativeSrc": "2770:12:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "2770:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2734:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "2734:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2759:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "2759:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2741:17:23",
																					"nodeType": "YulIdentifier",
																					"src": "2741:17:23"
																				},
																				"nativeSrc": "2741:24:23",
																				"nodeType": "YulFunctionCall",
																				"src": "2741:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2731:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "2731:2:23"
																		},
																		"nativeSrc": "2731:35:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2724:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "2724:6:23"
																},
																"nativeSrc": "2724:43:23",
																"nodeType": "YulFunctionCall",
																"src": "2724:43:23"
															},
															"nativeSrc": "2721:63:23",
															"nodeType": "YulIf",
															"src": "2721:63:23"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2668:122:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2704:5:23",
														"nodeType": "YulTypedName",
														"src": "2704:5:23",
														"type": ""
													}
												],
												"src": "2668:122:23"
											},
											{
												"body": {
													"nativeSrc": "2848:87:23",
													"nodeType": "YulBlock",
													"src": "2848:87:23",
													"statements": [
														{
															"nativeSrc": "2858:29:23",
															"nodeType": "YulAssignment",
															"src": "2858:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2880:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "2880:6:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2867:12:23",
																	"nodeType": "YulIdentifier",
																	"src": "2867:12:23"
																},
																"nativeSrc": "2867:20:23",
																"nodeType": "YulFunctionCall",
																"src": "2867:20:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2858:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "2858:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2923:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "2923:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2896:26:23",
																	"nodeType": "YulIdentifier",
																	"src": "2896:26:23"
																},
																"nativeSrc": "2896:33:23",
																"nodeType": "YulFunctionCall",
																"src": "2896:33:23"
															},
															"nativeSrc": "2896:33:23",
															"nodeType": "YulExpressionStatement",
															"src": "2896:33:23"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2796:139:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2826:6:23",
														"nodeType": "YulTypedName",
														"src": "2826:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2834:3:23",
														"nodeType": "YulTypedName",
														"src": "2834:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2842:5:23",
														"nodeType": "YulTypedName",
														"src": "2842:5:23",
														"type": ""
													}
												],
												"src": "2796:139:23"
											},
											{
												"body": {
													"nativeSrc": "3030:28:23",
													"nodeType": "YulBlock",
													"src": "3030:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3047:1:23",
																		"nodeType": "YulLiteral",
																		"src": "3047:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3050:1:23",
																		"nodeType": "YulLiteral",
																		"src": "3050:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3040:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "3040:6:23"
																},
																"nativeSrc": "3040:12:23",
																"nodeType": "YulFunctionCall",
																"src": "3040:12:23"
															},
															"nativeSrc": "3040:12:23",
															"nodeType": "YulExpressionStatement",
															"src": "3040:12:23"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "2941:117:23",
												"nodeType": "YulFunctionDefinition",
												"src": "2941:117:23"
											},
											{
												"body": {
													"nativeSrc": "3153:28:23",
													"nodeType": "YulBlock",
													"src": "3153:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3170:1:23",
																		"nodeType": "YulLiteral",
																		"src": "3170:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3173:1:23",
																		"nodeType": "YulLiteral",
																		"src": "3173:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3163:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "3163:6:23"
																},
																"nativeSrc": "3163:12:23",
																"nodeType": "YulFunctionCall",
																"src": "3163:12:23"
															},
															"nativeSrc": "3163:12:23",
															"nodeType": "YulExpressionStatement",
															"src": "3163:12:23"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "3064:117:23",
												"nodeType": "YulFunctionDefinition",
												"src": "3064:117:23"
											},
											{
												"body": {
													"nativeSrc": "3215:152:23",
													"nodeType": "YulBlock",
													"src": "3215:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3232:1:23",
																		"nodeType": "YulLiteral",
																		"src": "3232:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3235:77:23",
																		"nodeType": "YulLiteral",
																		"src": "3235:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3225:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "3225:6:23"
																},
																"nativeSrc": "3225:88:23",
																"nodeType": "YulFunctionCall",
																"src": "3225:88:23"
															},
															"nativeSrc": "3225:88:23",
															"nodeType": "YulExpressionStatement",
															"src": "3225:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3329:1:23",
																		"nodeType": "YulLiteral",
																		"src": "3329:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3332:4:23",
																		"nodeType": "YulLiteral",
																		"src": "3332:4:23",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3322:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "3322:6:23"
																},
																"nativeSrc": "3322:15:23",
																"nodeType": "YulFunctionCall",
																"src": "3322:15:23"
															},
															"nativeSrc": "3322:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "3322:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3353:1:23",
																		"nodeType": "YulLiteral",
																		"src": "3353:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3356:4:23",
																		"nodeType": "YulLiteral",
																		"src": "3356:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3346:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "3346:6:23"
																},
																"nativeSrc": "3346:15:23",
																"nodeType": "YulFunctionCall",
																"src": "3346:15:23"
															},
															"nativeSrc": "3346:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "3346:15:23"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3187:180:23",
												"nodeType": "YulFunctionDefinition",
												"src": "3187:180:23"
											},
											{
												"body": {
													"nativeSrc": "3416:238:23",
													"nodeType": "YulBlock",
													"src": "3416:238:23",
													"statements": [
														{
															"nativeSrc": "3426:58:23",
															"nodeType": "YulVariableDeclaration",
															"src": "3426:58:23",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3448:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "3448:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "3478:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "3478:4:23"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3456:21:23",
																			"nodeType": "YulIdentifier",
																			"src": "3456:21:23"
																		},
																		"nativeSrc": "3456:27:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3456:27:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3444:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "3444:3:23"
																},
																"nativeSrc": "3444:40:23",
																"nodeType": "YulFunctionCall",
																"src": "3444:40:23"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3430:10:23",
																	"nodeType": "YulTypedName",
																	"src": "3430:10:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3595:22:23",
																"nodeType": "YulBlock",
																"src": "3595:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3597:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "3597:16:23"
																			},
																			"nativeSrc": "3597:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "3597:18:23"
																		},
																		"nativeSrc": "3597:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "3597:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3538:10:23",
																				"nodeType": "YulIdentifier",
																				"src": "3538:10:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3550:18:23",
																				"nodeType": "YulLiteral",
																				"src": "3550:18:23",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3535:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "3535:2:23"
																		},
																		"nativeSrc": "3535:34:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3535:34:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3574:10:23",
																				"nodeType": "YulIdentifier",
																				"src": "3574:10:23"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3586:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "3586:6:23"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3571:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "3571:2:23"
																		},
																		"nativeSrc": "3571:22:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3571:22:23"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3532:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "3532:2:23"
																},
																"nativeSrc": "3532:62:23",
																"nodeType": "YulFunctionCall",
																"src": "3532:62:23"
															},
															"nativeSrc": "3529:88:23",
															"nodeType": "YulIf",
															"src": "3529:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3633:2:23",
																		"nodeType": "YulLiteral",
																		"src": "3633:2:23",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3637:10:23",
																		"nodeType": "YulIdentifier",
																		"src": "3637:10:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3626:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "3626:6:23"
																},
																"nativeSrc": "3626:22:23",
																"nodeType": "YulFunctionCall",
																"src": "3626:22:23"
															},
															"nativeSrc": "3626:22:23",
															"nodeType": "YulExpressionStatement",
															"src": "3626:22:23"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "3373:281:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3402:6:23",
														"nodeType": "YulTypedName",
														"src": "3402:6:23",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "3410:4:23",
														"nodeType": "YulTypedName",
														"src": "3410:4:23",
														"type": ""
													}
												],
												"src": "3373:281:23"
											},
											{
												"body": {
													"nativeSrc": "3701:88:23",
													"nodeType": "YulBlock",
													"src": "3701:88:23",
													"statements": [
														{
															"nativeSrc": "3711:30:23",
															"nodeType": "YulAssignment",
															"src": "3711:30:23",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "3721:18:23",
																	"nodeType": "YulIdentifier",
																	"src": "3721:18:23"
																},
																"nativeSrc": "3721:20:23",
																"nodeType": "YulFunctionCall",
																"src": "3721:20:23"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3711:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "3711:6:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3770:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "3770:6:23"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "3778:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "3778:4:23"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "3750:19:23",
																	"nodeType": "YulIdentifier",
																	"src": "3750:19:23"
																},
																"nativeSrc": "3750:33:23",
																"nodeType": "YulFunctionCall",
																"src": "3750:33:23"
															},
															"nativeSrc": "3750:33:23",
															"nodeType": "YulExpressionStatement",
															"src": "3750:33:23"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "3660:129:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "3685:4:23",
														"nodeType": "YulTypedName",
														"src": "3685:4:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "3694:6:23",
														"nodeType": "YulTypedName",
														"src": "3694:6:23",
														"type": ""
													}
												],
												"src": "3660:129:23"
											},
											{
												"body": {
													"nativeSrc": "3862:241:23",
													"nodeType": "YulBlock",
													"src": "3862:241:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "3967:22:23",
																"nodeType": "YulBlock",
																"src": "3967:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3969:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "3969:16:23"
																			},
																			"nativeSrc": "3969:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "3969:18:23"
																		},
																		"nativeSrc": "3969:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "3969:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3939:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "3939:6:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3947:18:23",
																		"nodeType": "YulLiteral",
																		"src": "3947:18:23",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3936:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "3936:2:23"
																},
																"nativeSrc": "3936:30:23",
																"nodeType": "YulFunctionCall",
																"src": "3936:30:23"
															},
															"nativeSrc": "3933:56:23",
															"nodeType": "YulIf",
															"src": "3933:56:23"
														},
														{
															"nativeSrc": "3999:37:23",
															"nodeType": "YulAssignment",
															"src": "3999:37:23",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4029:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "4029:6:23"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "4007:21:23",
																	"nodeType": "YulIdentifier",
																	"src": "4007:21:23"
																},
																"nativeSrc": "4007:29:23",
																"nodeType": "YulFunctionCall",
																"src": "4007:29:23"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3999:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "3999:4:23"
																}
															]
														},
														{
															"nativeSrc": "4073:23:23",
															"nodeType": "YulAssignment",
															"src": "4073:23:23",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "4085:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "4085:4:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4091:4:23",
																		"nodeType": "YulLiteral",
																		"src": "4091:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4081:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "4081:3:23"
																},
																"nativeSrc": "4081:15:23",
																"nodeType": "YulFunctionCall",
																"src": "4081:15:23"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4073:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "4073:4:23"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "3795:308:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "3846:6:23",
														"nodeType": "YulTypedName",
														"src": "3846:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "3857:4:23",
														"nodeType": "YulTypedName",
														"src": "3857:4:23",
														"type": ""
													}
												],
												"src": "3795:308:23"
											},
											{
												"body": {
													"nativeSrc": "4173:84:23",
													"nodeType": "YulBlock",
													"src": "4173:84:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4197:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "4197:3:23"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4202:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "4202:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4207:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "4207:6:23"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4184:12:23",
																	"nodeType": "YulIdentifier",
																	"src": "4184:12:23"
																},
																"nativeSrc": "4184:30:23",
																"nodeType": "YulFunctionCall",
																"src": "4184:30:23"
															},
															"nativeSrc": "4184:30:23",
															"nodeType": "YulExpressionStatement",
															"src": "4184:30:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4234:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "4234:3:23"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4239:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4230:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "4230:3:23"
																		},
																		"nativeSrc": "4230:16:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4230:16:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4248:1:23",
																		"nodeType": "YulLiteral",
																		"src": "4248:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4223:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "4223:6:23"
																},
																"nativeSrc": "4223:27:23",
																"nodeType": "YulFunctionCall",
																"src": "4223:27:23"
															},
															"nativeSrc": "4223:27:23",
															"nodeType": "YulExpressionStatement",
															"src": "4223:27:23"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "4109:148:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4155:3:23",
														"nodeType": "YulTypedName",
														"src": "4155:3:23",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4160:3:23",
														"nodeType": "YulTypedName",
														"src": "4160:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4165:6:23",
														"nodeType": "YulTypedName",
														"src": "4165:6:23",
														"type": ""
													}
												],
												"src": "4109:148:23"
											},
											{
												"body": {
													"nativeSrc": "4347:341:23",
													"nodeType": "YulBlock",
													"src": "4347:341:23",
													"statements": [
														{
															"nativeSrc": "4357:75:23",
															"nodeType": "YulAssignment",
															"src": "4357:75:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4424:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "4424:6:23"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "4382:41:23",
																			"nodeType": "YulIdentifier",
																			"src": "4382:41:23"
																		},
																		"nativeSrc": "4382:49:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4382:49:23"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4366:15:23",
																	"nodeType": "YulIdentifier",
																	"src": "4366:15:23"
																},
																"nativeSrc": "4366:66:23",
																"nodeType": "YulFunctionCall",
																"src": "4366:66:23"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4357:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "4357:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4448:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "4448:5:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4455:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "4455:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4441:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "4441:6:23"
																},
																"nativeSrc": "4441:21:23",
																"nodeType": "YulFunctionCall",
																"src": "4441:21:23"
															},
															"nativeSrc": "4441:21:23",
															"nodeType": "YulExpressionStatement",
															"src": "4441:21:23"
														},
														{
															"nativeSrc": "4471:27:23",
															"nodeType": "YulVariableDeclaration",
															"src": "4471:27:23",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4486:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "4486:5:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4493:4:23",
																		"nodeType": "YulLiteral",
																		"src": "4493:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4482:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "4482:3:23"
																},
																"nativeSrc": "4482:16:23",
																"nodeType": "YulFunctionCall",
																"src": "4482:16:23"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "4475:3:23",
																	"nodeType": "YulTypedName",
																	"src": "4475:3:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4536:83:23",
																"nodeType": "YulBlock",
																"src": "4536:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "4538:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "4538:77:23"
																			},
																			"nativeSrc": "4538:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "4538:79:23"
																		},
																		"nativeSrc": "4538:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "4538:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "4517:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "4517:3:23"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4522:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "4522:6:23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4513:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "4513:3:23"
																		},
																		"nativeSrc": "4513:16:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4513:16:23"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4531:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "4531:3:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4510:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "4510:2:23"
																},
																"nativeSrc": "4510:25:23",
																"nodeType": "YulFunctionCall",
																"src": "4510:25:23"
															},
															"nativeSrc": "4507:112:23",
															"nodeType": "YulIf",
															"src": "4507:112:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4665:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "4665:3:23"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "4670:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "4670:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4675:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "4675:6:23"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "4628:36:23",
																	"nodeType": "YulIdentifier",
																	"src": "4628:36:23"
																},
																"nativeSrc": "4628:54:23",
																"nodeType": "YulFunctionCall",
																"src": "4628:54:23"
															},
															"nativeSrc": "4628:54:23",
															"nodeType": "YulExpressionStatement",
															"src": "4628:54:23"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "4263:425:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4320:3:23",
														"nodeType": "YulTypedName",
														"src": "4320:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4325:6:23",
														"nodeType": "YulTypedName",
														"src": "4325:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4333:3:23",
														"nodeType": "YulTypedName",
														"src": "4333:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4341:5:23",
														"nodeType": "YulTypedName",
														"src": "4341:5:23",
														"type": ""
													}
												],
												"src": "4263:425:23"
											},
											{
												"body": {
													"nativeSrc": "4770:278:23",
													"nodeType": "YulBlock",
													"src": "4770:278:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "4819:83:23",
																"nodeType": "YulBlock",
																"src": "4819:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "4821:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "4821:77:23"
																			},
																			"nativeSrc": "4821:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "4821:79:23"
																		},
																		"nativeSrc": "4821:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "4821:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4798:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "4798:6:23"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4806:4:23",
																						"nodeType": "YulLiteral",
																						"src": "4806:4:23",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4794:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "4794:3:23"
																				},
																				"nativeSrc": "4794:17:23",
																				"nodeType": "YulFunctionCall",
																				"src": "4794:17:23"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "4813:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "4813:3:23"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4790:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "4790:3:23"
																		},
																		"nativeSrc": "4790:27:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4790:27:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4783:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "4783:6:23"
																},
																"nativeSrc": "4783:35:23",
																"nodeType": "YulFunctionCall",
																"src": "4783:35:23"
															},
															"nativeSrc": "4780:122:23",
															"nodeType": "YulIf",
															"src": "4780:122:23"
														},
														{
															"nativeSrc": "4911:34:23",
															"nodeType": "YulVariableDeclaration",
															"src": "4911:34:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4938:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "4938:6:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4925:12:23",
																	"nodeType": "YulIdentifier",
																	"src": "4925:12:23"
																},
																"nativeSrc": "4925:20:23",
																"nodeType": "YulFunctionCall",
																"src": "4925:20:23"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4915:6:23",
																	"nodeType": "YulTypedName",
																	"src": "4915:6:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4954:88:23",
															"nodeType": "YulAssignment",
															"src": "4954:88:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5015:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "5015:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5023:4:23",
																				"nodeType": "YulLiteral",
																				"src": "5023:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5011:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "5011:3:23"
																		},
																		"nativeSrc": "5011:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5011:17:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5030:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "5030:6:23"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5038:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "5038:3:23"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "4963:47:23",
																	"nodeType": "YulIdentifier",
																	"src": "4963:47:23"
																},
																"nativeSrc": "4963:79:23",
																"nodeType": "YulFunctionCall",
																"src": "4963:79:23"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4954:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "4954:5:23"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "4708:340:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4748:6:23",
														"nodeType": "YulTypedName",
														"src": "4748:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4756:3:23",
														"nodeType": "YulTypedName",
														"src": "4756:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4764:5:23",
														"nodeType": "YulTypedName",
														"src": "4764:5:23",
														"type": ""
													}
												],
												"src": "4708:340:23"
											},
											{
												"body": {
													"nativeSrc": "5147:561:23",
													"nodeType": "YulBlock",
													"src": "5147:561:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:23",
																"nodeType": "YulBlock",
																"src": "5193:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:23"
																			},
																			"nativeSrc": "5195:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:23"
																		},
																		"nativeSrc": "5195:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:23"
																		},
																		"nativeSrc": "5164:23:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:23",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:23"
																},
																"nativeSrc": "5160:32:23",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:23"
															},
															"nativeSrc": "5157:119:23",
															"nodeType": "YulIf",
															"src": "5157:119:23"
														},
														{
															"nativeSrc": "5286:117:23",
															"nodeType": "YulBlock",
															"src": "5286:117:23",
															"statements": [
																{
																	"nativeSrc": "5301:15:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:23",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:23",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:23",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:23"
																				},
																				"nativeSrc": "5361:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:23",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:23"
																		},
																		"nativeSrc": "5340:53:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:23"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5413:288:23",
															"nodeType": "YulBlock",
															"src": "5413:288:23",
															"statements": [
																{
																	"nativeSrc": "5428:46:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5428:46:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5459:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "5459:9:23"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5470:2:23",
																						"nodeType": "YulLiteral",
																						"src": "5470:2:23",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5455:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "5455:3:23"
																				},
																				"nativeSrc": "5455:18:23",
																				"nodeType": "YulFunctionCall",
																				"src": "5455:18:23"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5442:12:23",
																			"nodeType": "YulIdentifier",
																			"src": "5442:12:23"
																		},
																		"nativeSrc": "5442:32:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5442:32:23"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5432:6:23",
																			"nodeType": "YulTypedName",
																			"src": "5432:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5521:83:23",
																		"nodeType": "YulBlock",
																		"src": "5521:83:23",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5523:77:23",
																						"nodeType": "YulIdentifier",
																						"src": "5523:77:23"
																					},
																					"nativeSrc": "5523:79:23",
																					"nodeType": "YulFunctionCall",
																					"src": "5523:79:23"
																				},
																				"nativeSrc": "5523:79:23",
																				"nodeType": "YulExpressionStatement",
																				"src": "5523:79:23"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5493:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "5493:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5501:18:23",
																				"nodeType": "YulLiteral",
																				"src": "5501:18:23",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5490:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "5490:2:23"
																		},
																		"nativeSrc": "5490:30:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5490:30:23"
																	},
																	"nativeSrc": "5487:117:23",
																	"nodeType": "YulIf",
																	"src": "5487:117:23"
																},
																{
																	"nativeSrc": "5618:73:23",
																	"nodeType": "YulAssignment",
																	"src": "5618:73:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5663:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "5663:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5674:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "5674:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5659:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "5659:3:23"
																				},
																				"nativeSrc": "5659:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "5659:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5683:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "5683:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "5628:30:23",
																			"nodeType": "YulIdentifier",
																			"src": "5628:30:23"
																		},
																		"nativeSrc": "5628:63:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5628:63:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5618:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "5618:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nativeSrc": "5054:654:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5109:9:23",
														"nodeType": "YulTypedName",
														"src": "5109:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5120:7:23",
														"nodeType": "YulTypedName",
														"src": "5120:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5132:6:23",
														"nodeType": "YulTypedName",
														"src": "5132:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5140:6:23",
														"nodeType": "YulTypedName",
														"src": "5140:6:23",
														"type": ""
													}
												],
												"src": "5054:654:23"
											},
											{
												"body": {
													"nativeSrc": "5756:48:23",
													"nodeType": "YulBlock",
													"src": "5756:48:23",
													"statements": [
														{
															"nativeSrc": "5766:32:23",
															"nodeType": "YulAssignment",
															"src": "5766:32:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5791:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "5791:5:23"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5784:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "5784:6:23"
																		},
																		"nativeSrc": "5784:13:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5784:13:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5777:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "5777:6:23"
																},
																"nativeSrc": "5777:21:23",
																"nodeType": "YulFunctionCall",
																"src": "5777:21:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5766:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "5766:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5714:90:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5738:5:23",
														"nodeType": "YulTypedName",
														"src": "5738:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5748:7:23",
														"nodeType": "YulTypedName",
														"src": "5748:7:23",
														"type": ""
													}
												],
												"src": "5714:90:23"
											},
											{
												"body": {
													"nativeSrc": "5869:50:23",
													"nodeType": "YulBlock",
													"src": "5869:50:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5886:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "5886:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5906:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "5906:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "5891:14:23",
																			"nodeType": "YulIdentifier",
																			"src": "5891:14:23"
																		},
																		"nativeSrc": "5891:21:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5891:21:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5879:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "5879:6:23"
																},
																"nativeSrc": "5879:34:23",
																"nodeType": "YulFunctionCall",
																"src": "5879:34:23"
															},
															"nativeSrc": "5879:34:23",
															"nodeType": "YulExpressionStatement",
															"src": "5879:34:23"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "5810:109:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5857:5:23",
														"nodeType": "YulTypedName",
														"src": "5857:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5864:3:23",
														"nodeType": "YulTypedName",
														"src": "5864:3:23",
														"type": ""
													}
												],
												"src": "5810:109:23"
											},
											{
												"body": {
													"nativeSrc": "5970:32:23",
													"nodeType": "YulBlock",
													"src": "5970:32:23",
													"statements": [
														{
															"nativeSrc": "5980:16:23",
															"nodeType": "YulAssignment",
															"src": "5980:16:23",
															"value": {
																"name": "value",
																"nativeSrc": "5991:5:23",
																"nodeType": "YulIdentifier",
																"src": "5991:5:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5980:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "5980:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5925:77:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5952:5:23",
														"nodeType": "YulTypedName",
														"src": "5952:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5962:7:23",
														"nodeType": "YulTypedName",
														"src": "5962:7:23",
														"type": ""
													}
												],
												"src": "5925:77:23"
											},
											{
												"body": {
													"nativeSrc": "6073:53:23",
													"nodeType": "YulBlock",
													"src": "6073:53:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6090:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "6090:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6113:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "6113:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "6095:17:23",
																			"nodeType": "YulIdentifier",
																			"src": "6095:17:23"
																		},
																		"nativeSrc": "6095:24:23",
																		"nodeType": "YulFunctionCall",
																		"src": "6095:24:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6083:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "6083:6:23"
																},
																"nativeSrc": "6083:37:23",
																"nodeType": "YulFunctionCall",
																"src": "6083:37:23"
															},
															"nativeSrc": "6083:37:23",
															"nodeType": "YulExpressionStatement",
															"src": "6083:37:23"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "6008:118:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6061:5:23",
														"nodeType": "YulTypedName",
														"src": "6061:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6068:3:23",
														"nodeType": "YulTypedName",
														"src": "6068:3:23",
														"type": ""
													}
												],
												"src": "6008:118:23"
											},
											{
												"body": {
													"nativeSrc": "6252:200:23",
													"nodeType": "YulBlock",
													"src": "6252:200:23",
													"statements": [
														{
															"nativeSrc": "6262:26:23",
															"nodeType": "YulAssignment",
															"src": "6262:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6274:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "6274:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6285:2:23",
																		"nodeType": "YulLiteral",
																		"src": "6285:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6270:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "6270:3:23"
																},
																"nativeSrc": "6270:18:23",
																"nodeType": "YulFunctionCall",
																"src": "6270:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6262:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "6262:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6336:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "6336:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6349:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "6349:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6360:1:23",
																				"nodeType": "YulLiteral",
																				"src": "6360:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6345:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "6345:3:23"
																		},
																		"nativeSrc": "6345:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "6345:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "6298:37:23",
																	"nodeType": "YulIdentifier",
																	"src": "6298:37:23"
																},
																"nativeSrc": "6298:65:23",
																"nodeType": "YulFunctionCall",
																"src": "6298:65:23"
															},
															"nativeSrc": "6298:65:23",
															"nodeType": "YulExpressionStatement",
															"src": "6298:65:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6417:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "6417:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6430:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "6430:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6441:2:23",
																				"nodeType": "YulLiteral",
																				"src": "6441:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6426:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "6426:3:23"
																		},
																		"nativeSrc": "6426:18:23",
																		"nodeType": "YulFunctionCall",
																		"src": "6426:18:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6373:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "6373:43:23"
																},
																"nativeSrc": "6373:72:23",
																"nodeType": "YulFunctionCall",
																"src": "6373:72:23"
															},
															"nativeSrc": "6373:72:23",
															"nodeType": "YulExpressionStatement",
															"src": "6373:72:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bytes32__to_t_bool_t_bytes32__fromStack_reversed",
												"nativeSrc": "6132:320:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6216:9:23",
														"nodeType": "YulTypedName",
														"src": "6216:9:23",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6228:6:23",
														"nodeType": "YulTypedName",
														"src": "6228:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6236:6:23",
														"nodeType": "YulTypedName",
														"src": "6236:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6247:4:23",
														"nodeType": "YulTypedName",
														"src": "6247:4:23",
														"type": ""
													}
												],
												"src": "6132:320:23"
											},
											{
												"body": {
													"nativeSrc": "6556:124:23",
													"nodeType": "YulBlock",
													"src": "6556:124:23",
													"statements": [
														{
															"nativeSrc": "6566:26:23",
															"nodeType": "YulAssignment",
															"src": "6566:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6578:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "6578:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6589:2:23",
																		"nodeType": "YulLiteral",
																		"src": "6589:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6574:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "6574:3:23"
																},
																"nativeSrc": "6574:18:23",
																"nodeType": "YulFunctionCall",
																"src": "6574:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6566:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "6566:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6646:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "6646:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6659:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "6659:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6670:1:23",
																				"nodeType": "YulLiteral",
																				"src": "6670:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6655:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "6655:3:23"
																		},
																		"nativeSrc": "6655:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "6655:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6602:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "6602:43:23"
																},
																"nativeSrc": "6602:71:23",
																"nodeType": "YulFunctionCall",
																"src": "6602:71:23"
															},
															"nativeSrc": "6602:71:23",
															"nodeType": "YulExpressionStatement",
															"src": "6602:71:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "6458:222:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6528:9:23",
														"nodeType": "YulTypedName",
														"src": "6528:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6540:6:23",
														"nodeType": "YulTypedName",
														"src": "6540:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6551:4:23",
														"nodeType": "YulTypedName",
														"src": "6551:4:23",
														"type": ""
													}
												],
												"src": "6458:222:23"
											},
											{
												"body": {
													"nativeSrc": "6714:152:23",
													"nodeType": "YulBlock",
													"src": "6714:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6731:1:23",
																		"nodeType": "YulLiteral",
																		"src": "6731:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6734:77:23",
																		"nodeType": "YulLiteral",
																		"src": "6734:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6724:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "6724:6:23"
																},
																"nativeSrc": "6724:88:23",
																"nodeType": "YulFunctionCall",
																"src": "6724:88:23"
															},
															"nativeSrc": "6724:88:23",
															"nodeType": "YulExpressionStatement",
															"src": "6724:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6828:1:23",
																		"nodeType": "YulLiteral",
																		"src": "6828:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6831:4:23",
																		"nodeType": "YulLiteral",
																		"src": "6831:4:23",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6821:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "6821:6:23"
																},
																"nativeSrc": "6821:15:23",
																"nodeType": "YulFunctionCall",
																"src": "6821:15:23"
															},
															"nativeSrc": "6821:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "6821:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6852:1:23",
																		"nodeType": "YulLiteral",
																		"src": "6852:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6855:4:23",
																		"nodeType": "YulLiteral",
																		"src": "6855:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6845:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "6845:6:23"
																},
																"nativeSrc": "6845:15:23",
																"nodeType": "YulFunctionCall",
																"src": "6845:15:23"
															},
															"nativeSrc": "6845:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "6845:15:23"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6686:180:23",
												"nodeType": "YulFunctionDefinition",
												"src": "6686:180:23"
											},
											{
												"body": {
													"nativeSrc": "6923:269:23",
													"nodeType": "YulBlock",
													"src": "6923:269:23",
													"statements": [
														{
															"nativeSrc": "6933:22:23",
															"nodeType": "YulAssignment",
															"src": "6933:22:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6947:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "6947:4:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6953:1:23",
																		"nodeType": "YulLiteral",
																		"src": "6953:1:23",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6943:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "6943:3:23"
																},
																"nativeSrc": "6943:12:23",
																"nodeType": "YulFunctionCall",
																"src": "6943:12:23"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6933:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "6933:6:23"
																}
															]
														},
														{
															"nativeSrc": "6964:38:23",
															"nodeType": "YulVariableDeclaration",
															"src": "6964:38:23",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6994:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "6994:4:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7000:1:23",
																		"nodeType": "YulLiteral",
																		"src": "7000:1:23",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6990:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "6990:3:23"
																},
																"nativeSrc": "6990:12:23",
																"nodeType": "YulFunctionCall",
																"src": "6990:12:23"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6968:18:23",
																	"nodeType": "YulTypedName",
																	"src": "6968:18:23",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7041:51:23",
																"nodeType": "YulBlock",
																"src": "7041:51:23",
																"statements": [
																	{
																		"nativeSrc": "7055:27:23",
																		"nodeType": "YulAssignment",
																		"src": "7055:27:23",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7069:6:23",
																					"nodeType": "YulIdentifier",
																					"src": "7069:6:23"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7077:4:23",
																					"nodeType": "YulLiteral",
																					"src": "7077:4:23",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7065:3:23",
																				"nodeType": "YulIdentifier",
																				"src": "7065:3:23"
																			},
																			"nativeSrc": "7065:17:23",
																			"nodeType": "YulFunctionCall",
																			"src": "7065:17:23"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7055:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "7055:6:23"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7021:18:23",
																		"nodeType": "YulIdentifier",
																		"src": "7021:18:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7014:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "7014:6:23"
																},
																"nativeSrc": "7014:26:23",
																"nodeType": "YulFunctionCall",
																"src": "7014:26:23"
															},
															"nativeSrc": "7011:81:23",
															"nodeType": "YulIf",
															"src": "7011:81:23"
														},
														{
															"body": {
																"nativeSrc": "7144:42:23",
																"nodeType": "YulBlock",
																"src": "7144:42:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7158:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "7158:16:23"
																			},
																			"nativeSrc": "7158:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "7158:18:23"
																		},
																		"nativeSrc": "7158:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "7158:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7108:18:23",
																		"nodeType": "YulIdentifier",
																		"src": "7108:18:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7131:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "7131:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7139:2:23",
																				"nodeType": "YulLiteral",
																				"src": "7139:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7128:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "7128:2:23"
																		},
																		"nativeSrc": "7128:14:23",
																		"nodeType": "YulFunctionCall",
																		"src": "7128:14:23"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7105:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "7105:2:23"
																},
																"nativeSrc": "7105:38:23",
																"nodeType": "YulFunctionCall",
																"src": "7105:38:23"
															},
															"nativeSrc": "7102:84:23",
															"nodeType": "YulIf",
															"src": "7102:84:23"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6872:320:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6907:4:23",
														"nodeType": "YulTypedName",
														"src": "6907:4:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6916:6:23",
														"nodeType": "YulTypedName",
														"src": "6916:6:23",
														"type": ""
													}
												],
												"src": "6872:320:23"
											},
											{
												"body": {
													"nativeSrc": "7312:34:23",
													"nodeType": "YulBlock",
													"src": "7312:34:23",
													"statements": [
														{
															"nativeSrc": "7322:18:23",
															"nodeType": "YulAssignment",
															"src": "7322:18:23",
															"value": {
																"name": "pos",
																"nativeSrc": "7337:3:23",
																"nodeType": "YulIdentifier",
																"src": "7337:3:23"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7322:11:23",
																	"nodeType": "YulIdentifier",
																	"src": "7322:11:23"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7198:148:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7284:3:23",
														"nodeType": "YulTypedName",
														"src": "7284:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7289:6:23",
														"nodeType": "YulTypedName",
														"src": "7289:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7300:11:23",
														"nodeType": "YulTypedName",
														"src": "7300:11:23",
														"type": ""
													}
												],
												"src": "7198:148:23"
											},
											{
												"body": {
													"nativeSrc": "7406:87:23",
													"nodeType": "YulBlock",
													"src": "7406:87:23",
													"statements": [
														{
															"nativeSrc": "7416:11:23",
															"nodeType": "YulAssignment",
															"src": "7416:11:23",
															"value": {
																"name": "ptr",
																"nativeSrc": "7424:3:23",
																"nodeType": "YulIdentifier",
																"src": "7424:3:23"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7416:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "7416:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7444:1:23",
																		"nodeType": "YulLiteral",
																		"src": "7444:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "7447:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "7447:3:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7437:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "7437:6:23"
																},
																"nativeSrc": "7437:14:23",
																"nodeType": "YulFunctionCall",
																"src": "7437:14:23"
															},
															"nativeSrc": "7437:14:23",
															"nodeType": "YulExpressionStatement",
															"src": "7437:14:23"
														},
														{
															"nativeSrc": "7460:26:23",
															"nodeType": "YulAssignment",
															"src": "7460:26:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7478:1:23",
																		"nodeType": "YulLiteral",
																		"src": "7478:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7481:4:23",
																		"nodeType": "YulLiteral",
																		"src": "7481:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "7468:9:23",
																	"nodeType": "YulIdentifier",
																	"src": "7468:9:23"
																},
																"nativeSrc": "7468:18:23",
																"nodeType": "YulFunctionCall",
																"src": "7468:18:23"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7460:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "7460:4:23"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "7352:141:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7393:3:23",
														"nodeType": "YulTypedName",
														"src": "7393:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "7401:4:23",
														"nodeType": "YulTypedName",
														"src": "7401:4:23",
														"type": ""
													}
												],
												"src": "7352:141:23"
											},
											{
												"body": {
													"nativeSrc": "7630:767:23",
													"nodeType": "YulBlock",
													"src": "7630:767:23",
													"statements": [
														{
															"nativeSrc": "7640:29:23",
															"nodeType": "YulVariableDeclaration",
															"src": "7640:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7663:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "7663:5:23"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "7657:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "7657:5:23"
																},
																"nativeSrc": "7657:12:23",
																"nodeType": "YulFunctionCall",
																"src": "7657:12:23"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nativeSrc": "7644:9:23",
																	"nodeType": "YulTypedName",
																	"src": "7644:9:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7678:50:23",
															"nodeType": "YulVariableDeclaration",
															"src": "7678:50:23",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "7718:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "7718:9:23"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7692:25:23",
																	"nodeType": "YulIdentifier",
																	"src": "7692:25:23"
																},
																"nativeSrc": "7692:36:23",
																"nodeType": "YulFunctionCall",
																"src": "7692:36:23"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7682:6:23",
																	"nodeType": "YulTypedName",
																	"src": "7682:6:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7737:96:23",
															"nodeType": "YulAssignment",
															"src": "7737:96:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7821:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "7821:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7826:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "7826:6:23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7744:76:23",
																	"nodeType": "YulIdentifier",
																	"src": "7744:76:23"
																},
																"nativeSrc": "7744:89:23",
																"nodeType": "YulFunctionCall",
																"src": "7744:89:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7737:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "7737:3:23"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7882:159:23",
																		"nodeType": "YulBlock",
																		"src": "7882:159:23",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "7935:3:23",
																							"nodeType": "YulIdentifier",
																							"src": "7935:3:23"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nativeSrc": "7944:9:23",
																									"nodeType": "YulIdentifier",
																									"src": "7944:9:23"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "7959:4:23",
																											"nodeType": "YulLiteral",
																											"src": "7959:4:23",
																											"type": "",
																											"value": "0xff"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "7955:3:23",
																										"nodeType": "YulIdentifier",
																										"src": "7955:3:23"
																									},
																									"nativeSrc": "7955:9:23",
																									"nodeType": "YulFunctionCall",
																									"src": "7955:9:23"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "7940:3:23",
																								"nodeType": "YulIdentifier",
																								"src": "7940:3:23"
																							},
																							"nativeSrc": "7940:25:23",
																							"nodeType": "YulFunctionCall",
																							"src": "7940:25:23"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "7928:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "7928:6:23"
																					},
																					"nativeSrc": "7928:38:23",
																					"nodeType": "YulFunctionCall",
																					"src": "7928:38:23"
																				},
																				"nativeSrc": "7928:38:23",
																				"nodeType": "YulExpressionStatement",
																				"src": "7928:38:23"
																			},
																			{
																				"nativeSrc": "7979:52:23",
																				"nodeType": "YulAssignment",
																				"src": "7979:52:23",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "7990:3:23",
																							"nodeType": "YulIdentifier",
																							"src": "7990:3:23"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length",
																									"nativeSrc": "7999:6:23",
																									"nodeType": "YulIdentifier",
																									"src": "7999:6:23"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nativeSrc": "8021:6:23",
																													"nodeType": "YulIdentifier",
																													"src": "8021:6:23"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nativeSrc": "8014:6:23",
																												"nodeType": "YulIdentifier",
																												"src": "8014:6:23"
																											},
																											"nativeSrc": "8014:14:23",
																											"nodeType": "YulFunctionCall",
																											"src": "8014:14:23"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "8007:6:23",
																										"nodeType": "YulIdentifier",
																										"src": "8007:6:23"
																									},
																									"nativeSrc": "8007:22:23",
																									"nodeType": "YulFunctionCall",
																									"src": "8007:22:23"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "7995:3:23",
																								"nodeType": "YulIdentifier",
																								"src": "7995:3:23"
																							},
																							"nativeSrc": "7995:35:23",
																							"nodeType": "YulFunctionCall",
																							"src": "7995:35:23"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7986:3:23",
																						"nodeType": "YulIdentifier",
																						"src": "7986:3:23"
																					},
																					"nativeSrc": "7986:45:23",
																					"nodeType": "YulFunctionCall",
																					"src": "7986:45:23"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "7979:3:23",
																						"nodeType": "YulIdentifier",
																						"src": "7979:3:23"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "7875:166:23",
																	"nodeType": "YulCase",
																	"src": "7875:166:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7880:1:23",
																		"nodeType": "YulLiteral",
																		"src": "7880:1:23",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8057:334:23",
																		"nodeType": "YulBlock",
																		"src": "8057:334:23",
																		"statements": [
																			{
																				"nativeSrc": "8102:53:23",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8102:53:23",
																				"value": {
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "8149:5:23",
																							"nodeType": "YulIdentifier",
																							"src": "8149:5:23"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8117:31:23",
																						"nodeType": "YulIdentifier",
																						"src": "8117:31:23"
																					},
																					"nativeSrc": "8117:38:23",
																					"nodeType": "YulFunctionCall",
																					"src": "8117:38:23"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nativeSrc": "8106:7:23",
																						"nodeType": "YulTypedName",
																						"src": "8106:7:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8168:10:23",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8168:10:23",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8177:1:23",
																					"nodeType": "YulLiteral",
																					"src": "8177:1:23",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8172:1:23",
																						"nodeType": "YulTypedName",
																						"src": "8172:1:23",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8235:110:23",
																					"nodeType": "YulBlock",
																					"src": "8235:110:23",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nativeSrc": "8264:3:23",
																												"nodeType": "YulIdentifier",
																												"src": "8264:3:23"
																											},
																											{
																												"name": "i",
																												"nativeSrc": "8269:1:23",
																												"nodeType": "YulIdentifier",
																												"src": "8269:1:23"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8260:3:23",
																											"nodeType": "YulIdentifier",
																											"src": "8260:3:23"
																										},
																										"nativeSrc": "8260:11:23",
																										"nodeType": "YulFunctionCall",
																										"src": "8260:11:23"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nativeSrc": "8279:7:23",
																												"nodeType": "YulIdentifier",
																												"src": "8279:7:23"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "8273:5:23",
																											"nodeType": "YulIdentifier",
																											"src": "8273:5:23"
																										},
																										"nativeSrc": "8273:14:23",
																										"nodeType": "YulFunctionCall",
																										"src": "8273:14:23"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "8253:6:23",
																									"nodeType": "YulIdentifier",
																									"src": "8253:6:23"
																								},
																								"nativeSrc": "8253:35:23",
																								"nodeType": "YulFunctionCall",
																								"src": "8253:35:23"
																							},
																							"nativeSrc": "8253:35:23",
																							"nodeType": "YulExpressionStatement",
																							"src": "8253:35:23"
																						},
																						{
																							"nativeSrc": "8305:26:23",
																							"nodeType": "YulAssignment",
																							"src": "8305:26:23",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nativeSrc": "8320:7:23",
																										"nodeType": "YulIdentifier",
																										"src": "8320:7:23"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8329:1:23",
																										"nodeType": "YulLiteral",
																										"src": "8329:1:23",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8316:3:23",
																									"nodeType": "YulIdentifier",
																									"src": "8316:3:23"
																								},
																								"nativeSrc": "8316:15:23",
																								"nodeType": "YulFunctionCall",
																								"src": "8316:15:23"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nativeSrc": "8305:7:23",
																									"nodeType": "YulIdentifier",
																									"src": "8305:7:23"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8202:1:23",
																							"nodeType": "YulIdentifier",
																							"src": "8202:1:23"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "8205:6:23",
																							"nodeType": "YulIdentifier",
																							"src": "8205:6:23"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8199:2:23",
																						"nodeType": "YulIdentifier",
																						"src": "8199:2:23"
																					},
																					"nativeSrc": "8199:13:23",
																					"nodeType": "YulFunctionCall",
																					"src": "8199:13:23"
																				},
																				"nativeSrc": "8191:154:23",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8213:21:23",
																					"nodeType": "YulBlock",
																					"src": "8213:21:23",
																					"statements": [
																						{
																							"nativeSrc": "8215:17:23",
																							"nodeType": "YulAssignment",
																							"src": "8215:17:23",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8224:1:23",
																										"nodeType": "YulIdentifier",
																										"src": "8224:1:23"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8227:4:23",
																										"nodeType": "YulLiteral",
																										"src": "8227:4:23",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8220:3:23",
																									"nodeType": "YulIdentifier",
																									"src": "8220:3:23"
																								},
																								"nativeSrc": "8220:12:23",
																								"nodeType": "YulFunctionCall",
																								"src": "8220:12:23"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8215:1:23",
																									"nodeType": "YulIdentifier",
																									"src": "8215:1:23"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8195:3:23",
																					"nodeType": "YulBlock",
																					"src": "8195:3:23",
																					"statements": []
																				},
																				"src": "8191:154:23"
																			},
																			{
																				"nativeSrc": "8358:23:23",
																				"nodeType": "YulAssignment",
																				"src": "8358:23:23",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "8369:3:23",
																							"nodeType": "YulIdentifier",
																							"src": "8369:3:23"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "8374:6:23",
																							"nodeType": "YulIdentifier",
																							"src": "8374:6:23"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8365:3:23",
																						"nodeType": "YulIdentifier",
																						"src": "8365:3:23"
																					},
																					"nativeSrc": "8365:16:23",
																					"nodeType": "YulFunctionCall",
																					"src": "8365:16:23"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "8358:3:23",
																						"nodeType": "YulIdentifier",
																						"src": "8358:3:23"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "8050:341:23",
																	"nodeType": "YulCase",
																	"src": "8050:341:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8055:1:23",
																		"nodeType": "YulLiteral",
																		"src": "8055:1:23",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "7853:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "7853:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7864:1:23",
																		"nodeType": "YulLiteral",
																		"src": "7864:1:23",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7849:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "7849:3:23"
																},
																"nativeSrc": "7849:17:23",
																"nodeType": "YulFunctionCall",
																"src": "7849:17:23"
															},
															"nativeSrc": "7842:549:23",
															"nodeType": "YulSwitch",
															"src": "7842:549:23"
														}
													]
												},
												"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7523:874:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7611:5:23",
														"nodeType": "YulTypedName",
														"src": "7611:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7618:3:23",
														"nodeType": "YulTypedName",
														"src": "7618:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7626:3:23",
														"nodeType": "YulTypedName",
														"src": "7626:3:23",
														"type": ""
													}
												],
												"src": "7523:874:23"
											},
											{
												"body": {
													"nativeSrc": "8513:280:23",
													"nodeType": "YulBlock",
													"src": "8513:280:23",
													"statements": [
														{
															"nativeSrc": "8523:53:23",
															"nodeType": "YulVariableDeclaration",
															"src": "8523:53:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8570:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "8570:5:23"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8537:32:23",
																	"nodeType": "YulIdentifier",
																	"src": "8537:32:23"
																},
																"nativeSrc": "8537:39:23",
																"nodeType": "YulFunctionCall",
																"src": "8537:39:23"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8527:6:23",
																	"nodeType": "YulTypedName",
																	"src": "8527:6:23",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8585:96:23",
															"nodeType": "YulAssignment",
															"src": "8585:96:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8669:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "8669:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8674:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "8674:6:23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8592:76:23",
																	"nodeType": "YulIdentifier",
																	"src": "8592:76:23"
																},
																"nativeSrc": "8592:89:23",
																"nodeType": "YulFunctionCall",
																"src": "8592:89:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8585:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "8585:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8729:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "8729:5:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8736:4:23",
																				"nodeType": "YulLiteral",
																				"src": "8736:4:23",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8725:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "8725:3:23"
																		},
																		"nativeSrc": "8725:16:23",
																		"nodeType": "YulFunctionCall",
																		"src": "8725:16:23"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8743:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "8743:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8748:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "8748:6:23"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8690:34:23",
																	"nodeType": "YulIdentifier",
																	"src": "8690:34:23"
																},
																"nativeSrc": "8690:65:23",
																"nodeType": "YulFunctionCall",
																"src": "8690:65:23"
															},
															"nativeSrc": "8690:65:23",
															"nodeType": "YulExpressionStatement",
															"src": "8690:65:23"
														},
														{
															"nativeSrc": "8764:23:23",
															"nodeType": "YulAssignment",
															"src": "8764:23:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8775:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "8775:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8780:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "8780:6:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8771:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "8771:3:23"
																},
																"nativeSrc": "8771:16:23",
																"nodeType": "YulFunctionCall",
																"src": "8771:16:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8764:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "8764:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "8403:390:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8494:5:23",
														"nodeType": "YulTypedName",
														"src": "8494:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8501:3:23",
														"nodeType": "YulTypedName",
														"src": "8501:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8509:3:23",
														"nodeType": "YulTypedName",
														"src": "8509:3:23",
														"type": ""
													}
												],
												"src": "8403:390:23"
											},
											{
												"body": {
													"nativeSrc": "8980:248:23",
													"nodeType": "YulBlock",
													"src": "8980:248:23",
													"statements": [
														{
															"nativeSrc": "8991:99:23",
															"nodeType": "YulAssignment",
															"src": "8991:99:23",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9077:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "9077:6:23"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9086:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "9086:3:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8998:78:23",
																	"nodeType": "YulIdentifier",
																	"src": "8998:78:23"
																},
																"nativeSrc": "8998:92:23",
																"nodeType": "YulFunctionCall",
																"src": "8998:92:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8991:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "8991:3:23"
																}
															]
														},
														{
															"nativeSrc": "9100:102:23",
															"nodeType": "YulAssignment",
															"src": "9100:102:23",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9189:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "9189:6:23"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9198:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "9198:3:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "9107:81:23",
																	"nodeType": "YulIdentifier",
																	"src": "9107:81:23"
																},
																"nativeSrc": "9107:95:23",
																"nodeType": "YulFunctionCall",
																"src": "9107:95:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9100:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "9100:3:23"
																}
															]
														},
														{
															"nativeSrc": "9212:10:23",
															"nodeType": "YulAssignment",
															"src": "9212:10:23",
															"value": {
																"name": "pos",
																"nativeSrc": "9219:3:23",
																"nodeType": "YulIdentifier",
																"src": "9219:3:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9212:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "9212:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8799:429:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8951:3:23",
														"nodeType": "YulTypedName",
														"src": "8951:3:23",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8957:6:23",
														"nodeType": "YulTypedName",
														"src": "8957:6:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8965:6:23",
														"nodeType": "YulTypedName",
														"src": "8965:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8976:3:23",
														"nodeType": "YulTypedName",
														"src": "8976:3:23",
														"type": ""
													}
												],
												"src": "8799:429:23"
											},
											{
												"body": {
													"nativeSrc": "9262:152:23",
													"nodeType": "YulBlock",
													"src": "9262:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9279:1:23",
																		"nodeType": "YulLiteral",
																		"src": "9279:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9282:77:23",
																		"nodeType": "YulLiteral",
																		"src": "9282:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9272:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "9272:6:23"
																},
																"nativeSrc": "9272:88:23",
																"nodeType": "YulFunctionCall",
																"src": "9272:88:23"
															},
															"nativeSrc": "9272:88:23",
															"nodeType": "YulExpressionStatement",
															"src": "9272:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9376:1:23",
																		"nodeType": "YulLiteral",
																		"src": "9376:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9379:4:23",
																		"nodeType": "YulLiteral",
																		"src": "9379:4:23",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9369:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "9369:6:23"
																},
																"nativeSrc": "9369:15:23",
																"nodeType": "YulFunctionCall",
																"src": "9369:15:23"
															},
															"nativeSrc": "9369:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "9369:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9400:1:23",
																		"nodeType": "YulLiteral",
																		"src": "9400:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9403:4:23",
																		"nodeType": "YulLiteral",
																		"src": "9403:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9393:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "9393:6:23"
																},
																"nativeSrc": "9393:15:23",
																"nodeType": "YulFunctionCall",
																"src": "9393:15:23"
															},
															"nativeSrc": "9393:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "9393:15:23"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9234:180:23",
												"nodeType": "YulFunctionDefinition",
												"src": "9234:180:23"
											},
											{
												"body": {
													"nativeSrc": "9448:152:23",
													"nodeType": "YulBlock",
													"src": "9448:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9465:1:23",
																		"nodeType": "YulLiteral",
																		"src": "9465:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9468:77:23",
																		"nodeType": "YulLiteral",
																		"src": "9468:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9458:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "9458:6:23"
																},
																"nativeSrc": "9458:88:23",
																"nodeType": "YulFunctionCall",
																"src": "9458:88:23"
															},
															"nativeSrc": "9458:88:23",
															"nodeType": "YulExpressionStatement",
															"src": "9458:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9562:1:23",
																		"nodeType": "YulLiteral",
																		"src": "9562:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9565:4:23",
																		"nodeType": "YulLiteral",
																		"src": "9565:4:23",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9555:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "9555:6:23"
																},
																"nativeSrc": "9555:15:23",
																"nodeType": "YulFunctionCall",
																"src": "9555:15:23"
															},
															"nativeSrc": "9555:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "9555:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9586:1:23",
																		"nodeType": "YulLiteral",
																		"src": "9586:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9589:4:23",
																		"nodeType": "YulLiteral",
																		"src": "9589:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9579:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "9579:6:23"
																},
																"nativeSrc": "9579:15:23",
																"nodeType": "YulFunctionCall",
																"src": "9579:15:23"
															},
															"nativeSrc": "9579:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "9579:15:23"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9420:180:23",
												"nodeType": "YulFunctionDefinition",
												"src": "9420:180:23"
											},
											{
												"body": {
													"nativeSrc": "9647:126:23",
													"nodeType": "YulBlock",
													"src": "9647:126:23",
													"statements": [
														{
															"nativeSrc": "9657:31:23",
															"nodeType": "YulAssignment",
															"src": "9657:31:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9682:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "9682:5:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "9666:15:23",
																	"nodeType": "YulIdentifier",
																	"src": "9666:15:23"
																},
																"nativeSrc": "9666:22:23",
																"nodeType": "YulFunctionCall",
																"src": "9666:22:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9657:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "9657:5:23"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9716:22:23",
																"nodeType": "YulBlock",
																"src": "9716:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9718:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "9718:16:23"
																			},
																			"nativeSrc": "9718:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "9718:18:23"
																		},
																		"nativeSrc": "9718:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "9718:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9703:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "9703:5:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9710:4:23",
																		"nodeType": "YulLiteral",
																		"src": "9710:4:23",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9700:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "9700:2:23"
																},
																"nativeSrc": "9700:15:23",
																"nodeType": "YulFunctionCall",
																"src": "9700:15:23"
															},
															"nativeSrc": "9697:41:23",
															"nodeType": "YulIf",
															"src": "9697:41:23"
														},
														{
															"nativeSrc": "9747:20:23",
															"nodeType": "YulAssignment",
															"src": "9747:20:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9758:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "9758:5:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9765:1:23",
																		"nodeType": "YulLiteral",
																		"src": "9765:1:23",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9754:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "9754:3:23"
																},
																"nativeSrc": "9754:13:23",
																"nodeType": "YulFunctionCall",
																"src": "9754:13:23"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9747:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "9747:3:23"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nativeSrc": "9606:167:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9633:5:23",
														"nodeType": "YulTypedName",
														"src": "9633:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9643:3:23",
														"nodeType": "YulTypedName",
														"src": "9643:3:23",
														"type": ""
													}
												],
												"src": "9606:167:23"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes32__to_t_bool_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 23,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b2575f3560e01c80636a49f9791161006f5780636a49f9791461017d57806395d89b411461019b578063b62a62ec146101b9578063e8315742146101d7578063f22a195e146101f5578063f82900b114610213576100b2565b80630572b0cc146100b657806306fdde03146100d457806318160ddd146100f25780633ba0b9a9146101105780634fc8a9911461012e57806357e871e71461015f575b5f80fd5b6100be610231565b6040516100cb9190610609565b60405180910390f35b6100dc61023a565b6040516100e99190610692565b60405180910390f35b6100fa6102c6565b6040516101079190610609565b60405180910390f35b6101186102cc565b60405161012591906106cd565b60405180910390f35b6101486004803603810190610143919061087d565b6102de565b604051610156929190610909565b60405180910390f35b610167610432565b6040516101749190610609565b60405180910390f35b610185610438565b6040516101929190610692565b60405180910390f35b6101a36104c4565b6040516101b09190610692565b60405180910390f35b6101c1610550565b6040516101ce9190610692565b60405180910390f35b6101df6105e0565b6040516101ec9190610609565b60405180910390f35b6101fd6105e5565b60405161020a9190610930565b60405180910390f35b61021b6105eb565b6040516102289190610609565b60405180910390f35b5f600954905090565b6003805461024790610976565b80601f016020809104026020016040519081016040528092919081815260200182805461027390610976565b80156102be5780601f10610295576101008083540402835291602001916102be565b820191905f5260205f20905b8154815290600101906020018083116102a157829003601f168201915b505050505081565b60015481565b60045f9054906101000a900460ff1681565b5f805f6008846040516020016102f5929190610a72565b60405160208183030381529060405290505f816040516020016103189190610692565b6040516020818303038152906040528051906020012090505f5b60208160ff1611610421575f828260ff166020811061035457610353610a95565b5b1a60f81b9050600a60019054906101000a900460f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361040d576009546005548973ffffffffffffffffffffffffffffffffffffffff167f5a9ec13c12ca9563a7b3108125f74c57ed388bb313394ea50f7e4a71b01497c260405160405180910390a4600183955095505050505061042b565b50808061041990610aef565b915050610332565b505f819350935050505b9250929050565b60055481565b6008805461044590610976565b80601f016020809104026020016040519081016040528092919081815260200182805461047190610976565b80156104bc5780601f10610493576101008083540402835291602001916104bc565b820191905f5260205f20905b81548152906001019060200180831161049f57829003601f168201915b505050505081565b600280546104d190610976565b80601f01602080910402602001604051908101604052809291908181526020018280546104fd90610976565b80156105485780601f1061051f57610100808354040283529160200191610548565b820191905f5260205f20905b81548152906001019060200180831161052b57829003601f168201915b505050505081565b60606008805461055f90610976565b80601f016020809104026020016040519081016040528092919081815260200182805461058b90610976565b80156105d65780601f106105ad576101008083540402835291602001916105d6565b820191905f5260205f20905b8154815290600101906020018083116105b957829003601f168201915b5050505050905090565b5f5481565b60065481565b60095481565b5f819050919050565b610603816105f1565b82525050565b5f60208201905061061c5f8301846105fa565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61066482610622565b61066e818561062c565b935061067e81856020860161063c565b6106878161064a565b840191505092915050565b5f6020820190508181035f8301526106aa818461065a565b905092915050565b5f60ff82169050919050565b6106c7816106b2565b82525050565b5f6020820190506106e05f8301846106be565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610720826106f7565b9050919050565b61073081610716565b811461073a575f80fd5b50565b5f8135905061074b81610727565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61078f8261064a565b810181811067ffffffffffffffff821117156107ae576107ad610759565b5b80604052505050565b5f6107c06106e6565b90506107cc8282610786565b919050565b5f67ffffffffffffffff8211156107eb576107ea610759565b5b6107f48261064a565b9050602081019050919050565b828183375f83830152505050565b5f61082161081c846107d1565b6107b7565b90508281526020810184848401111561083d5761083c610755565b5b610848848285610801565b509392505050565b5f82601f83011261086457610863610751565b5b813561087484826020860161080f565b91505092915050565b5f8060408385031215610893576108926106ef565b5b5f6108a08582860161073d565b925050602083013567ffffffffffffffff8111156108c1576108c06106f3565b5b6108cd85828601610850565b9150509250929050565b5f8115159050919050565b6108eb816108d7565b82525050565b5f819050919050565b610903816108f1565b82525050565b5f60408201905061091c5f8301856108e2565b61092960208301846108fa565b9392505050565b5f6020820190506109435f8301846108fa565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061098d57607f821691505b6020821081036109a05761099f610949565b5b50919050565b5f81905092915050565b5f819050815f5260205f209050919050565b5f81546109ce81610976565b6109d881866109a6565b9450600182165f81146109f25760018114610a0757610a39565b60ff1983168652811515820286019350610a39565b610a10856109b0565b5f5b83811015610a3157815481890152600182019150602081019050610a12565b838801955050505b50505092915050565b5f610a4c82610622565b610a5681856109a6565b9350610a6681856020860161063c565b80840191505092915050565b5f610a7d82856109c2565b9150610a898284610a42565b91508190509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610af9826106b2565b915060ff8203610b0c57610b0b610ac2565b5b60018201905091905056fea26469706673582212202ee99f0a55f292f0117329f20d9e897459eb6e84223f7b6467ba76b2a934f1f964736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A49F979 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x6A49F979 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xB62A62EC EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xE8315742 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xF22A195E EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xF82900B1 EQ PUSH2 0x213 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x572B0CC EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x3BA0B9A9 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x4FC8A991 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x57E871E7 EQ PUSH2 0x15F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x23A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x87D JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP3 SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH2 0x438 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x9 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x247 SWAP1 PUSH2 0x976 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x273 SWAP1 PUSH2 0x976 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x295 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x8 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2F5 SWAP3 SWAP2 SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xFF AND GT PUSH2 0x421 JUMPI PUSH0 DUP3 DUP3 PUSH1 0xFF AND PUSH1 0x20 DUP2 LT PUSH2 0x354 JUMPI PUSH2 0x353 PUSH2 0xA95 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL SWAP1 POP PUSH1 0xA PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x40D JUMPI PUSH1 0x9 SLOAD PUSH1 0x5 SLOAD DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5A9EC13C12CA9563A7B3108125F74C57ED388BB313394EA50F7E4A71B01497C2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 DUP4 SWAP6 POP SWAP6 POP POP POP POP POP PUSH2 0x42B JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x419 SWAP1 PUSH2 0xAEF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x332 JUMP JUMPDEST POP PUSH0 DUP2 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x445 SWAP1 PUSH2 0x976 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x471 SWAP1 PUSH2 0x976 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x493 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x4D1 SWAP1 PUSH2 0x976 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FD SWAP1 PUSH2 0x976 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x548 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x548 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x55F SWAP1 PUSH2 0x976 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58B SWAP1 PUSH2 0x976 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x603 DUP2 PUSH2 0x5F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x61C PUSH0 DUP4 ADD DUP5 PUSH2 0x5FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x664 DUP3 PUSH2 0x622 JUMP JUMPDEST PUSH2 0x66E DUP2 DUP6 PUSH2 0x62C JUMP JUMPDEST SWAP4 POP PUSH2 0x67E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x63C JUMP JUMPDEST PUSH2 0x687 DUP2 PUSH2 0x64A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6AA DUP2 DUP5 PUSH2 0x65A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C7 DUP2 PUSH2 0x6B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x6BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x720 DUP3 PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x730 DUP2 PUSH2 0x716 JUMP JUMPDEST DUP2 EQ PUSH2 0x73A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x74B DUP2 PUSH2 0x727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x78F DUP3 PUSH2 0x64A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x7AE JUMPI PUSH2 0x7AD PUSH2 0x759 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7C0 PUSH2 0x6E6 JUMP JUMPDEST SWAP1 POP PUSH2 0x7CC DUP3 DUP3 PUSH2 0x786 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x7EB JUMPI PUSH2 0x7EA PUSH2 0x759 JUMP JUMPDEST JUMPDEST PUSH2 0x7F4 DUP3 PUSH2 0x64A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x821 PUSH2 0x81C DUP5 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x83D JUMPI PUSH2 0x83C PUSH2 0x755 JUMP JUMPDEST JUMPDEST PUSH2 0x848 DUP5 DUP3 DUP6 PUSH2 0x801 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x864 JUMPI PUSH2 0x863 PUSH2 0x751 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x874 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x80F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x893 JUMPI PUSH2 0x892 PUSH2 0x6EF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8A0 DUP6 DUP3 DUP7 ADD PUSH2 0x73D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8C1 JUMPI PUSH2 0x8C0 PUSH2 0x6F3 JUMP JUMPDEST JUMPDEST PUSH2 0x8CD DUP6 DUP3 DUP7 ADD PUSH2 0x850 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EB DUP2 PUSH2 0x8D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x903 DUP2 PUSH2 0x8F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x91C PUSH0 DUP4 ADD DUP6 PUSH2 0x8E2 JUMP JUMPDEST PUSH2 0x929 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8FA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x943 PUSH0 DUP4 ADD DUP5 PUSH2 0x8FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x98D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x9A0 JUMPI PUSH2 0x99F PUSH2 0x949 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x9CE DUP2 PUSH2 0x976 JUMP JUMPDEST PUSH2 0x9D8 DUP2 DUP7 PUSH2 0x9A6 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0x9F2 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xA07 JUMPI PUSH2 0xA39 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0xA39 JUMP JUMPDEST PUSH2 0xA10 DUP6 PUSH2 0x9B0 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA31 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA12 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA4C DUP3 PUSH2 0x622 JUMP JUMPDEST PUSH2 0xA56 DUP2 DUP6 PUSH2 0x9A6 JUMP JUMPDEST SWAP4 POP PUSH2 0xA66 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x63C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA7D DUP3 DUP6 PUSH2 0x9C2 JUMP JUMPDEST SWAP2 POP PUSH2 0xA89 DUP3 DUP5 PUSH2 0xA42 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAF9 DUP3 PUSH2 0x6B2 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0xB0C JUMPI PUSH2 0xB0B PUSH2 0xAC2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xE9 SWAP16 EXP SSTORE CALLCODE SWAP3 CREATE GT PUSH20 0x29F20D9E897459EB6E84223F7B6467BA76B2A934 CALL 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "555:3408:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3765:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;704:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;644:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;729:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3079:678;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;791:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;893:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;677:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3864:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;613:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;824;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;924:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3765:91;3808:7;3835:13;;3828:20;;3765:91;:::o;704:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;644:26::-;;;;:::o;729:25::-;;;;;;;;;;;;;:::o;3079:678::-;3169:4;3175:7;3200:24;3241:10;3253:5;3227:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3200:59;;3272:22;3318:10;3307:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;3297:33;;;;;;3272:58;;3356:7;3351:358;3374:5;3369:1;:10;;;3351:358;;3477:17;3497:14;3512:1;3497:17;;;;;;;;;:::i;:::-;;;;;3477:37;;3553:15;;;;;;;;;;;3539:29;;;:10;:29;;;;3535:163;;3620:13;;3607:11;;3600:5;3594:40;;;;;;;;;;;;3661:4;3667:14;3653:29;;;;;;;;;;3535:163;3386:323;3381:3;;;;;:::i;:::-;;;;3351:358;;;;3727:5;3734:14;3719:30;;;;;;3079:678;;;;;;:::o;791:26::-;;;;:::o;893:24::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;677:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3864:96::-;3910:13;3942:10;3935:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3864:96;:::o;613:24::-;;;;:::o;824:::-;;;;:::o;924:28::-;;;;:::o;7:77:23:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:139::-;811:6;806:3;801;795:23;852:1;843:6;838:3;834:16;827:27;722:139;;;:::o;867:102::-;908:6;959:2;955:7;950:2;943:5;939:14;935:28;925:38;;867:102;;;:::o;975:377::-;1063:3;1091:39;1124:5;1091:39;:::i;:::-;1146:71;1210:6;1205:3;1146:71;:::i;:::-;1139:78;;1226:65;1284:6;1279:3;1272:4;1265:5;1261:16;1226:65;:::i;:::-;1316:29;1338:6;1316:29;:::i;:::-;1311:3;1307:39;1300:46;;1067:285;975:377;;;;:::o;1358:313::-;1471:4;1509:2;1498:9;1494:18;1486:26;;1558:9;1552:4;1548:20;1544:1;1533:9;1529:17;1522:47;1586:78;1659:4;1650:6;1586:78;:::i;:::-;1578:86;;1358:313;;;;:::o;1677:86::-;1712:7;1752:4;1745:5;1741:16;1730:27;;1677:86;;;:::o;1769:112::-;1852:22;1868:5;1852:22;:::i;:::-;1847:3;1840:35;1769:112;;:::o;1887:214::-;1976:4;2014:2;2003:9;1999:18;1991:26;;2027:67;2091:1;2080:9;2076:17;2067:6;2027:67;:::i;:::-;1887:214;;;;:::o;2107:75::-;2140:6;2173:2;2167:9;2157:19;;2107:75;:::o;2188:117::-;2297:1;2294;2287:12;2311:117;2420:1;2417;2410:12;2434:126;2471:7;2511:42;2504:5;2500:54;2489:65;;2434:126;;;:::o;2566:96::-;2603:7;2632:24;2650:5;2632:24;:::i;:::-;2621:35;;2566:96;;;:::o;2668:122::-;2741:24;2759:5;2741:24;:::i;:::-;2734:5;2731:35;2721:63;;2780:1;2777;2770:12;2721:63;2668:122;:::o;2796:139::-;2842:5;2880:6;2867:20;2858:29;;2896:33;2923:5;2896:33;:::i;:::-;2796:139;;;;:::o;2941:117::-;3050:1;3047;3040:12;3064:117;3173:1;3170;3163:12;3187:180;3235:77;3232:1;3225:88;3332:4;3329:1;3322:15;3356:4;3353:1;3346:15;3373:281;3456:27;3478:4;3456:27;:::i;:::-;3448:6;3444:40;3586:6;3574:10;3571:22;3550:18;3538:10;3535:34;3532:62;3529:88;;;3597:18;;:::i;:::-;3529:88;3637:10;3633:2;3626:22;3416:238;3373:281;;:::o;3660:129::-;3694:6;3721:20;;:::i;:::-;3711:30;;3750:33;3778:4;3770:6;3750:33;:::i;:::-;3660:129;;;:::o;3795:308::-;3857:4;3947:18;3939:6;3936:30;3933:56;;;3969:18;;:::i;:::-;3933:56;4007:29;4029:6;4007:29;:::i;:::-;3999:37;;4091:4;4085;4081:15;4073:23;;3795:308;;;:::o;4109:148::-;4207:6;4202:3;4197;4184:30;4248:1;4239:6;4234:3;4230:16;4223:27;4109:148;;;:::o;4263:425::-;4341:5;4366:66;4382:49;4424:6;4382:49;:::i;:::-;4366:66;:::i;:::-;4357:75;;4455:6;4448:5;4441:21;4493:4;4486:5;4482:16;4531:3;4522:6;4517:3;4513:16;4510:25;4507:112;;;4538:79;;:::i;:::-;4507:112;4628:54;4675:6;4670:3;4665;4628:54;:::i;:::-;4347:341;4263:425;;;;;:::o;4708:340::-;4764:5;4813:3;4806:4;4798:6;4794:17;4790:27;4780:122;;4821:79;;:::i;:::-;4780:122;4938:6;4925:20;4963:79;5038:3;5030:6;5023:4;5015:6;5011:17;4963:79;:::i;:::-;4954:88;;4770:278;4708:340;;;;:::o;5054:654::-;5132:6;5140;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5470:2;5459:9;5455:18;5442:32;5501:18;5493:6;5490:30;5487:117;;;5523:79;;:::i;:::-;5487:117;5628:63;5683:7;5674:6;5663:9;5659:22;5628:63;:::i;:::-;5618:73;;5413:288;5054:654;;;;;:::o;5714:90::-;5748:7;5791:5;5784:13;5777:21;5766:32;;5714:90;;;:::o;5810:109::-;5891:21;5906:5;5891:21;:::i;:::-;5886:3;5879:34;5810:109;;:::o;5925:77::-;5962:7;5991:5;5980:16;;5925:77;;;:::o;6008:118::-;6095:24;6113:5;6095:24;:::i;:::-;6090:3;6083:37;6008:118;;:::o;6132:320::-;6247:4;6285:2;6274:9;6270:18;6262:26;;6298:65;6360:1;6349:9;6345:17;6336:6;6298:65;:::i;:::-;6373:72;6441:2;6430:9;6426:18;6417:6;6373:72;:::i;:::-;6132:320;;;;;:::o;6458:222::-;6551:4;6589:2;6578:9;6574:18;6566:26;;6602:71;6670:1;6659:9;6655:17;6646:6;6602:71;:::i;:::-;6458:222;;;;:::o;6686:180::-;6734:77;6731:1;6724:88;6831:4;6828:1;6821:15;6855:4;6852:1;6845:15;6872:320;6916:6;6953:1;6947:4;6943:12;6933:22;;7000:1;6994:4;6990:12;7021:18;7011:81;;7077:4;7069:6;7065:17;7055:27;;7011:81;7139:2;7131:6;7128:14;7108:18;7105:38;7102:84;;7158:18;;:::i;:::-;7102:84;6923:269;6872:320;;;:::o;7198:148::-;7300:11;7337:3;7322:18;;7198:148;;;;:::o;7352:141::-;7401:4;7424:3;7416:11;;7447:3;7444:1;7437:14;7481:4;7478:1;7468:18;7460:26;;7352:141;;;:::o;7523:874::-;7626:3;7663:5;7657:12;7692:36;7718:9;7692:36;:::i;:::-;7744:89;7826:6;7821:3;7744:89;:::i;:::-;7737:96;;7864:1;7853:9;7849:17;7880:1;7875:166;;;;8055:1;8050:341;;;;7842:549;;7875:166;7959:4;7955:9;7944;7940:25;7935:3;7928:38;8021:6;8014:14;8007:22;7999:6;7995:35;7990:3;7986:45;7979:52;;7875:166;;8050:341;8117:38;8149:5;8117:38;:::i;:::-;8177:1;8191:154;8205:6;8202:1;8199:13;8191:154;;;8279:7;8273:14;8269:1;8264:3;8260:11;8253:35;8329:1;8320:7;8316:15;8305:26;;8227:4;8224:1;8220:12;8215:17;;8191:154;;;8374:6;8369:3;8365:16;8358:23;;8057:334;;7842:549;;7630:767;;7523:874;;;;:::o;8403:390::-;8509:3;8537:39;8570:5;8537:39;:::i;:::-;8592:89;8674:6;8669:3;8592:89;:::i;:::-;8585:96;;8690:65;8748:6;8743:3;8736:4;8729:5;8725:16;8690:65;:::i;:::-;8780:6;8775:3;8771:16;8764:23;;8513:280;8403:390;;;;:::o;8799:429::-;8976:3;8998:92;9086:3;9077:6;8998:92;:::i;:::-;8991:99;;9107:95;9198:3;9189:6;9107:95;:::i;:::-;9100:102;;9219:3;9212:10;;8799:429;;;;;:::o;9234:180::-;9282:77;9279:1;9272:88;9379:4;9376:1;9369:15;9403:4;9400:1;9393:15;9420:180;9468:77;9465:1;9458:88;9565:4;9562:1;9555:15;9589:4;9586:1;9579:15;9606:167;9643:3;9666:22;9682:5;9666:22;:::i;:::-;9657:31;;9710:4;9703:5;9700:15;9697:41;;9718:18;;:::i;:::-;9697:41;9765:1;9758:5;9754:13;9747:20;;9606:167;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "578600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"blockHash()": "2513",
								"blockNumber()": "2536",
								"exchangeRate()": "2533",
								"getMiningTask()": "infinite",
								"getRewards()": "2433",
								"maxTokens()": "2490",
								"mineTokens(address,string)": "infinite",
								"miningRewards()": "2535",
								"miningTask()": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2470"
							},
							"internal": {
								"calculateMiningRewards(uint256)": "infinite",
								"calculateMiningTask()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 555,
									"end": 3963,
									"name": "PUSH",
									"source": 21,
									"value": "80"
								},
								{
									"begin": 555,
									"end": 3963,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 555,
									"end": 3963,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 883,
									"end": 884,
									"name": "PUSH",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 855,
									"end": 884,
									"name": "PUSH",
									"source": 21,
									"value": "7"
								},
								{
									"begin": 855,
									"end": 884,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 855,
									"end": 884,
									"name": "PUSH",
									"source": 21,
									"value": "100"
								},
								{
									"begin": 855,
									"end": 884,
									"name": "EXP",
									"source": 21
								},
								{
									"begin": 855,
									"end": 884,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 855,
									"end": 884,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 855,
									"end": 884,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 855,
									"end": 884,
									"name": "PUSH",
									"source": 21,
									"value": "FF"
								},
								{
									"begin": 855,
									"end": 884,
									"name": "MUL",
									"source": 21
								},
								{
									"begin": 855,
									"end": 884,
									"name": "NOT",
									"source": 21
								},
								{
									"begin": 855,
									"end": 884,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 855,
									"end": 884,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 855,
									"end": 884,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 855,
									"end": 884,
									"name": "PUSH",
									"source": 21,
									"value": "FF"
								},
								{
									"begin": 855,
									"end": 884,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 855,
									"end": 884,
									"name": "MUL",
									"source": 21
								},
								{
									"begin": 855,
									"end": 884,
									"name": "OR",
									"source": 21
								},
								{
									"begin": 855,
									"end": 884,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 855,
									"end": 884,
									"name": "SSTORE",
									"source": 21
								},
								{
									"begin": 855,
									"end": 884,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 982,
									"end": 983,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 961,
									"end": 983,
									"name": "PUSH",
									"source": 21,
									"value": "A"
								},
								{
									"begin": 961,
									"end": 983,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 961,
									"end": 983,
									"name": "PUSH",
									"source": 21,
									"value": "100"
								},
								{
									"begin": 961,
									"end": 983,
									"name": "EXP",
									"source": 21
								},
								{
									"begin": 961,
									"end": 983,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 961,
									"end": 983,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 961,
									"end": 983,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 961,
									"end": 983,
									"name": "PUSH",
									"source": 21,
									"value": "FF"
								},
								{
									"begin": 961,
									"end": 983,
									"name": "MUL",
									"source": 21
								},
								{
									"begin": 961,
									"end": 983,
									"name": "NOT",
									"source": 21
								},
								{
									"begin": 961,
									"end": 983,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 961,
									"end": 983,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 961,
									"end": 983,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 961,
									"end": 983,
									"name": "PUSH",
									"source": 21,
									"value": "FF"
								},
								{
									"begin": 961,
									"end": 983,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 961,
									"end": 983,
									"name": "MUL",
									"source": 21
								},
								{
									"begin": 961,
									"end": 983,
									"name": "OR",
									"source": 21
								},
								{
									"begin": 961,
									"end": 983,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 961,
									"end": 983,
									"name": "SSTORE",
									"source": 21
								},
								{
									"begin": 961,
									"end": 983,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1015,
									"end": 1019,
									"name": "PUSH",
									"source": 21,
									"value": "90"
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "PUSH",
									"source": 21,
									"value": "F8"
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "SHL",
									"source": 21
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "PUSH",
									"source": 21,
									"value": "A"
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "PUSH",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "PUSH",
									"source": 21,
									"value": "100"
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "EXP",
									"source": 21
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "PUSH",
									"source": 21,
									"value": "FF"
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "MUL",
									"source": 21
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "NOT",
									"source": 21
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "PUSH",
									"source": 21,
									"value": "F8"
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "SHR",
									"source": 21
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "MUL",
									"source": 21
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "OR",
									"source": 21
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "SSTORE",
									"source": 21
								},
								{
									"begin": 990,
									"end": 1019,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "CALLVALUE",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "tag",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "PUSHSIZE",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "CODESIZE",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "SUB",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "PUSHSIZE",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "CODECOPY",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "2"
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "3"
								},
								{
									"begin": 1463,
									"end": 2031,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "tag",
									"source": 21,
									"value": "2"
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1645,
									"end": 1657,
									"name": "NUMBER",
									"source": 21
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "PUSH",
									"source": 21,
									"value": "5"
								},
								{
									"begin": 1631,
									"end": 1657,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1631,
									"end": 1657,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1631,
									"end": 1657,
									"name": "SSTORE",
									"source": 21
								},
								{
									"begin": 1631,
									"end": 1657,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1690,
									"end": 1701,
									"name": "PUSH",
									"source": 21,
									"value": "5"
								},
								{
									"begin": 1690,
									"end": 1701,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "BLOCKHASH",
									"source": 21
								},
								{
									"begin": 1668,
									"end": 1677,
									"name": "PUSH",
									"source": 21,
									"value": "6"
								},
								{
									"begin": 1668,
									"end": 1702,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1668,
									"end": 1702,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1668,
									"end": 1702,
									"name": "SSTORE",
									"source": 21
								},
								{
									"begin": 1668,
									"end": 1702,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1728,
									"end": 1736,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 1713,
									"end": 1725,
									"name": "PUSH",
									"source": 21,
									"value": "4"
								},
								{
									"begin": 1713,
									"end": 1725,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 1713,
									"end": 1736,
									"name": "PUSH",
									"source": 21,
									"value": "100"
								},
								{
									"begin": 1713,
									"end": 1736,
									"name": "EXP",
									"source": 21
								},
								{
									"begin": 1713,
									"end": 1736,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1713,
									"end": 1736,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 1713,
									"end": 1736,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1713,
									"end": 1736,
									"name": "PUSH",
									"source": 21,
									"value": "FF"
								},
								{
									"begin": 1713,
									"end": 1736,
									"name": "MUL",
									"source": 21
								},
								{
									"begin": 1713,
									"end": 1736,
									"name": "NOT",
									"source": 21
								},
								{
									"begin": 1713,
									"end": 1736,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 1713,
									"end": 1736,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1713,
									"end": 1736,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 1713,
									"end": 1736,
									"name": "PUSH",
									"source": 21,
									"value": "FF"
								},
								{
									"begin": 1713,
									"end": 1736,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 1713,
									"end": 1736,
									"name": "MUL",
									"source": 21
								},
								{
									"begin": 1713,
									"end": 1736,
									"name": "OR",
									"source": 21
								},
								{
									"begin": 1713,
									"end": 1736,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1713,
									"end": 1736,
									"name": "SSTORE",
									"source": 21
								},
								{
									"begin": 1713,
									"end": 1736,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1759,
									"end": 1765,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 1747,
									"end": 1756,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 1747,
									"end": 1765,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1747,
									"end": 1765,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1747,
									"end": 1765,
									"name": "SSTORE",
									"source": 21
								},
								{
									"begin": 1747,
									"end": 1765,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1785,
									"end": 1789,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 1776,
									"end": 1782,
									"name": "PUSH",
									"source": 21,
									"value": "2"
								},
								{
									"begin": 1776,
									"end": 1789,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1776,
									"end": 1789,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1776,
									"end": 1789,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "6"
								},
								{
									"begin": 1776,
									"end": 1789,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 1776,
									"end": 1789,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1776,
									"end": 1789,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "7"
								},
								{
									"begin": 1776,
									"end": 1789,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1776,
									"end": 1789,
									"name": "tag",
									"source": 21,
									"value": "6"
								},
								{
									"begin": 1776,
									"end": 1789,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1776,
									"end": 1789,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1808,
									"end": 1815,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "PUSH",
									"source": 21,
									"value": "3"
								},
								{
									"begin": 1801,
									"end": 1815,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1801,
									"end": 1815,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1801,
									"end": 1815,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "8"
								},
								{
									"begin": 1801,
									"end": 1815,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 1801,
									"end": 1815,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1801,
									"end": 1815,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "7"
								},
								{
									"begin": 1801,
									"end": 1815,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1801,
									"end": 1815,
									"name": "tag",
									"source": 21,
									"value": "8"
								},
								{
									"begin": 1801,
									"end": 1815,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1801,
									"end": 1815,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1841,
									"end": 1849,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 1827,
									"end": 1838,
									"name": "PUSH",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 1827,
									"end": 1849,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1827,
									"end": 1849,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1827,
									"end": 1849,
									"name": "SSTORE",
									"source": 21
								},
								{
									"begin": 1827,
									"end": 1849,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1873,
									"end": 1894,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "9"
								},
								{
									"begin": 1873,
									"end": 1892,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "10"
								},
								{
									"begin": 1873,
									"end": 1892,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 1873,
									"end": 1892,
									"name": "SHL",
									"source": 21
								},
								{
									"begin": 1873,
									"end": 1894,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 1873,
									"end": 1894,
									"name": "SHR",
									"source": 21
								},
								{
									"begin": 1873,
									"end": 1894,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1873,
									"end": 1894,
									"name": "tag",
									"source": 21,
									"value": "9"
								},
								{
									"begin": 1873,
									"end": 1894,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1860,
									"end": 1870,
									"name": "PUSH",
									"source": 21,
									"value": "8"
								},
								{
									"begin": 1860,
									"end": 1894,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1860,
									"end": 1894,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1860,
									"end": 1894,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "11"
								},
								{
									"begin": 1860,
									"end": 1894,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 1860,
									"end": 1894,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1860,
									"end": 1894,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "7"
								},
								{
									"begin": 1860,
									"end": 1894,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1860,
									"end": 1894,
									"name": "tag",
									"source": 21,
									"value": "11"
								},
								{
									"begin": 1860,
									"end": 1894,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1860,
									"end": 1894,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1923,
									"end": 1958,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "12"
								},
								{
									"begin": 1946,
									"end": 1957,
									"name": "PUSH",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 1946,
									"end": 1957,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 1923,
									"end": 1945,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "13"
								},
								{
									"begin": 1923,
									"end": 1945,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 1923,
									"end": 1945,
									"name": "SHL",
									"source": 21
								},
								{
									"begin": 1923,
									"end": 1958,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 1923,
									"end": 1958,
									"name": "SHR",
									"source": 21
								},
								{
									"begin": 1923,
									"end": 1958,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1923,
									"end": 1958,
									"name": "tag",
									"source": 21,
									"value": "12"
								},
								{
									"begin": 1923,
									"end": 1958,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1907,
									"end": 1920,
									"name": "PUSH",
									"source": 21,
									"value": "9"
								},
								{
									"begin": 1907,
									"end": 1958,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 1907,
									"end": 1958,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1907,
									"end": 1958,
									"name": "SSTORE",
									"source": 21
								},
								{
									"begin": 1907,
									"end": 1958,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2012,
									"end": 2022,
									"name": "PUSH",
									"source": 21,
									"value": "8"
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "14"
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "15"
								},
								{
									"begin": 1974,
									"end": 2023,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "tag",
									"source": 21,
									"value": "14"
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "SUB",
									"source": 21
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "KECCAK256",
									"source": 21
								},
								{
									"begin": 2001,
									"end": 2010,
									"name": "PUSH",
									"source": 21,
									"value": "6"
								},
								{
									"begin": 2001,
									"end": 2010,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 1988,
									"end": 1999,
									"name": "PUSH",
									"source": 21,
									"value": "5"
								},
								{
									"begin": 1988,
									"end": 1999,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "PUSH",
									"source": 21,
									"value": "9F4DA1EB02E98B4AB1D9B713F225D0F993B2222A21852024E9D90204BE64706A"
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "SUB",
									"source": 21
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 1974,
									"end": 2023,
									"name": "LOG4",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1463,
									"end": 2031,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 555,
									"end": 3963,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "16"
								},
								{
									"begin": 555,
									"end": 3963,
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2249,
									"end": 3071,
									"name": "tag",
									"source": 21,
									"value": "10"
								},
								{
									"begin": 2249,
									"end": 3071,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2329,
									"end": 2357,
									"name": "PUSH",
									"source": 21,
									"value": "60"
								},
								{
									"begin": 2375,
									"end": 2395,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 2412,
									"end": 2425,
									"name": "PUSH",
									"source": 21,
									"value": "9"
								},
								{
									"begin": 2412,
									"end": 2425,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 2398,
									"end": 2409,
									"name": "PUSH",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 2398,
									"end": 2409,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 2398,
									"end": 2425,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "18"
								},
								{
									"begin": 2398,
									"end": 2425,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 2398,
									"end": 2425,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2398,
									"end": 2425,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "19"
								},
								{
									"begin": 2398,
									"end": 2425,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2398,
									"end": 2425,
									"name": "tag",
									"source": 21,
									"value": "18"
								},
								{
									"begin": 2398,
									"end": 2425,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2375,
									"end": 2425,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2375,
									"end": 2425,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2457,
									"end": 2469,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 2444,
									"end": 2453,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 2444,
									"end": 2453,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 2444,
									"end": 2469,
									"name": "LT",
									"source": 21
								},
								{
									"begin": 2444,
									"end": 2469,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "PUSH",
									"source": 21,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "PUSH",
									"source": 21,
									"value": "4"
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "21"
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "22"
								},
								{
									"begin": 2436,
									"end": 2502,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "tag",
									"source": 21,
									"value": "21"
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "SUB",
									"source": 21
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "tag",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 2436,
									"end": 2502,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2607,
									"end": 2636,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 2639,
									"end": 2666,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "23"
								},
								{
									"begin": 2656,
									"end": 2665,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2665,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 2639,
									"end": 2655,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "24"
								},
								{
									"begin": 2639,
									"end": 2655,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 2639,
									"end": 2655,
									"name": "SHL",
									"source": 21
								},
								{
									"begin": 2639,
									"end": 2666,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 2639,
									"end": 2666,
									"name": "SHR",
									"source": 21
								},
								{
									"begin": 2639,
									"end": 2666,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2639,
									"end": 2666,
									"name": "tag",
									"source": 21,
									"value": "23"
								},
								{
									"begin": 2639,
									"end": 2666,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2607,
									"end": 2666,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2607,
									"end": 2666,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2677,
									"end": 2708,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 2711,
									"end": 2740,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "25"
								},
								{
									"begin": 2728,
									"end": 2739,
									"name": "PUSH",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 2728,
									"end": 2739,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 2711,
									"end": 2727,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "24"
								},
								{
									"begin": 2711,
									"end": 2727,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 2711,
									"end": 2727,
									"name": "SHL",
									"source": 21
								},
								{
									"begin": 2711,
									"end": 2740,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 2711,
									"end": 2740,
									"name": "SHR",
									"source": 21
								},
								{
									"begin": 2711,
									"end": 2740,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2711,
									"end": 2740,
									"name": "tag",
									"source": 21,
									"value": "25"
								},
								{
									"begin": 2711,
									"end": 2740,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2677,
									"end": 2740,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2677,
									"end": 2740,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2775,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 2778,
									"end": 2782,
									"name": "PUSH",
									"source": 21,
									"value": "3"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "26"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "27"
								},
								{
									"begin": 2751,
									"end": 2782,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "tag",
									"source": 21,
									"value": "26"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH",
									"source": 21,
									"value": "1F"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DIV",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "MUL",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "28"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "27"
								},
								{
									"begin": 2751,
									"end": 2782,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "tag",
									"source": 21,
									"value": "28"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "29"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH",
									"source": 21,
									"value": "1F"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "LT",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "30"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH",
									"source": 21,
									"value": "100"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DIV",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "MUL",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "29"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "tag",
									"source": 21,
									"value": "30"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "KECCAK256",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "tag",
									"source": 21,
									"value": "31"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "GT",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "31"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SUB",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "PUSH",
									"source": 21,
									"value": "1F"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "tag",
									"source": 21,
									"value": "29"
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2751,
									"end": 2782,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2793,
									"end": 2822,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 2849,
									"end": 2858,
									"name": "PUSH",
									"source": 21,
									"value": "6"
								},
								{
									"begin": 2849,
									"end": 2858,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "32"
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "33"
								},
								{
									"begin": 2832,
									"end": 2859,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "tag",
									"source": 21,
									"value": "32"
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "SUB",
									"source": 21
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "SUB",
									"source": 21
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 2832,
									"end": 2859,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 2793,
									"end": 2860,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2793,
									"end": 2860,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2871,
									"end": 2893,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 2949,
									"end": 2964,
									"name": "DUP6",
									"source": 21
								},
								{
									"begin": 2979,
									"end": 2996,
									"name": "DUP6",
									"source": 21
								},
								{
									"begin": 3011,
									"end": 3026,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "34"
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "SWAP5",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "SWAP4",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "35"
								},
								{
									"begin": 2896,
									"end": 3037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "tag",
									"source": 21,
									"value": "34"
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "SUB",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "SUB",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 2896,
									"end": 3037,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 2871,
									"end": 3037,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2871,
									"end": 3037,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3055,
									"end": 3063,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 3048,
									"end": 3063,
									"name": "SWAP7",
									"source": 21
								},
								{
									"begin": 3048,
									"end": 3063,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3048,
									"end": 3063,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3048,
									"end": 3063,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3048,
									"end": 3063,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3048,
									"end": 3063,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3048,
									"end": 3063,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 3048,
									"end": 3063,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2249,
									"end": 3071,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2249,
									"end": 3071,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2039,
									"end": 2241,
									"name": "tag",
									"source": 21,
									"value": "13"
								},
								{
									"begin": 2039,
									"end": 2241,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2129,
									"end": 2136,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 2154,
									"end": 2169,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 2172,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "37"
								},
								{
									"begin": 2185,
									"end": 2193,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 2195,
									"end": 2207,
									"name": "PUSH",
									"source": 21,
									"value": "4"
								},
								{
									"begin": 2195,
									"end": 2207,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 2195,
									"end": 2207,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2195,
									"end": 2207,
									"name": "SLOAD",
									"source": 21
								},
								{
									"begin": 2195,
									"end": 2207,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2195,
									"end": 2207,
									"name": "PUSH",
									"source": 21,
									"value": "100"
								},
								{
									"begin": 2195,
									"end": 2207,
									"name": "EXP",
									"source": 21
								},
								{
									"begin": 2195,
									"end": 2207,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2195,
									"end": 2207,
									"name": "DIV",
									"source": 21
								},
								{
									"begin": 2195,
									"end": 2207,
									"name": "PUSH",
									"source": 21,
									"value": "FF"
								},
								{
									"begin": 2195,
									"end": 2207,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 2172,
									"end": 2208,
									"name": "PUSH",
									"source": 21,
									"value": "FF"
								},
								{
									"begin": 2172,
									"end": 2208,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 2172,
									"end": 2184,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "38"
								},
								{
									"begin": 2172,
									"end": 2184,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 2172,
									"end": 2184,
									"name": "SHL",
									"source": 21
								},
								{
									"begin": 2172,
									"end": 2208,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 2172,
									"end": 2208,
									"name": "SHR",
									"source": 21
								},
								{
									"begin": 2172,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 2172,
									"end": 2208,
									"name": "tag",
									"source": 21,
									"value": "37"
								},
								{
									"begin": 2172,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 2154,
									"end": 2208,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2154,
									"end": 2208,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2226,
									"end": 2233,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 2219,
									"end": 2233,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 2219,
									"end": 2233,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2219,
									"end": 2233,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2039,
									"end": 2241,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 2039,
									"end": 2241,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 2039,
									"end": 2241,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 2039,
									"end": 2241,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 637,
									"end": 1335,
									"name": "tag",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 637,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 693,
									"end": 706,
									"name": "PUSH",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 742,
									"end": 756,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 779,
									"end": 780,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 759,
									"end": 776,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 770,
									"end": 775,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 759,
									"end": 769,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 759,
									"end": 769,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 759,
									"end": 769,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 759,
									"end": 776,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 759,
									"end": 776,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 759,
									"end": 776,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 759,
									"end": 776,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 759,
									"end": 776,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 759,
									"end": 780,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 742,
									"end": 780,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 742,
									"end": 780,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 794,
									"end": 814,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 828,
									"end": 834,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 817,
									"end": 835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "tag",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "CALLDATASIZE",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "CALLDATACOPY",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "tag",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 817,
									"end": 835,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 794,
									"end": 835,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 794,
									"end": 835,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 849,
									"end": 860,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 975,
									"end": 981,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 971,
									"end": 973,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 959,
									"end": 965,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 955,
									"end": 983,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 948,
									"end": 983,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 948,
									"end": 983,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1010,
									"end": 1292,
									"name": "tag",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 1010,
									"end": 1292,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1017,
									"end": 1021,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1010,
									"end": 1292,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1010,
									"end": 1292,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 1010,
									"end": 1292,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1041,
									"end": 1046,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1041,
									"end": 1046,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1041,
									"end": 1046,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1041,
									"end": 1046,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1041,
									"end": 1046,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1041,
									"end": 1046,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1041,
									"end": 1046,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1041,
									"end": 1046,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1180,
									"end": 1190,
									"name": "PUSH",
									"source": 14,
									"value": "3031323334353637383961626364656600000000000000000000000000000000"
								},
								{
									"begin": 1175,
									"end": 1177,
									"name": "PUSH",
									"source": 14,
									"value": "A"
								},
								{
									"begin": 1168,
									"end": 1173,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1164,
									"end": 1178,
									"name": "MOD",
									"source": 14
								},
								{
									"begin": 1159,
									"end": 1191,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 1154,
									"end": 1157,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1146,
									"end": 1192,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 1236,
									"end": 1238,
									"name": "PUSH",
									"source": 14,
									"value": "A"
								},
								{
									"begin": 1227,
									"end": 1238,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1227,
									"end": 1238,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1227,
									"end": 1238,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 1227,
									"end": 1238,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1227,
									"end": 1238,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 1227,
									"end": 1238,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 1227,
									"end": 1238,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1227,
									"end": 1238,
									"name": "tag",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 1227,
									"end": 1238,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1227,
									"end": 1238,
									"name": "tag",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 1227,
									"end": 1238,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1227,
									"end": 1238,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 1227,
									"end": 1238,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 1227,
									"end": 1238,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1269,
									"end": 1270,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1260,
									"end": 1265,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1260,
									"end": 1270,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1010,
									"end": 1292,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 1256,
									"end": 1277,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1010,
									"end": 1292,
									"name": "tag",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 1010,
									"end": 1292,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1312,
									"end": 1318,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1318,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1318,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1318,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1318,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1318,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 637,
									"end": 1335,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 637,
									"end": 1335,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 637,
									"end": 1335,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 637,
									"end": 1335,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3148,
									"end": 3479,
									"name": "tag",
									"source": 18,
									"value": "38"
								},
								{
									"begin": 3148,
									"end": 3479,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3210,
									"end": 3217,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3238,
									"end": 3239,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 3233,
									"end": 3234,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3233,
									"end": 3239,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 3229,
									"end": 3356,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "53"
								},
								{
									"begin": 3229,
									"end": 3356,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3344,
									"end": 3345,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3340,
									"end": 3341,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "55"
								},
								{
									"begin": 3340,
									"end": 3345,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "tag",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3333,
									"end": 3345,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3333,
									"end": 3345,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3333,
									"end": 3345,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "52"
								},
								{
									"begin": 3333,
									"end": 3345,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3229,
									"end": 3356,
									"name": "tag",
									"source": 18,
									"value": "53"
								},
								{
									"begin": 3229,
									"end": 3356,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3449,
									"end": 3450,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3444,
									"end": 3445,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3444,
									"end": 3450,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 3444,
									"end": 3472,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "56"
								},
								{
									"begin": 3444,
									"end": 3472,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3471,
									"end": 3472,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 3467,
									"end": 3468,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3462,
									"end": 3463,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 3458,
									"end": 3459,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 3458,
									"end": 3463,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "57"
								},
								{
									"begin": 3458,
									"end": 3463,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3458,
									"end": 3463,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3458,
									"end": 3463,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "58"
								},
								{
									"begin": 3458,
									"end": 3463,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3458,
									"end": 3463,
									"name": "tag",
									"source": 18,
									"value": "57"
								},
								{
									"begin": 3458,
									"end": 3463,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3457,
									"end": 3468,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "59"
								},
								{
									"begin": 3457,
									"end": 3468,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3457,
									"end": 3468,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3457,
									"end": 3468,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "55"
								},
								{
									"begin": 3457,
									"end": 3468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3457,
									"end": 3468,
									"name": "tag",
									"source": 18,
									"value": "59"
								},
								{
									"begin": 3457,
									"end": 3468,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3457,
									"end": 3472,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 3457,
									"end": 3472,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3457,
									"end": 3472,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3457,
									"end": 3472,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 3457,
									"end": 3472,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3457,
									"end": 3472,
									"name": "tag",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 3457,
									"end": 3472,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3444,
									"end": 3472,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "61"
								},
								{
									"begin": 3444,
									"end": 3472,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3444,
									"end": 3472,
									"name": "tag",
									"source": 18,
									"value": "56"
								},
								{
									"begin": 3444,
									"end": 3472,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3453,
									"end": 3454,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3444,
									"end": 3472,
									"name": "tag",
									"source": 18,
									"value": "61"
								},
								{
									"begin": 3444,
									"end": 3472,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3437,
									"end": 3472,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3437,
									"end": 3472,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3148,
									"end": 3479,
									"name": "tag",
									"source": 18,
									"value": "52"
								},
								{
									"begin": 3148,
									"end": 3479,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3148,
									"end": 3479,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3148,
									"end": 3479,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3148,
									"end": 3479,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3148,
									"end": 3479,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3148,
									"end": 3479,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 12214,
									"end": 13130,
									"name": "tag",
									"source": 18,
									"value": "41"
								},
								{
									"begin": 12214,
									"end": 13130,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12267,
									"end": 12274,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 12286,
									"end": 12300,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 12303,
									"end": 12304,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 12286,
									"end": 12304,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 12286,
									"end": 12304,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12351,
									"end": 12359,
									"name": "PUSH",
									"source": 18,
									"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
								},
								{
									"begin": 12342,
									"end": 12347,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 12342,
									"end": 12359,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 12338,
									"end": 12441,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "63"
								},
								{
									"begin": 12338,
									"end": 12441,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 12388,
									"end": 12396,
									"name": "PUSH",
									"source": 18,
									"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
								},
								{
									"begin": 12379,
									"end": 12396,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 12379,
									"end": 12396,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 12379,
									"end": 12396,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "64"
								},
								{
									"begin": 12379,
									"end": 12396,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 12379,
									"end": 12396,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "65"
								},
								{
									"begin": 12379,
									"end": 12396,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "50"
								},
								{
									"begin": 12379,
									"end": 12396,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 12379,
									"end": 12396,
									"name": "tag",
									"source": 18,
									"value": "65"
								},
								{
									"begin": 12379,
									"end": 12396,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12379,
									"end": 12396,
									"name": "tag",
									"source": 18,
									"value": "64"
								},
								{
									"begin": 12379,
									"end": 12396,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12379,
									"end": 12396,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 12379,
									"end": 12396,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 12379,
									"end": 12396,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12424,
									"end": 12426,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 12414,
									"end": 12426,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 12414,
									"end": 12426,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 12414,
									"end": 12426,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 12414,
									"end": 12426,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12338,
									"end": 12441,
									"name": "tag",
									"source": 18,
									"value": "63"
								},
								{
									"begin": 12338,
									"end": 12441,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12467,
									"end": 12475,
									"name": "PUSH",
									"source": 18,
									"value": "4EE2D6D415B85ACEF8100000000"
								},
								{
									"begin": 12458,
									"end": 12463,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 12458,
									"end": 12475,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 12454,
									"end": 12557,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "66"
								},
								{
									"begin": 12454,
									"end": 12557,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 12504,
									"end": 12512,
									"name": "PUSH",
									"source": 18,
									"value": "4EE2D6D415B85ACEF8100000000"
								},
								{
									"begin": 12495,
									"end": 12512,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 12495,
									"end": 12512,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 12495,
									"end": 12512,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "67"
								},
								{
									"begin": 12495,
									"end": 12512,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 12495,
									"end": 12512,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "68"
								},
								{
									"begin": 12495,
									"end": 12512,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "50"
								},
								{
									"begin": 12495,
									"end": 12512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 12495,
									"end": 12512,
									"name": "tag",
									"source": 18,
									"value": "68"
								},
								{
									"begin": 12495,
									"end": 12512,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12495,
									"end": 12512,
									"name": "tag",
									"source": 18,
									"value": "67"
								},
								{
									"begin": 12495,
									"end": 12512,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12495,
									"end": 12512,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 12495,
									"end": 12512,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 12495,
									"end": 12512,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12540,
									"end": 12542,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 12530,
									"end": 12542,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 12530,
									"end": 12542,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 12530,
									"end": 12542,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 12530,
									"end": 12542,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12454,
									"end": 12557,
									"name": "tag",
									"source": 18,
									"value": "66"
								},
								{
									"begin": 12454,
									"end": 12557,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12583,
									"end": 12591,
									"name": "PUSH",
									"source": 18,
									"value": "2386F26FC10000"
								},
								{
									"begin": 12574,
									"end": 12579,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 12574,
									"end": 12591,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 12570,
									"end": 12673,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "69"
								},
								{
									"begin": 12570,
									"end": 12673,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 12620,
									"end": 12628,
									"name": "PUSH",
									"source": 18,
									"value": "2386F26FC10000"
								},
								{
									"begin": 12611,
									"end": 12628,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 12611,
									"end": 12628,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 12611,
									"end": 12628,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "70"
								},
								{
									"begin": 12611,
									"end": 12628,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 12611,
									"end": 12628,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "71"
								},
								{
									"begin": 12611,
									"end": 12628,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "50"
								},
								{
									"begin": 12611,
									"end": 12628,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 12611,
									"end": 12628,
									"name": "tag",
									"source": 18,
									"value": "71"
								},
								{
									"begin": 12611,
									"end": 12628,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12611,
									"end": 12628,
									"name": "tag",
									"source": 18,
									"value": "70"
								},
								{
									"begin": 12611,
									"end": 12628,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12611,
									"end": 12628,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 12611,
									"end": 12628,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 12611,
									"end": 12628,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12656,
									"end": 12658,
									"name": "PUSH",
									"source": 18,
									"value": "10"
								},
								{
									"begin": 12646,
									"end": 12658,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 12646,
									"end": 12658,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 12646,
									"end": 12658,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 12646,
									"end": 12658,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12570,
									"end": 12673,
									"name": "tag",
									"source": 18,
									"value": "69"
								},
								{
									"begin": 12570,
									"end": 12673,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12699,
									"end": 12706,
									"name": "PUSH",
									"source": 18,
									"value": "5F5E100"
								},
								{
									"begin": 12690,
									"end": 12695,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 12690,
									"end": 12706,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 12686,
									"end": 12786,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "72"
								},
								{
									"begin": 12686,
									"end": 12786,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 12735,
									"end": 12742,
									"name": "PUSH",
									"source": 18,
									"value": "5F5E100"
								},
								{
									"begin": 12726,
									"end": 12742,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 12726,
									"end": 12742,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 12726,
									"end": 12742,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 12726,
									"end": 12742,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 12726,
									"end": 12742,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "74"
								},
								{
									"begin": 12726,
									"end": 12742,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "50"
								},
								{
									"begin": 12726,
									"end": 12742,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 12726,
									"end": 12742,
									"name": "tag",
									"source": 18,
									"value": "74"
								},
								{
									"begin": 12726,
									"end": 12742,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12726,
									"end": 12742,
									"name": "tag",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 12726,
									"end": 12742,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12726,
									"end": 12742,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 12726,
									"end": 12742,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 12726,
									"end": 12742,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12770,
									"end": 12771,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 12760,
									"end": 12771,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 12760,
									"end": 12771,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 12760,
									"end": 12771,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 12760,
									"end": 12771,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12686,
									"end": 12786,
									"name": "tag",
									"source": 18,
									"value": "72"
								},
								{
									"begin": 12686,
									"end": 12786,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12812,
									"end": 12819,
									"name": "PUSH",
									"source": 18,
									"value": "2710"
								},
								{
									"begin": 12803,
									"end": 12808,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 12803,
									"end": 12819,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 12799,
									"end": 12899,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "75"
								},
								{
									"begin": 12799,
									"end": 12899,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 12848,
									"end": 12855,
									"name": "PUSH",
									"source": 18,
									"value": "2710"
								},
								{
									"begin": 12839,
									"end": 12855,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 12839,
									"end": 12855,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 12839,
									"end": 12855,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "76"
								},
								{
									"begin": 12839,
									"end": 12855,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 12839,
									"end": 12855,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "77"
								},
								{
									"begin": 12839,
									"end": 12855,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "50"
								},
								{
									"begin": 12839,
									"end": 12855,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 12839,
									"end": 12855,
									"name": "tag",
									"source": 18,
									"value": "77"
								},
								{
									"begin": 12839,
									"end": 12855,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12839,
									"end": 12855,
									"name": "tag",
									"source": 18,
									"value": "76"
								},
								{
									"begin": 12839,
									"end": 12855,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12839,
									"end": 12855,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 12839,
									"end": 12855,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 12839,
									"end": 12855,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12883,
									"end": 12884,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 12873,
									"end": 12884,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 12873,
									"end": 12884,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 12873,
									"end": 12884,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 12873,
									"end": 12884,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12799,
									"end": 12899,
									"name": "tag",
									"source": 18,
									"value": "75"
								},
								{
									"begin": 12799,
									"end": 12899,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12925,
									"end": 12932,
									"name": "PUSH",
									"source": 18,
									"value": "64"
								},
								{
									"begin": 12916,
									"end": 12921,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 12916,
									"end": 12932,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 12912,
									"end": 13012,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "78"
								},
								{
									"begin": 12912,
									"end": 13012,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 12961,
									"end": 12968,
									"name": "PUSH",
									"source": 18,
									"value": "64"
								},
								{
									"begin": 12952,
									"end": 12968,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 12952,
									"end": 12968,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 12952,
									"end": 12968,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "79"
								},
								{
									"begin": 12952,
									"end": 12968,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 12952,
									"end": 12968,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 12952,
									"end": 12968,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "50"
								},
								{
									"begin": 12952,
									"end": 12968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 12952,
									"end": 12968,
									"name": "tag",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 12952,
									"end": 12968,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12952,
									"end": 12968,
									"name": "tag",
									"source": 18,
									"value": "79"
								},
								{
									"begin": 12952,
									"end": 12968,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12952,
									"end": 12968,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 12952,
									"end": 12968,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 12952,
									"end": 12968,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12996,
									"end": 12997,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 12986,
									"end": 12997,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 12986,
									"end": 12997,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 12986,
									"end": 12997,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 12986,
									"end": 12997,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12912,
									"end": 13012,
									"name": "tag",
									"source": 18,
									"value": "78"
								},
								{
									"begin": 12912,
									"end": 13012,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 13038,
									"end": 13045,
									"name": "PUSH",
									"source": 18,
									"value": "A"
								},
								{
									"begin": 13029,
									"end": 13034,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 13029,
									"end": 13045,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 13025,
									"end": 13091,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "81"
								},
								{
									"begin": 13025,
									"end": 13091,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 13075,
									"end": 13076,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 13065,
									"end": 13076,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 13065,
									"end": 13076,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 13065,
									"end": 13076,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 13065,
									"end": 13076,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 13025,
									"end": 13091,
									"name": "tag",
									"source": 18,
									"value": "81"
								},
								{
									"begin": 13025,
									"end": 13091,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 13117,
									"end": 13123,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 13110,
									"end": 13123,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 13110,
									"end": 13123,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 13110,
									"end": 13123,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12214,
									"end": 13130,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 12214,
									"end": 13130,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 12214,
									"end": 13130,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12214,
									"end": 13130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 23,
									"value": "82"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 23,
									"value": "83"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 23,
									"value": "84"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 334,
									"end": 420,
									"name": "tag",
									"source": 23,
									"value": "85"
								},
								{
									"begin": 334,
									"end": 420,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 369,
									"end": 376,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 413,
									"name": "PUSH",
									"source": 23,
									"value": "FF"
								},
								{
									"begin": 402,
									"end": 407,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 398,
									"end": 414,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 387,
									"end": 414,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 387,
									"end": 414,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 334,
									"end": 420,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 334,
									"end": 420,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 334,
									"end": 420,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 334,
									"end": 420,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 426,
									"end": 544,
									"name": "tag",
									"source": 23,
									"value": "86"
								},
								{
									"begin": 426,
									"end": 544,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 497,
									"end": 519,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "133"
								},
								{
									"begin": 513,
									"end": 518,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 497,
									"end": 519,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "85"
								},
								{
									"begin": 497,
									"end": 519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 497,
									"end": 519,
									"name": "tag",
									"source": 23,
									"value": "133"
								},
								{
									"begin": 497,
									"end": 519,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 490,
									"end": 495,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 487,
									"end": 520,
									"name": "EQ",
									"source": 23
								},
								{
									"begin": 477,
									"end": 538,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "134"
								},
								{
									"begin": 477,
									"end": 538,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 534,
									"end": 535,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 531,
									"end": 532,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 524,
									"end": 536,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 477,
									"end": 538,
									"name": "tag",
									"source": 23,
									"value": "134"
								},
								{
									"begin": 477,
									"end": 538,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 426,
									"end": 544,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 426,
									"end": 544,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 550,
									"end": 689,
									"name": "tag",
									"source": 23,
									"value": "87"
								},
								{
									"begin": 550,
									"end": 689,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 605,
									"end": 610,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 636,
									"end": 642,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 630,
									"end": 643,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 621,
									"end": 643,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 621,
									"end": 643,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 652,
									"end": 683,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "136"
								},
								{
									"begin": 677,
									"end": 682,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 652,
									"end": 683,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "86"
								},
								{
									"begin": 652,
									"end": 683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 652,
									"end": 683,
									"name": "tag",
									"source": 23,
									"value": "136"
								},
								{
									"begin": 652,
									"end": 683,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 550,
									"end": 689,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 550,
									"end": 689,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 550,
									"end": 689,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 550,
									"end": 689,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 550,
									"end": 689,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 695,
									"end": 772,
									"name": "tag",
									"source": 23,
									"value": "88"
								},
								{
									"begin": 695,
									"end": 772,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 732,
									"end": 739,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 761,
									"end": 766,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 750,
									"end": 766,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 750,
									"end": 766,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 695,
									"end": 772,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 695,
									"end": 772,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 695,
									"end": 772,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 695,
									"end": 772,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 778,
									"end": 900,
									"name": "tag",
									"source": 23,
									"value": "89"
								},
								{
									"begin": 778,
									"end": 900,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 851,
									"end": 875,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "139"
								},
								{
									"begin": 869,
									"end": 874,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 851,
									"end": 875,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "88"
								},
								{
									"begin": 851,
									"end": 875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 851,
									"end": 875,
									"name": "tag",
									"source": 23,
									"value": "139"
								},
								{
									"begin": 851,
									"end": 875,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 844,
									"end": 849,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 841,
									"end": 876,
									"name": "EQ",
									"source": 23
								},
								{
									"begin": 831,
									"end": 894,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "140"
								},
								{
									"begin": 831,
									"end": 894,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 887,
									"end": 888,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 880,
									"end": 892,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 831,
									"end": 894,
									"name": "tag",
									"source": 23,
									"value": "140"
								},
								{
									"begin": 831,
									"end": 894,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 778,
									"end": 900,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 778,
									"end": 900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 906,
									"end": 1049,
									"name": "tag",
									"source": 23,
									"value": "90"
								},
								{
									"begin": 906,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 963,
									"end": 968,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 988,
									"end": 1001,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 979,
									"end": 1001,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 979,
									"end": 1001,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1010,
									"end": 1043,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "142"
								},
								{
									"begin": 1037,
									"end": 1042,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1010,
									"end": 1043,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "89"
								},
								{
									"begin": 1010,
									"end": 1043,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1010,
									"end": 1043,
									"name": "tag",
									"source": 23,
									"value": "142"
								},
								{
									"begin": 1010,
									"end": 1043,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 906,
									"end": 1049,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 906,
									"end": 1049,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 906,
									"end": 1049,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 906,
									"end": 1049,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 906,
									"end": 1049,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1055,
									"end": 1172,
									"name": "tag",
									"source": 23,
									"value": "91"
								},
								{
									"begin": 1055,
									"end": 1172,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1161,
									"end": 1162,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 1154,
									"end": 1166,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 1178,
									"end": 1295,
									"name": "tag",
									"source": 23,
									"value": "92"
								},
								{
									"begin": 1178,
									"end": 1295,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1287,
									"end": 1288,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1284,
									"end": 1285,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 1277,
									"end": 1289,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 1301,
									"end": 1403,
									"name": "tag",
									"source": 23,
									"value": "93"
								},
								{
									"begin": 1301,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1342,
									"end": 1348,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1393,
									"end": 1395,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 1389,
									"end": 1396,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 1384,
									"end": 1386,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 1377,
									"end": 1382,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 1373,
									"end": 1387,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 1369,
									"end": 1397,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 1359,
									"end": 1397,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1359,
									"end": 1397,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1301,
									"end": 1403,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 1301,
									"end": 1403,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1301,
									"end": 1403,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1301,
									"end": 1403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1409,
									"end": 1589,
									"name": "tag",
									"source": 23,
									"value": "44"
								},
								{
									"begin": 1409,
									"end": 1589,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1457,
									"end": 1534,
									"name": "PUSH",
									"source": 23,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1454,
									"end": 1455,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1535,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 1554,
									"end": 1558,
									"name": "PUSH",
									"source": 23,
									"value": "41"
								},
								{
									"begin": 1551,
									"end": 1552,
									"name": "PUSH",
									"source": 23,
									"value": "4"
								},
								{
									"begin": 1544,
									"end": 1559,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 1578,
									"end": 1582,
									"name": "PUSH",
									"source": 23,
									"value": "24"
								},
								{
									"begin": 1575,
									"end": 1576,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1568,
									"end": 1583,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 1595,
									"end": 1876,
									"name": "tag",
									"source": 23,
									"value": "94"
								},
								{
									"begin": 1595,
									"end": 1876,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "148"
								},
								{
									"begin": 1700,
									"end": 1704,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "93"
								},
								{
									"begin": 1678,
									"end": 1705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "tag",
									"source": 23,
									"value": "148"
								},
								{
									"begin": 1678,
									"end": 1705,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1666,
									"end": 1706,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 1808,
									"end": 1814,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1796,
									"end": 1806,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 1793,
									"end": 1815,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 1772,
									"end": 1790,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1760,
									"end": 1770,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 1757,
									"end": 1791,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 1754,
									"end": 1816,
									"name": "OR",
									"source": 23
								},
								{
									"begin": 1751,
									"end": 1839,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 1751,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "149"
								},
								{
									"begin": 1751,
									"end": 1839,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 1819,
									"end": 1837,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "150"
								},
								{
									"begin": 1819,
									"end": 1837,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "44"
								},
								{
									"begin": 1819,
									"end": 1837,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1819,
									"end": 1837,
									"name": "tag",
									"source": 23,
									"value": "150"
								},
								{
									"begin": 1819,
									"end": 1837,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1751,
									"end": 1839,
									"name": "tag",
									"source": 23,
									"value": "149"
								},
								{
									"begin": 1751,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1859,
									"end": 1869,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 1855,
									"end": 1857,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 1848,
									"end": 1870,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 1638,
									"end": 1876,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1595,
									"end": 1876,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1595,
									"end": 1876,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1595,
									"end": 1876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1882,
									"end": 2011,
									"name": "tag",
									"source": 23,
									"value": "95"
								},
								{
									"begin": 1882,
									"end": 2011,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1916,
									"end": 1922,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 1943,
									"end": 1963,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "152"
								},
								{
									"begin": 1943,
									"end": 1963,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "82"
								},
								{
									"begin": 1943,
									"end": 1963,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1943,
									"end": 1963,
									"name": "tag",
									"source": 23,
									"value": "152"
								},
								{
									"begin": 1943,
									"end": 1963,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1933,
									"end": 1963,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1933,
									"end": 1963,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1972,
									"end": 2005,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "153"
								},
								{
									"begin": 2000,
									"end": 2004,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 1992,
									"end": 1998,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 1972,
									"end": 2005,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "94"
								},
								{
									"begin": 1972,
									"end": 2005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 1972,
									"end": 2005,
									"name": "tag",
									"source": 23,
									"value": "153"
								},
								{
									"begin": 1972,
									"end": 2005,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 1882,
									"end": 2011,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 1882,
									"end": 2011,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 1882,
									"end": 2011,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 1882,
									"end": 2011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2017,
									"end": 2325,
									"name": "tag",
									"source": 23,
									"value": "96"
								},
								{
									"begin": 2017,
									"end": 2325,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2079,
									"end": 2083,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 2169,
									"end": 2187,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2161,
									"end": 2167,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 2158,
									"end": 2188,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 2155,
									"end": 2211,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 2155,
									"end": 2211,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "155"
								},
								{
									"begin": 2155,
									"end": 2211,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 2191,
									"end": 2209,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "156"
								},
								{
									"begin": 2191,
									"end": 2209,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "44"
								},
								{
									"begin": 2191,
									"end": 2209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2191,
									"end": 2209,
									"name": "tag",
									"source": 23,
									"value": "156"
								},
								{
									"begin": 2191,
									"end": 2209,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2155,
									"end": 2211,
									"name": "tag",
									"source": 23,
									"value": "155"
								},
								{
									"begin": 2155,
									"end": 2211,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2229,
									"end": 2258,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "157"
								},
								{
									"begin": 2251,
									"end": 2257,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 2229,
									"end": 2258,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "93"
								},
								{
									"begin": 2229,
									"end": 2258,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2229,
									"end": 2258,
									"name": "tag",
									"source": 23,
									"value": "157"
								},
								{
									"begin": 2229,
									"end": 2258,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2221,
									"end": 2258,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 2221,
									"end": 2258,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2313,
									"end": 2317,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 2307,
									"end": 2311,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2303,
									"end": 2318,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 2295,
									"end": 2318,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 2295,
									"end": 2318,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2017,
									"end": 2325,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 2017,
									"end": 2325,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 2017,
									"end": 2325,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2017,
									"end": 2325,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2331,
									"end": 2470,
									"name": "tag",
									"source": 23,
									"value": "97"
								},
								{
									"begin": 2331,
									"end": 2470,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2420,
									"end": 2426,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 2415,
									"end": 2418,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2410,
									"end": 2413,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 2404,
									"end": 2427,
									"name": "MCOPY",
									"source": 23
								},
								{
									"begin": 2461,
									"end": 2462,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 2452,
									"end": 2458,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 2447,
									"end": 2450,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 2443,
									"end": 2459,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 2436,
									"end": 2463,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 2331,
									"end": 2470,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2331,
									"end": 2470,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2331,
									"end": 2470,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2331,
									"end": 2470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2476,
									"end": 2910,
									"name": "tag",
									"source": 23,
									"value": "98"
								},
								{
									"begin": 2476,
									"end": 2910,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 2590,
									"end": 2656,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "160"
								},
								{
									"begin": 2606,
									"end": 2655,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "161"
								},
								{
									"begin": 2648,
									"end": 2654,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 2606,
									"end": 2655,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "96"
								},
								{
									"begin": 2606,
									"end": 2655,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2606,
									"end": 2655,
									"name": "tag",
									"source": 23,
									"value": "161"
								},
								{
									"begin": 2606,
									"end": 2655,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2590,
									"end": 2656,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "95"
								},
								{
									"begin": 2590,
									"end": 2656,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2590,
									"end": 2656,
									"name": "tag",
									"source": 23,
									"value": "160"
								},
								{
									"begin": 2590,
									"end": 2656,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2581,
									"end": 2656,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 2581,
									"end": 2656,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2679,
									"end": 2685,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 2672,
									"end": 2677,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2665,
									"end": 2686,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 2717,
									"end": 2721,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 2710,
									"end": 2715,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 2706,
									"end": 2722,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 2755,
									"end": 2758,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 2746,
									"end": 2752,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 2741,
									"end": 2744,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 2737,
									"end": 2753,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 2734,
									"end": 2759,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 2731,
									"end": 2843,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 2731,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "162"
								},
								{
									"begin": 2731,
									"end": 2843,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 2762,
									"end": 2841,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "163"
								},
								{
									"begin": 2762,
									"end": 2841,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "92"
								},
								{
									"begin": 2762,
									"end": 2841,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2762,
									"end": 2841,
									"name": "tag",
									"source": 23,
									"value": "163"
								},
								{
									"begin": 2762,
									"end": 2841,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2731,
									"end": 2843,
									"name": "tag",
									"source": 23,
									"value": "162"
								},
								{
									"begin": 2731,
									"end": 2843,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2852,
									"end": 2904,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "164"
								},
								{
									"begin": 2897,
									"end": 2903,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 2892,
									"end": 2895,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 2887,
									"end": 2890,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 2852,
									"end": 2904,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "97"
								},
								{
									"begin": 2852,
									"end": 2904,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2852,
									"end": 2904,
									"name": "tag",
									"source": 23,
									"value": "164"
								},
								{
									"begin": 2852,
									"end": 2904,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2571,
									"end": 2910,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2476,
									"end": 2910,
									"name": "SWAP4",
									"source": 23
								},
								{
									"begin": 2476,
									"end": 2910,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 2476,
									"end": 2910,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2476,
									"end": 2910,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2476,
									"end": 2910,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2476,
									"end": 2910,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 2930,
									"end": 3285,
									"name": "tag",
									"source": 23,
									"value": "99"
								},
								{
									"begin": 2930,
									"end": 3285,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 2997,
									"end": 3002,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 3046,
									"end": 3049,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 3039,
									"end": 3043,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 3031,
									"end": 3037,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 3027,
									"end": 3044,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3023,
									"end": 3050,
									"name": "SLT",
									"source": 23
								},
								{
									"begin": 3013,
									"end": 3135,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "166"
								},
								{
									"begin": 3013,
									"end": 3135,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 3054,
									"end": 3133,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "167"
								},
								{
									"begin": 3054,
									"end": 3133,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "91"
								},
								{
									"begin": 3054,
									"end": 3133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3054,
									"end": 3133,
									"name": "tag",
									"source": 23,
									"value": "167"
								},
								{
									"begin": 3054,
									"end": 3133,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3013,
									"end": 3135,
									"name": "tag",
									"source": 23,
									"value": "166"
								},
								{
									"begin": 3013,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3164,
									"end": 3170,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 3158,
									"end": 3171,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 3189,
									"end": 3279,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "168"
								},
								{
									"begin": 3275,
									"end": 3278,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 3267,
									"end": 3273,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 3260,
									"end": 3264,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 3252,
									"end": 3258,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 3248,
									"end": 3265,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3189,
									"end": 3279,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "98"
								},
								{
									"begin": 3189,
									"end": 3279,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3189,
									"end": 3279,
									"name": "tag",
									"source": 23,
									"value": "168"
								},
								{
									"begin": 3189,
									"end": 3279,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3180,
									"end": 3279,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 3180,
									"end": 3279,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3003,
									"end": 3285,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2930,
									"end": 3285,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 2930,
									"end": 3285,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 2930,
									"end": 3285,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2930,
									"end": 3285,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 2930,
									"end": 3285,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3291,
									"end": 4610,
									"name": "tag",
									"source": 23,
									"value": "3"
								},
								{
									"begin": 3291,
									"end": 4610,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3415,
									"end": 3421,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 3423,
									"end": 3429,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 3431,
									"end": 3437,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 3439,
									"end": 3445,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 3447,
									"end": 3453,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 3496,
									"end": 3499,
									"name": "PUSH",
									"source": 23,
									"value": "A0"
								},
								{
									"begin": 3484,
									"end": 3493,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 3475,
									"end": 3482,
									"name": "DUP9",
									"source": 23
								},
								{
									"begin": 3471,
									"end": 3494,
									"name": "SUB",
									"source": 23
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "SLT",
									"source": 23
								},
								{
									"begin": 3464,
									"end": 3584,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 3464,
									"end": 3584,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "170"
								},
								{
									"begin": 3464,
									"end": 3584,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 3503,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "171"
								},
								{
									"begin": 3503,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "83"
								},
								{
									"begin": 3503,
									"end": 3582,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3503,
									"end": 3582,
									"name": "tag",
									"source": 23,
									"value": "171"
								},
								{
									"begin": 3503,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3464,
									"end": 3584,
									"name": "tag",
									"source": 23,
									"value": "170"
								},
								{
									"begin": 3464,
									"end": 3584,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3623,
									"end": 3624,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 3648,
									"end": 3710,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "172"
								},
								{
									"begin": 3702,
									"end": 3709,
									"name": "DUP9",
									"source": 23
								},
								{
									"begin": 3693,
									"end": 3699,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 3682,
									"end": 3691,
									"name": "DUP10",
									"source": 23
								},
								{
									"begin": 3678,
									"end": 3700,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3648,
									"end": 3710,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "87"
								},
								{
									"begin": 3648,
									"end": 3710,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3648,
									"end": 3710,
									"name": "tag",
									"source": 23,
									"value": "172"
								},
								{
									"begin": 3648,
									"end": 3710,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3638,
									"end": 3710,
									"name": "SWAP6",
									"source": 23
								},
								{
									"begin": 3638,
									"end": 3710,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3594,
									"end": 3720,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3759,
									"end": 3761,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 3785,
									"end": 3849,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "173"
								},
								{
									"begin": 3841,
									"end": 3848,
									"name": "DUP9",
									"source": 23
								},
								{
									"begin": 3832,
									"end": 3838,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 3821,
									"end": 3830,
									"name": "DUP10",
									"source": 23
								},
								{
									"begin": 3817,
									"end": 3839,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3785,
									"end": 3849,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "90"
								},
								{
									"begin": 3785,
									"end": 3849,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3785,
									"end": 3849,
									"name": "tag",
									"source": 23,
									"value": "173"
								},
								{
									"begin": 3785,
									"end": 3849,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3775,
									"end": 3849,
									"name": "SWAP5",
									"source": 23
								},
								{
									"begin": 3775,
									"end": 3849,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3730,
									"end": 3859,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3919,
									"end": 3921,
									"name": "PUSH",
									"source": 23,
									"value": "40"
								},
								{
									"begin": 3908,
									"end": 3917,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 3904,
									"end": 3922,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 3898,
									"end": 3923,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 3950,
									"end": 3968,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3942,
									"end": 3948,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 3939,
									"end": 3969,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 3936,
									"end": 4053,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 3936,
									"end": 4053,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "174"
								},
								{
									"begin": 3936,
									"end": 4053,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 3972,
									"end": 4051,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "175"
								},
								{
									"begin": 3972,
									"end": 4051,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "84"
								},
								{
									"begin": 3972,
									"end": 4051,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 3972,
									"end": 4051,
									"name": "tag",
									"source": 23,
									"value": "175"
								},
								{
									"begin": 3972,
									"end": 4051,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 3936,
									"end": 4053,
									"name": "tag",
									"source": 23,
									"value": "174"
								},
								{
									"begin": 3936,
									"end": 4053,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4077,
									"end": 4151,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "176"
								},
								{
									"begin": 4143,
									"end": 4150,
									"name": "DUP9",
									"source": 23
								},
								{
									"begin": 4134,
									"end": 4140,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 4123,
									"end": 4132,
									"name": "DUP10",
									"source": 23
								},
								{
									"begin": 4119,
									"end": 4141,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 4077,
									"end": 4151,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "99"
								},
								{
									"begin": 4077,
									"end": 4151,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4077,
									"end": 4151,
									"name": "tag",
									"source": 23,
									"value": "176"
								},
								{
									"begin": 4077,
									"end": 4151,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4067,
									"end": 4151,
									"name": "SWAP4",
									"source": 23
								},
								{
									"begin": 4067,
									"end": 4151,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3869,
									"end": 4161,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4221,
									"end": 4223,
									"name": "PUSH",
									"source": 23,
									"value": "60"
								},
								{
									"begin": 4210,
									"end": 4219,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 4206,
									"end": 4224,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 4200,
									"end": 4225,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 4252,
									"end": 4270,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4244,
									"end": 4250,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 4241,
									"end": 4271,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 4238,
									"end": 4355,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 4238,
									"end": 4355,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "177"
								},
								{
									"begin": 4238,
									"end": 4355,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 4274,
									"end": 4353,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "178"
								},
								{
									"begin": 4274,
									"end": 4353,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "84"
								},
								{
									"begin": 4274,
									"end": 4353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4274,
									"end": 4353,
									"name": "tag",
									"source": 23,
									"value": "178"
								},
								{
									"begin": 4274,
									"end": 4353,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4238,
									"end": 4355,
									"name": "tag",
									"source": 23,
									"value": "177"
								},
								{
									"begin": 4238,
									"end": 4355,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4379,
									"end": 4453,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "179"
								},
								{
									"begin": 4445,
									"end": 4452,
									"name": "DUP9",
									"source": 23
								},
								{
									"begin": 4436,
									"end": 4442,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 4425,
									"end": 4434,
									"name": "DUP10",
									"source": 23
								},
								{
									"begin": 4421,
									"end": 4443,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 4379,
									"end": 4453,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "99"
								},
								{
									"begin": 4379,
									"end": 4453,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4379,
									"end": 4453,
									"name": "tag",
									"source": 23,
									"value": "179"
								},
								{
									"begin": 4379,
									"end": 4453,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4369,
									"end": 4453,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 4369,
									"end": 4453,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4171,
									"end": 4463,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4502,
									"end": 4505,
									"name": "PUSH",
									"source": 23,
									"value": "80"
								},
								{
									"begin": 4529,
									"end": 4593,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "180"
								},
								{
									"begin": 4585,
									"end": 4592,
									"name": "DUP9",
									"source": 23
								},
								{
									"begin": 4576,
									"end": 4582,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 4565,
									"end": 4574,
									"name": "DUP10",
									"source": 23
								},
								{
									"begin": 4561,
									"end": 4583,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 4529,
									"end": 4593,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "90"
								},
								{
									"begin": 4529,
									"end": 4593,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4529,
									"end": 4593,
									"name": "tag",
									"source": 23,
									"value": "180"
								},
								{
									"begin": 4529,
									"end": 4593,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4519,
									"end": 4593,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 4519,
									"end": 4593,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4473,
									"end": 4603,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3291,
									"end": 4610,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 3291,
									"end": 4610,
									"name": "SWAP6",
									"source": 23
								},
								{
									"begin": 3291,
									"end": 4610,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3291,
									"end": 4610,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 3291,
									"end": 4610,
									"name": "SWAP6",
									"source": 23
								},
								{
									"begin": 3291,
									"end": 4610,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 3291,
									"end": 4610,
									"name": "SWAP4",
									"source": 23
								},
								{
									"begin": 3291,
									"end": 4610,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 3291,
									"end": 4610,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4616,
									"end": 4715,
									"name": "tag",
									"source": 23,
									"value": "100"
								},
								{
									"begin": 4616,
									"end": 4715,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4668,
									"end": 4674,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 4702,
									"end": 4707,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 4696,
									"end": 4708,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 4686,
									"end": 4708,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 4686,
									"end": 4708,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4616,
									"end": 4715,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 4616,
									"end": 4715,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 4616,
									"end": 4715,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4616,
									"end": 4715,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 4721,
									"end": 4901,
									"name": "tag",
									"source": 23,
									"value": "101"
								},
								{
									"begin": 4721,
									"end": 4901,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4769,
									"end": 4846,
									"name": "PUSH",
									"source": 23,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4766,
									"end": 4767,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 4759,
									"end": 4847,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 4866,
									"end": 4870,
									"name": "PUSH",
									"source": 23,
									"value": "22"
								},
								{
									"begin": 4863,
									"end": 4864,
									"name": "PUSH",
									"source": 23,
									"value": "4"
								},
								{
									"begin": 4856,
									"end": 4871,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 4890,
									"end": 4894,
									"name": "PUSH",
									"source": 23,
									"value": "24"
								},
								{
									"begin": 4887,
									"end": 4888,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 4880,
									"end": 4895,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 4907,
									"end": 5227,
									"name": "tag",
									"source": 23,
									"value": "27"
								},
								{
									"begin": 4907,
									"end": 5227,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4951,
									"end": 4957,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 4988,
									"end": 4989,
									"name": "PUSH",
									"source": 23,
									"value": "2"
								},
								{
									"begin": 4982,
									"end": 4986,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 4978,
									"end": 4990,
									"name": "DIV",
									"source": 23
								},
								{
									"begin": 4968,
									"end": 4990,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 4968,
									"end": 4990,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5035,
									"end": 5036,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 5029,
									"end": 5033,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 5025,
									"end": 5037,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 5056,
									"end": 5074,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 5046,
									"end": 5127,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "184"
								},
								{
									"begin": 5046,
									"end": 5127,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 5112,
									"end": 5116,
									"name": "PUSH",
									"source": 23,
									"value": "7F"
								},
								{
									"begin": 5104,
									"end": 5110,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 5100,
									"end": 5117,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 5090,
									"end": 5117,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 5090,
									"end": 5117,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5046,
									"end": 5127,
									"name": "tag",
									"source": 23,
									"value": "184"
								},
								{
									"begin": 5046,
									"end": 5127,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5174,
									"end": 5176,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 5166,
									"end": 5172,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 5163,
									"end": 5177,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 5143,
									"end": 5161,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 5140,
									"end": 5178,
									"name": "SUB",
									"source": 23
								},
								{
									"begin": 5137,
									"end": 5221,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "185"
								},
								{
									"begin": 5137,
									"end": 5221,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 5193,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "186"
								},
								{
									"begin": 5193,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "101"
								},
								{
									"begin": 5193,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5193,
									"end": 5211,
									"name": "tag",
									"source": 23,
									"value": "186"
								},
								{
									"begin": 5193,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5137,
									"end": 5221,
									"name": "tag",
									"source": 23,
									"value": "185"
								},
								{
									"begin": 5137,
									"end": 5221,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 4958,
									"end": 5227,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4907,
									"end": 5227,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 4907,
									"end": 5227,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 4907,
									"end": 5227,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 4907,
									"end": 5227,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5233,
									"end": 5374,
									"name": "tag",
									"source": 23,
									"value": "102"
								},
								{
									"begin": 5233,
									"end": 5374,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5282,
									"end": 5286,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 5305,
									"end": 5308,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 5297,
									"end": 5308,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 5297,
									"end": 5308,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5328,
									"end": 5331,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 5325,
									"end": 5326,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 5318,
									"end": 5332,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 5362,
									"end": 5366,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 5359,
									"end": 5360,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 5349,
									"end": 5367,
									"name": "KECCAK256",
									"source": 23
								},
								{
									"begin": 5341,
									"end": 5367,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 5341,
									"end": 5367,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5233,
									"end": 5374,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 5233,
									"end": 5374,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 5233,
									"end": 5374,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5233,
									"end": 5374,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5380,
									"end": 5473,
									"name": "tag",
									"source": 23,
									"value": "103"
								},
								{
									"begin": 5380,
									"end": 5473,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5417,
									"end": 5423,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 5464,
									"end": 5466,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 5459,
									"end": 5461,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 5452,
									"end": 5457,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 5448,
									"end": 5462,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 5444,
									"end": 5467,
									"name": "DIV",
									"source": 23
								},
								{
									"begin": 5434,
									"end": 5467,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 5434,
									"end": 5467,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5380,
									"end": 5473,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 5380,
									"end": 5473,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 5380,
									"end": 5473,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5380,
									"end": 5473,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5479,
									"end": 5586,
									"name": "tag",
									"source": 23,
									"value": "104"
								},
								{
									"begin": 5479,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5523,
									"end": 5531,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 5567,
									"end": 5571,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 5563,
									"end": 5579,
									"name": "SHL",
									"source": 23
								},
								{
									"begin": 5542,
									"end": 5579,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 5542,
									"end": 5579,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5479,
									"end": 5586,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 5479,
									"end": 5586,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 5479,
									"end": 5586,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5479,
									"end": 5586,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5479,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5592,
									"end": 5985,
									"name": "tag",
									"source": 23,
									"value": "105"
								},
								{
									"begin": 5592,
									"end": 5985,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5661,
									"end": 5667,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 5711,
									"end": 5712,
									"name": "PUSH",
									"source": 23,
									"value": "8"
								},
								{
									"begin": 5699,
									"end": 5709,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 5695,
									"end": 5713,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 5734,
									"end": 5831,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "191"
								},
								{
									"begin": 5764,
									"end": 5830,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5753,
									"end": 5762,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 5734,
									"end": 5831,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "104"
								},
								{
									"begin": 5734,
									"end": 5831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5734,
									"end": 5831,
									"name": "tag",
									"source": 23,
									"value": "191"
								},
								{
									"begin": 5734,
									"end": 5831,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5852,
									"end": 5891,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "192"
								},
								{
									"begin": 5882,
									"end": 5890,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 5871,
									"end": 5880,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 5852,
									"end": 5891,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "104"
								},
								{
									"begin": 5852,
									"end": 5891,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5852,
									"end": 5891,
									"name": "tag",
									"source": 23,
									"value": "192"
								},
								{
									"begin": 5852,
									"end": 5891,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 5840,
									"end": 5891,
									"name": "SWAP6",
									"source": 23
								},
								{
									"begin": 5840,
									"end": 5891,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5924,
									"end": 5928,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 5920,
									"end": 5929,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 5913,
									"end": 5918,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 5909,
									"end": 5930,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 5900,
									"end": 5930,
									"name": "SWAP4",
									"source": 23
								},
								{
									"begin": 5900,
									"end": 5930,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5973,
									"end": 5977,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 5963,
									"end": 5971,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 5959,
									"end": 5978,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 5952,
									"end": 5957,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 5949,
									"end": 5979,
									"name": "OR",
									"source": 23
								},
								{
									"begin": 5939,
									"end": 5979,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 5939,
									"end": 5979,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5668,
									"end": 5985,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5668,
									"end": 5985,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5592,
									"end": 5985,
									"name": "SWAP4",
									"source": 23
								},
								{
									"begin": 5592,
									"end": 5985,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 5592,
									"end": 5985,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5592,
									"end": 5985,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5592,
									"end": 5985,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5592,
									"end": 5985,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 5991,
									"end": 6051,
									"name": "tag",
									"source": 23,
									"value": "106"
								},
								{
									"begin": 5991,
									"end": 6051,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6019,
									"end": 6022,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 6040,
									"end": 6045,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 6033,
									"end": 6045,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 6033,
									"end": 6045,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5991,
									"end": 6051,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 5991,
									"end": 6051,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 5991,
									"end": 6051,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 5991,
									"end": 6051,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6057,
									"end": 6199,
									"name": "tag",
									"source": 23,
									"value": "107"
								},
								{
									"begin": 6057,
									"end": 6199,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6107,
									"end": 6116,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 6140,
									"end": 6193,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "195"
								},
								{
									"begin": 6158,
									"end": 6192,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "196"
								},
								{
									"begin": 6167,
									"end": 6191,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "197"
								},
								{
									"begin": 6185,
									"end": 6190,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 6167,
									"end": 6191,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "88"
								},
								{
									"begin": 6167,
									"end": 6191,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6167,
									"end": 6191,
									"name": "tag",
									"source": 23,
									"value": "197"
								},
								{
									"begin": 6167,
									"end": 6191,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6158,
									"end": 6192,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "106"
								},
								{
									"begin": 6158,
									"end": 6192,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6158,
									"end": 6192,
									"name": "tag",
									"source": 23,
									"value": "196"
								},
								{
									"begin": 6158,
									"end": 6192,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6140,
									"end": 6193,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "88"
								},
								{
									"begin": 6140,
									"end": 6193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6140,
									"end": 6193,
									"name": "tag",
									"source": 23,
									"value": "195"
								},
								{
									"begin": 6140,
									"end": 6193,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6127,
									"end": 6193,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 6127,
									"end": 6193,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6057,
									"end": 6199,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 6057,
									"end": 6199,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 6057,
									"end": 6199,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6057,
									"end": 6199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6205,
									"end": 6280,
									"name": "tag",
									"source": 23,
									"value": "108"
								},
								{
									"begin": 6205,
									"end": 6280,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6248,
									"end": 6251,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 6269,
									"end": 6274,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 6262,
									"end": 6274,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 6262,
									"end": 6274,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6205,
									"end": 6280,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 6205,
									"end": 6280,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 6205,
									"end": 6280,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6205,
									"end": 6280,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6286,
									"end": 6555,
									"name": "tag",
									"source": 23,
									"value": "109"
								},
								{
									"begin": 6286,
									"end": 6555,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6396,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "200"
								},
								{
									"begin": 6427,
									"end": 6434,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 6396,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "107"
								},
								{
									"begin": 6396,
									"end": 6435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6396,
									"end": 6435,
									"name": "tag",
									"source": 23,
									"value": "200"
								},
								{
									"begin": 6396,
									"end": 6435,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6457,
									"end": 6548,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "201"
								},
								{
									"begin": 6506,
									"end": 6547,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "202"
								},
								{
									"begin": 6530,
									"end": 6546,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 6506,
									"end": 6547,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "108"
								},
								{
									"begin": 6506,
									"end": 6547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6506,
									"end": 6547,
									"name": "tag",
									"source": 23,
									"value": "202"
								},
								{
									"begin": 6506,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6498,
									"end": 6504,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 6491,
									"end": 6495,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 6485,
									"end": 6496,
									"name": "SLOAD",
									"source": 23
								},
								{
									"begin": 6457,
									"end": 6548,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "105"
								},
								{
									"begin": 6457,
									"end": 6548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6457,
									"end": 6548,
									"name": "tag",
									"source": 23,
									"value": "201"
								},
								{
									"begin": 6457,
									"end": 6548,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6451,
									"end": 6455,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 6444,
									"end": 6549,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 6362,
									"end": 6555,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6286,
									"end": 6555,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6286,
									"end": 6555,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6286,
									"end": 6555,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6286,
									"end": 6555,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6561,
									"end": 6634,
									"name": "tag",
									"source": 23,
									"value": "110"
								},
								{
									"begin": 6561,
									"end": 6634,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6606,
									"end": 6609,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 6561,
									"end": 6634,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 6561,
									"end": 6634,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6640,
									"end": 6829,
									"name": "tag",
									"source": 23,
									"value": "111"
								},
								{
									"begin": 6640,
									"end": 6829,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6717,
									"end": 6749,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "205"
								},
								{
									"begin": 6717,
									"end": 6749,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "110"
								},
								{
									"begin": 6717,
									"end": 6749,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6717,
									"end": 6749,
									"name": "tag",
									"source": 23,
									"value": "205"
								},
								{
									"begin": 6717,
									"end": 6749,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6758,
									"end": 6823,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "206"
								},
								{
									"begin": 6816,
									"end": 6822,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 6808,
									"end": 6814,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 6802,
									"end": 6806,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 6758,
									"end": 6823,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "109"
								},
								{
									"begin": 6758,
									"end": 6823,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6758,
									"end": 6823,
									"name": "tag",
									"source": 23,
									"value": "206"
								},
								{
									"begin": 6758,
									"end": 6823,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6693,
									"end": 6829,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6640,
									"end": 6829,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6640,
									"end": 6829,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6640,
									"end": 6829,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6835,
									"end": 7021,
									"name": "tag",
									"source": 23,
									"value": "112"
								},
								{
									"begin": 6835,
									"end": 7021,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6895,
									"end": 7015,
									"name": "tag",
									"source": 23,
									"value": "208"
								},
								{
									"begin": 6895,
									"end": 7015,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6912,
									"end": 6915,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 6905,
									"end": 6910,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 6902,
									"end": 6916,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 6895,
									"end": 7015,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 6895,
									"end": 7015,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "210"
								},
								{
									"begin": 6895,
									"end": 7015,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 6966,
									"end": 7005,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "211"
								},
								{
									"begin": 7003,
									"end": 7004,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 6996,
									"end": 7001,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 6966,
									"end": 7005,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "111"
								},
								{
									"begin": 6966,
									"end": 7005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6966,
									"end": 7005,
									"name": "tag",
									"source": 23,
									"value": "211"
								},
								{
									"begin": 6966,
									"end": 7005,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6939,
									"end": 6940,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 6932,
									"end": 6937,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 6928,
									"end": 6941,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 6919,
									"end": 6941,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 6919,
									"end": 6941,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6895,
									"end": 7015,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "208"
								},
								{
									"begin": 6895,
									"end": 7015,
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 6895,
									"end": 7015,
									"name": "tag",
									"source": 23,
									"value": "210"
								},
								{
									"begin": 6895,
									"end": 7015,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 6835,
									"end": 7021,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6835,
									"end": 7021,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 6835,
									"end": 7021,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7027,
									"end": 7570,
									"name": "tag",
									"source": 23,
									"value": "113"
								},
								{
									"begin": 7027,
									"end": 7570,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7128,
									"end": 7130,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 7120,
									"end": 7131,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 7117,
									"end": 7563,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 7117,
									"end": 7563,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "213"
								},
								{
									"begin": 7117,
									"end": 7563,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 7162,
									"end": 7200,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "214"
								},
								{
									"begin": 7194,
									"end": 7199,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 7162,
									"end": 7200,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "102"
								},
								{
									"begin": 7162,
									"end": 7200,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7162,
									"end": 7200,
									"name": "tag",
									"source": 23,
									"value": "214"
								},
								{
									"begin": 7162,
									"end": 7200,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7246,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "215"
								},
								{
									"begin": 7264,
									"end": 7274,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 7246,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "103"
								},
								{
									"begin": 7246,
									"end": 7275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7246,
									"end": 7275,
									"name": "tag",
									"source": 23,
									"value": "215"
								},
								{
									"begin": 7246,
									"end": 7275,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7236,
									"end": 7244,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 7232,
									"end": 7276,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 7429,
									"end": 7431,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 7417,
									"end": 7427,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 7414,
									"end": 7432,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 7411,
									"end": 7460,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 7411,
									"end": 7460,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "216"
								},
								{
									"begin": 7411,
									"end": 7460,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 7450,
									"end": 7458,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 7435,
									"end": 7458,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 7435,
									"end": 7458,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7411,
									"end": 7460,
									"name": "tag",
									"source": 23,
									"value": "216"
								},
								{
									"begin": 7411,
									"end": 7460,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7473,
									"end": 7553,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "217"
								},
								{
									"begin": 7529,
									"end": 7551,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "218"
								},
								{
									"begin": 7547,
									"end": 7550,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 7529,
									"end": 7551,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "103"
								},
								{
									"begin": 7529,
									"end": 7551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7529,
									"end": 7551,
									"name": "tag",
									"source": 23,
									"value": "218"
								},
								{
									"begin": 7529,
									"end": 7551,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7519,
									"end": 7527,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 7515,
									"end": 7552,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 7502,
									"end": 7513,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 7473,
									"end": 7553,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "112"
								},
								{
									"begin": 7473,
									"end": 7553,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7473,
									"end": 7553,
									"name": "tag",
									"source": 23,
									"value": "217"
								},
								{
									"begin": 7473,
									"end": 7553,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7132,
									"end": 7563,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7132,
									"end": 7563,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7117,
									"end": 7563,
									"name": "tag",
									"source": 23,
									"value": "213"
								},
								{
									"begin": 7117,
									"end": 7563,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7027,
									"end": 7570,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7027,
									"end": 7570,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7027,
									"end": 7570,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7027,
									"end": 7570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7576,
									"end": 7693,
									"name": "tag",
									"source": 23,
									"value": "114"
								},
								{
									"begin": 7576,
									"end": 7693,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7630,
									"end": 7638,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 7680,
									"end": 7685,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 7674,
									"end": 7678,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 7670,
									"end": 7686,
									"name": "SHR",
									"source": 23
								},
								{
									"begin": 7649,
									"end": 7686,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 7649,
									"end": 7686,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7576,
									"end": 7693,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 7576,
									"end": 7693,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 7576,
									"end": 7693,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7576,
									"end": 7693,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7576,
									"end": 7693,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7699,
									"end": 7868,
									"name": "tag",
									"source": 23,
									"value": "115"
								},
								{
									"begin": 7699,
									"end": 7868,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7743,
									"end": 7749,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 7776,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "221"
								},
								{
									"begin": 7824,
									"end": 7825,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 7820,
									"end": 7826,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 7812,
									"end": 7817,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 7809,
									"end": 7810,
									"name": "PUSH",
									"source": 23,
									"value": "8"
								},
								{
									"begin": 7805,
									"end": 7818,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 7776,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "114"
								},
								{
									"begin": 7776,
									"end": 7827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7776,
									"end": 7827,
									"name": "tag",
									"source": 23,
									"value": "221"
								},
								{
									"begin": 7776,
									"end": 7827,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7772,
									"end": 7828,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 7857,
									"end": 7861,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 7851,
									"end": 7855,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 7847,
									"end": 7862,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 7837,
									"end": 7862,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 7837,
									"end": 7862,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7750,
									"end": 7868,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7699,
									"end": 7868,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 7699,
									"end": 7868,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 7699,
									"end": 7868,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7699,
									"end": 7868,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7699,
									"end": 7868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 7873,
									"end": 8168,
									"name": "tag",
									"source": 23,
									"value": "116"
								},
								{
									"begin": 7873,
									"end": 8168,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 7949,
									"end": 7953,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 8095,
									"end": 8124,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "223"
								},
								{
									"begin": 8120,
									"end": 8123,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 8114,
									"end": 8118,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 8095,
									"end": 8124,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "115"
								},
								{
									"begin": 8095,
									"end": 8124,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 8095,
									"end": 8124,
									"name": "tag",
									"source": 23,
									"value": "223"
								},
								{
									"begin": 8095,
									"end": 8124,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8087,
									"end": 8124,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 8087,
									"end": 8124,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8157,
									"end": 8160,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 8154,
									"end": 8155,
									"name": "PUSH",
									"source": 23,
									"value": "2"
								},
								{
									"begin": 8150,
									"end": 8161,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 8144,
									"end": 8148,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 8141,
									"end": 8162,
									"name": "OR",
									"source": 23
								},
								{
									"begin": 8133,
									"end": 8162,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 8133,
									"end": 8162,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7873,
									"end": 8168,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 7873,
									"end": 8168,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 7873,
									"end": 8168,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7873,
									"end": 8168,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 7873,
									"end": 8168,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 8173,
									"end": 9568,
									"name": "tag",
									"source": 23,
									"value": "7"
								},
								{
									"begin": 8173,
									"end": 9568,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8290,
									"end": 8327,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "225"
								},
								{
									"begin": 8323,
									"end": 8326,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 8290,
									"end": 8327,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "100"
								},
								{
									"begin": 8290,
									"end": 8327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 8290,
									"end": 8327,
									"name": "tag",
									"source": 23,
									"value": "225"
								},
								{
									"begin": 8290,
									"end": 8327,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8392,
									"end": 8410,
									"name": "PUSH",
									"source": 23,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8384,
									"end": 8390,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 8381,
									"end": 8411,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 8378,
									"end": 8434,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 8378,
									"end": 8434,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "226"
								},
								{
									"begin": 8378,
									"end": 8434,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 8414,
									"end": 8432,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "227"
								},
								{
									"begin": 8414,
									"end": 8432,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "44"
								},
								{
									"begin": 8414,
									"end": 8432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 8414,
									"end": 8432,
									"name": "tag",
									"source": 23,
									"value": "227"
								},
								{
									"begin": 8414,
									"end": 8432,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8378,
									"end": 8434,
									"name": "tag",
									"source": 23,
									"value": "226"
								},
								{
									"begin": 8378,
									"end": 8434,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8458,
									"end": 8496,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "228"
								},
								{
									"begin": 8490,
									"end": 8494,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 8484,
									"end": 8495,
									"name": "SLOAD",
									"source": 23
								},
								{
									"begin": 8458,
									"end": 8496,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "27"
								},
								{
									"begin": 8458,
									"end": 8496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 8458,
									"end": 8496,
									"name": "tag",
									"source": 23,
									"value": "228"
								},
								{
									"begin": 8458,
									"end": 8496,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8543,
									"end": 8610,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "229"
								},
								{
									"begin": 8603,
									"end": 8609,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 8595,
									"end": 8601,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 8589,
									"end": 8593,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 8543,
									"end": 8610,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "113"
								},
								{
									"begin": 8543,
									"end": 8610,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 8543,
									"end": 8610,
									"name": "tag",
									"source": 23,
									"value": "229"
								},
								{
									"begin": 8543,
									"end": 8610,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8637,
									"end": 8638,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 8661,
									"end": 8665,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 8648,
									"end": 8665,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 8648,
									"end": 8665,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8693,
									"end": 8695,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 8685,
									"end": 8691,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 8682,
									"end": 8696,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 8710,
									"end": 8711,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 8705,
									"end": 9323,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 8705,
									"end": 9323,
									"name": "EQ",
									"source": 23
								},
								{
									"begin": 8705,
									"end": 9323,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "231"
								},
								{
									"begin": 8705,
									"end": 9323,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 9367,
									"end": 9368,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 9384,
									"end": 9390,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 9381,
									"end": 9458,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 9381,
									"end": 9458,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "232"
								},
								{
									"begin": 9381,
									"end": 9458,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 9433,
									"end": 9442,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 9428,
									"end": 9431,
									"name": "DUP8",
									"source": 23
								},
								{
									"begin": 9424,
									"end": 9443,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 9418,
									"end": 9444,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 9409,
									"end": 9444,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 9409,
									"end": 9444,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9381,
									"end": 9458,
									"name": "tag",
									"source": 23,
									"value": "232"
								},
								{
									"begin": 9381,
									"end": 9458,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9484,
									"end": 9551,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "233"
								},
								{
									"begin": 9544,
									"end": 9550,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 9537,
									"end": 9542,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 9484,
									"end": 9551,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "116"
								},
								{
									"begin": 9484,
									"end": 9551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 9484,
									"end": 9551,
									"name": "tag",
									"source": 23,
									"value": "233"
								},
								{
									"begin": 9484,
									"end": 9551,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9478,
									"end": 9482,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 9471,
									"end": 9552,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 9340,
									"end": 9562,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8675,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "230"
								},
								{
									"begin": 8675,
									"end": 9562,
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 8705,
									"end": 9323,
									"name": "tag",
									"source": 23,
									"value": "231"
								},
								{
									"begin": 8705,
									"end": 9323,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8757,
									"end": 8761,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 8753,
									"end": 8762,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 8745,
									"end": 8751,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 8741,
									"end": 8763,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 8791,
									"end": 8828,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "234"
								},
								{
									"begin": 8823,
									"end": 8827,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 8791,
									"end": 8828,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "102"
								},
								{
									"begin": 8791,
									"end": 8828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 8791,
									"end": 8828,
									"name": "tag",
									"source": 23,
									"value": "234"
								},
								{
									"begin": 8791,
									"end": 8828,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8850,
									"end": 8851,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 8864,
									"end": 9072,
									"name": "tag",
									"source": 23,
									"value": "235"
								},
								{
									"begin": 8864,
									"end": 9072,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8878,
									"end": 8885,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 8875,
									"end": 8876,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 8872,
									"end": 8886,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 8864,
									"end": 9072,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 8864,
									"end": 9072,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "237"
								},
								{
									"begin": 8864,
									"end": 9072,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 8957,
									"end": 8966,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 8952,
									"end": 8955,
									"name": "DUP10",
									"source": 23
								},
								{
									"begin": 8948,
									"end": 8967,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 8942,
									"end": 8968,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 8934,
									"end": 8940,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 8927,
									"end": 8969,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 9008,
									"end": 9009,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 9000,
									"end": 9006,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 8996,
									"end": 9010,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 8986,
									"end": 9010,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 8986,
									"end": 9010,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9055,
									"end": 9057,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 9044,
									"end": 9053,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 9040,
									"end": 9058,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 9027,
									"end": 9058,
									"name": "SWAP5",
									"source": 23
								},
								{
									"begin": 9027,
									"end": 9058,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8901,
									"end": 8905,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 8898,
									"end": 8899,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 8894,
									"end": 8906,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 8889,
									"end": 8906,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 8889,
									"end": 8906,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8864,
									"end": 9072,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "235"
								},
								{
									"begin": 8864,
									"end": 9072,
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 8864,
									"end": 9072,
									"name": "tag",
									"source": 23,
									"value": "237"
								},
								{
									"begin": 8864,
									"end": 9072,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9100,
									"end": 9106,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 9091,
									"end": 9098,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 9088,
									"end": 9107,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 9085,
									"end": 9264,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 9085,
									"end": 9264,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "238"
								},
								{
									"begin": 9085,
									"end": 9264,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 9158,
									"end": 9167,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 9153,
									"end": 9156,
									"name": "DUP10",
									"source": 23
								},
								{
									"begin": 9149,
									"end": 9168,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 9143,
									"end": 9169,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 9201,
									"end": 9249,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "239"
								},
								{
									"begin": 9243,
									"end": 9247,
									"name": "PUSH",
									"source": 23,
									"value": "1F"
								},
								{
									"begin": 9235,
									"end": 9241,
									"name": "DUP10",
									"source": 23
								},
								{
									"begin": 9231,
									"end": 9248,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 9220,
									"end": 9229,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 9201,
									"end": 9249,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "115"
								},
								{
									"begin": 9201,
									"end": 9249,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 9201,
									"end": 9249,
									"name": "tag",
									"source": 23,
									"value": "239"
								},
								{
									"begin": 9201,
									"end": 9249,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9193,
									"end": 9199,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 9186,
									"end": 9250,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 9108,
									"end": 9264,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9085,
									"end": 9264,
									"name": "tag",
									"source": 23,
									"value": "238"
								},
								{
									"begin": 9085,
									"end": 9264,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9310,
									"end": 9311,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 9306,
									"end": 9307,
									"name": "PUSH",
									"source": 23,
									"value": "2"
								},
								{
									"begin": 9298,
									"end": 9304,
									"name": "DUP9",
									"source": 23
								},
								{
									"begin": 9294,
									"end": 9308,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 9290,
									"end": 9312,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 9284,
									"end": 9288,
									"name": "DUP9",
									"source": 23
								},
								{
									"begin": 9277,
									"end": 9313,
									"name": "SSTORE",
									"source": 23
								},
								{
									"begin": 8712,
									"end": 9323,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8712,
									"end": 9323,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8712,
									"end": 9323,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8675,
									"end": 9562,
									"name": "tag",
									"source": 23,
									"value": "230"
								},
								{
									"begin": 8675,
									"end": 9562,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 8675,
									"end": 9562,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8265,
									"end": 9568,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8265,
									"end": 9568,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8265,
									"end": 9568,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8173,
									"end": 9568,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8173,
									"end": 9568,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 8173,
									"end": 9568,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 9574,
									"end": 9722,
									"name": "tag",
									"source": 23,
									"value": "117"
								},
								{
									"begin": 9574,
									"end": 9722,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9676,
									"end": 9687,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 9713,
									"end": 9716,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 9698,
									"end": 9716,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 9698,
									"end": 9716,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9574,
									"end": 9722,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 9574,
									"end": 9722,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 9574,
									"end": 9722,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9574,
									"end": 9722,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9574,
									"end": 9722,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 9752,
									"end": 10626,
									"name": "tag",
									"source": 23,
									"value": "118"
								},
								{
									"begin": 9752,
									"end": 10626,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9855,
									"end": 9858,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 9892,
									"end": 9897,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 9886,
									"end": 9898,
									"name": "SLOAD",
									"source": 23
								},
								{
									"begin": 9921,
									"end": 9957,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "242"
								},
								{
									"begin": 9947,
									"end": 9956,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 9921,
									"end": 9957,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "27"
								},
								{
									"begin": 9921,
									"end": 9957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 9921,
									"end": 9957,
									"name": "tag",
									"source": 23,
									"value": "242"
								},
								{
									"begin": 9921,
									"end": 9957,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9973,
									"end": 10062,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "243"
								},
								{
									"begin": 10055,
									"end": 10061,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 10050,
									"end": 10053,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 9973,
									"end": 10062,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "117"
								},
								{
									"begin": 9973,
									"end": 10062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 9973,
									"end": 10062,
									"name": "tag",
									"source": 23,
									"value": "243"
								},
								{
									"begin": 9973,
									"end": 10062,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 9966,
									"end": 10062,
									"name": "SWAP5",
									"source": 23
								},
								{
									"begin": 9966,
									"end": 10062,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10093,
									"end": 10094,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 10082,
									"end": 10091,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 10078,
									"end": 10095,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 10109,
									"end": 10110,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 10104,
									"end": 10270,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 10104,
									"end": 10270,
									"name": "EQ",
									"source": 23
								},
								{
									"begin": 10104,
									"end": 10270,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "245"
								},
								{
									"begin": 10104,
									"end": 10270,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 10284,
									"end": 10285,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 10279,
									"end": 10620,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 10279,
									"end": 10620,
									"name": "EQ",
									"source": 23
								},
								{
									"begin": 10279,
									"end": 10620,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "246"
								},
								{
									"begin": 10279,
									"end": 10620,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 10071,
									"end": 10620,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "244"
								},
								{
									"begin": 10071,
									"end": 10620,
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 10104,
									"end": 10270,
									"name": "tag",
									"source": 23,
									"value": "245"
								},
								{
									"begin": 10104,
									"end": 10270,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10188,
									"end": 10192,
									"name": "PUSH",
									"source": 23,
									"value": "FF"
								},
								{
									"begin": 10184,
									"end": 10193,
									"name": "NOT",
									"source": 23
								},
								{
									"begin": 10173,
									"end": 10182,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 10169,
									"end": 10194,
									"name": "AND",
									"source": 23
								},
								{
									"begin": 10164,
									"end": 10167,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 10157,
									"end": 10195,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 10250,
									"end": 10256,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 10243,
									"end": 10257,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 10236,
									"end": 10258,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 10228,
									"end": 10234,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 10224,
									"end": 10259,
									"name": "MUL",
									"source": 23
								},
								{
									"begin": 10219,
									"end": 10222,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 10215,
									"end": 10260,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 10208,
									"end": 10260,
									"name": "SWAP4",
									"source": 23
								},
								{
									"begin": 10208,
									"end": 10260,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10104,
									"end": 10270,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "244"
								},
								{
									"begin": 10104,
									"end": 10270,
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 10279,
									"end": 10620,
									"name": "tag",
									"source": 23,
									"value": "246"
								},
								{
									"begin": 10279,
									"end": 10620,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10346,
									"end": 10384,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "247"
								},
								{
									"begin": 10378,
									"end": 10383,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 10346,
									"end": 10384,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "102"
								},
								{
									"begin": 10346,
									"end": 10384,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 10346,
									"end": 10384,
									"name": "tag",
									"source": 23,
									"value": "247"
								},
								{
									"begin": 10346,
									"end": 10384,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10406,
									"end": 10407,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 10420,
									"end": 10574,
									"name": "tag",
									"source": 23,
									"value": "248"
								},
								{
									"begin": 10420,
									"end": 10574,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10434,
									"end": 10440,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 10431,
									"end": 10432,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 10428,
									"end": 10441,
									"name": "LT",
									"source": 23
								},
								{
									"begin": 10420,
									"end": 10574,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 10420,
									"end": 10574,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "250"
								},
								{
									"begin": 10420,
									"end": 10574,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 10508,
									"end": 10515,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 10502,
									"end": 10516,
									"name": "SLOAD",
									"source": 23
								},
								{
									"begin": 10498,
									"end": 10499,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 10493,
									"end": 10496,
									"name": "DUP10",
									"source": 23
								},
								{
									"begin": 10489,
									"end": 10500,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 10482,
									"end": 10517,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 10558,
									"end": 10559,
									"name": "PUSH",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 10549,
									"end": 10556,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 10545,
									"end": 10560,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 10534,
									"end": 10560,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 10534,
									"end": 10560,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10456,
									"end": 10460,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 10453,
									"end": 10454,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 10449,
									"end": 10461,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 10444,
									"end": 10461,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 10444,
									"end": 10461,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10420,
									"end": 10574,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "248"
								},
								{
									"begin": 10420,
									"end": 10574,
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 10420,
									"end": 10574,
									"name": "tag",
									"source": 23,
									"value": "250"
								},
								{
									"begin": 10420,
									"end": 10574,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10603,
									"end": 10609,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 10598,
									"end": 10601,
									"name": "DUP9",
									"source": 23
								},
								{
									"begin": 10594,
									"end": 10610,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 10587,
									"end": 10610,
									"name": "SWAP6",
									"source": 23
								},
								{
									"begin": 10587,
									"end": 10610,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10286,
									"end": 10620,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10286,
									"end": 10620,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10071,
									"end": 10620,
									"name": "tag",
									"source": 23,
									"value": "244"
								},
								{
									"begin": 10071,
									"end": 10620,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10071,
									"end": 10620,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9859,
									"end": 10626,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9859,
									"end": 10626,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9752,
									"end": 10626,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 9752,
									"end": 10626,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 9752,
									"end": 10626,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9752,
									"end": 10626,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 9752,
									"end": 10626,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 10632,
									"end": 10901,
									"name": "tag",
									"source": 23,
									"value": "15"
								},
								{
									"begin": 10632,
									"end": 10901,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10761,
									"end": 10764,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 10783,
									"end": 10875,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "252"
								},
								{
									"begin": 10871,
									"end": 10874,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 10862,
									"end": 10868,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 10783,
									"end": 10875,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "118"
								},
								{
									"begin": 10783,
									"end": 10875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 10783,
									"end": 10875,
									"name": "tag",
									"source": 23,
									"value": "252"
								},
								{
									"begin": 10783,
									"end": 10875,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10776,
									"end": 10875,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 10776,
									"end": 10875,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10892,
									"end": 10895,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 10885,
									"end": 10895,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 10885,
									"end": 10895,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10632,
									"end": 10901,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 10632,
									"end": 10901,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 10632,
									"end": 10901,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10632,
									"end": 10901,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 10632,
									"end": 10901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 10907,
									"end": 11087,
									"name": "tag",
									"source": 23,
									"value": "119"
								},
								{
									"begin": 10907,
									"end": 11087,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 10955,
									"end": 11032,
									"name": "PUSH",
									"source": 23,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10952,
									"end": 10953,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 10945,
									"end": 11033,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 11052,
									"end": 11056,
									"name": "PUSH",
									"source": 23,
									"value": "11"
								},
								{
									"begin": 11049,
									"end": 11050,
									"name": "PUSH",
									"source": 23,
									"value": "4"
								},
								{
									"begin": 11042,
									"end": 11057,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 11076,
									"end": 11080,
									"name": "PUSH",
									"source": 23,
									"value": "24"
								},
								{
									"begin": 11073,
									"end": 11074,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 11066,
									"end": 11081,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 11093,
									"end": 11284,
									"name": "tag",
									"source": 23,
									"value": "19"
								},
								{
									"begin": 11093,
									"end": 11284,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 11133,
									"end": 11136,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 11152,
									"end": 11172,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "255"
								},
								{
									"begin": 11170,
									"end": 11171,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 11152,
									"end": 11172,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "88"
								},
								{
									"begin": 11152,
									"end": 11172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 11152,
									"end": 11172,
									"name": "tag",
									"source": 23,
									"value": "255"
								},
								{
									"begin": 11152,
									"end": 11172,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 11147,
									"end": 11172,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 11147,
									"end": 11172,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11186,
									"end": 11206,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "256"
								},
								{
									"begin": 11204,
									"end": 11205,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 11186,
									"end": 11206,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "88"
								},
								{
									"begin": 11186,
									"end": 11206,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 11186,
									"end": 11206,
									"name": "tag",
									"source": 23,
									"value": "256"
								},
								{
									"begin": 11186,
									"end": 11206,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 11181,
									"end": 11206,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 11181,
									"end": 11206,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11229,
									"end": 11230,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 11226,
									"end": 11227,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 11222,
									"end": 11231,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 11215,
									"end": 11231,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 11215,
									"end": 11231,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11250,
									"end": 11253,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 11247,
									"end": 11248,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 11244,
									"end": 11254,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 11241,
									"end": 11277,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 11241,
									"end": 11277,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "257"
								},
								{
									"begin": 11241,
									"end": 11277,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 11257,
									"end": 11275,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "258"
								},
								{
									"begin": 11257,
									"end": 11275,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "119"
								},
								{
									"begin": 11257,
									"end": 11275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 11257,
									"end": 11275,
									"name": "tag",
									"source": 23,
									"value": "258"
								},
								{
									"begin": 11257,
									"end": 11275,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 11241,
									"end": 11277,
									"name": "tag",
									"source": 23,
									"value": "257"
								},
								{
									"begin": 11241,
									"end": 11277,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 11093,
									"end": 11284,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 11093,
									"end": 11284,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 11093,
									"end": 11284,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11093,
									"end": 11284,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11093,
									"end": 11284,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 11290,
									"end": 11459,
									"name": "tag",
									"source": 23,
									"value": "120"
								},
								{
									"begin": 11290,
									"end": 11459,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 11374,
									"end": 11385,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 11408,
									"end": 11414,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 11403,
									"end": 11406,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 11396,
									"end": 11415,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 11448,
									"end": 11452,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 11443,
									"end": 11446,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 11439,
									"end": 11453,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 11424,
									"end": 11453,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 11424,
									"end": 11453,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11290,
									"end": 11459,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 11290,
									"end": 11459,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 11290,
									"end": 11459,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11290,
									"end": 11459,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11290,
									"end": 11459,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 11465,
									"end": 11643,
									"name": "tag",
									"source": 23,
									"value": "121"
								},
								{
									"begin": 11465,
									"end": 11643,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 11605,
									"end": 11635,
									"name": "PUSH",
									"source": 23,
									"value": "4E6F7420656E6F75676820746F6B656E7320617661696C61626C652E00000000"
								},
								{
									"begin": 11601,
									"end": 11602,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 11593,
									"end": 11599,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 11589,
									"end": 11603,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 11582,
									"end": 11636,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 11465,
									"end": 11643,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11465,
									"end": 11643,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 11649,
									"end": 12015,
									"name": "tag",
									"source": 23,
									"value": "122"
								},
								{
									"begin": 11649,
									"end": 12015,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 11791,
									"end": 11794,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 11812,
									"end": 11879,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "262"
								},
								{
									"begin": 11876,
									"end": 11878,
									"name": "PUSH",
									"source": 23,
									"value": "1C"
								},
								{
									"begin": 11871,
									"end": 11874,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 11812,
									"end": 11879,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "120"
								},
								{
									"begin": 11812,
									"end": 11879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 11812,
									"end": 11879,
									"name": "tag",
									"source": 23,
									"value": "262"
								},
								{
									"begin": 11812,
									"end": 11879,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 11805,
									"end": 11879,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 11805,
									"end": 11879,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11888,
									"end": 11981,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "263"
								},
								{
									"begin": 11977,
									"end": 11980,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 11888,
									"end": 11981,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "121"
								},
								{
									"begin": 11888,
									"end": 11981,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 11888,
									"end": 11981,
									"name": "tag",
									"source": 23,
									"value": "263"
								},
								{
									"begin": 11888,
									"end": 11981,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12006,
									"end": 12008,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 12001,
									"end": 12004,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 11997,
									"end": 12009,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 11990,
									"end": 12009,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 11990,
									"end": 12009,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11649,
									"end": 12015,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 11649,
									"end": 12015,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 11649,
									"end": 12015,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 11649,
									"end": 12015,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 12021,
									"end": 12440,
									"name": "tag",
									"source": 23,
									"value": "22"
								},
								{
									"begin": 12021,
									"end": 12440,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12187,
									"end": 12191,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 12225,
									"end": 12227,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 12214,
									"end": 12223,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 12210,
									"end": 12228,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 12202,
									"end": 12228,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 12202,
									"end": 12228,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12274,
									"end": 12283,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 12268,
									"end": 12272,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 12264,
									"end": 12284,
									"name": "SUB",
									"source": 23
								},
								{
									"begin": 12260,
									"end": 12261,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 12249,
									"end": 12258,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 12245,
									"end": 12262,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 12238,
									"end": 12285,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 12302,
									"end": 12433,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "265"
								},
								{
									"begin": 12428,
									"end": 12432,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 12302,
									"end": 12433,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "122"
								},
								{
									"begin": 12302,
									"end": 12433,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 12302,
									"end": 12433,
									"name": "tag",
									"source": 23,
									"value": "265"
								},
								{
									"begin": 12302,
									"end": 12433,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12294,
									"end": 12433,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 12294,
									"end": 12433,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12021,
									"end": 12440,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 12021,
									"end": 12440,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 12021,
									"end": 12440,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12021,
									"end": 12440,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 12446,
									"end": 12523,
									"name": "tag",
									"source": 23,
									"value": "123"
								},
								{
									"begin": 12446,
									"end": 12523,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12483,
									"end": 12490,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 12512,
									"end": 12517,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 12501,
									"end": 12517,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 12501,
									"end": 12517,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12446,
									"end": 12523,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 12446,
									"end": 12523,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 12446,
									"end": 12523,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12446,
									"end": 12523,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 12529,
									"end": 12608,
									"name": "tag",
									"source": 23,
									"value": "124"
								},
								{
									"begin": 12529,
									"end": 12608,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12568,
									"end": 12575,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 12597,
									"end": 12602,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 12586,
									"end": 12602,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 12586,
									"end": 12602,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12529,
									"end": 12608,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 12529,
									"end": 12608,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 12529,
									"end": 12608,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12529,
									"end": 12608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 12614,
									"end": 12771,
									"name": "tag",
									"source": 23,
									"value": "125"
								},
								{
									"begin": 12614,
									"end": 12771,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12719,
									"end": 12764,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "269"
								},
								{
									"begin": 12739,
									"end": 12763,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "270"
								},
								{
									"begin": 12757,
									"end": 12762,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 12739,
									"end": 12763,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "123"
								},
								{
									"begin": 12739,
									"end": 12763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 12739,
									"end": 12763,
									"name": "tag",
									"source": 23,
									"value": "270"
								},
								{
									"begin": 12739,
									"end": 12763,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12719,
									"end": 12764,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "124"
								},
								{
									"begin": 12719,
									"end": 12764,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 12719,
									"end": 12764,
									"name": "tag",
									"source": 23,
									"value": "269"
								},
								{
									"begin": 12719,
									"end": 12764,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12714,
									"end": 12717,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 12707,
									"end": 12765,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 12614,
									"end": 12771,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12614,
									"end": 12771,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12614,
									"end": 12771,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 12777,
									"end": 13033,
									"name": "tag",
									"source": 23,
									"value": "33"
								},
								{
									"begin": 12777,
									"end": 13033,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 12889,
									"end": 12892,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 12904,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "272"
								},
								{
									"begin": 12975,
									"end": 12978,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 12966,
									"end": 12972,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 12904,
									"end": 12979,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "125"
								},
								{
									"begin": 12904,
									"end": 12979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 12904,
									"end": 12979,
									"name": "tag",
									"source": 23,
									"value": "272"
								},
								{
									"begin": 12904,
									"end": 12979,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13004,
									"end": 13006,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 12999,
									"end": 13002,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 12995,
									"end": 13007,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 12988,
									"end": 13007,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 12988,
									"end": 13007,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13024,
									"end": 13027,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 13017,
									"end": 13027,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 13017,
									"end": 13027,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12777,
									"end": 13033,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 12777,
									"end": 13033,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 12777,
									"end": 13033,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12777,
									"end": 13033,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 12777,
									"end": 13033,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 13039,
									"end": 13429,
									"name": "tag",
									"source": 23,
									"value": "126"
								},
								{
									"begin": 13039,
									"end": 13429,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13145,
									"end": 13148,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 13173,
									"end": 13212,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "274"
								},
								{
									"begin": 13206,
									"end": 13211,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 13173,
									"end": 13212,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "100"
								},
								{
									"begin": 13173,
									"end": 13212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 13173,
									"end": 13212,
									"name": "tag",
									"source": 23,
									"value": "274"
								},
								{
									"begin": 13173,
									"end": 13212,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13228,
									"end": 13317,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "275"
								},
								{
									"begin": 13310,
									"end": 13316,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 13305,
									"end": 13308,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 13228,
									"end": 13317,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "117"
								},
								{
									"begin": 13228,
									"end": 13317,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 13228,
									"end": 13317,
									"name": "tag",
									"source": 23,
									"value": "275"
								},
								{
									"begin": 13228,
									"end": 13317,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13221,
									"end": 13317,
									"name": "SWAP4",
									"source": 23
								},
								{
									"begin": 13221,
									"end": 13317,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13326,
									"end": 13391,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "276"
								},
								{
									"begin": 13384,
									"end": 13390,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 13379,
									"end": 13382,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 13372,
									"end": 13376,
									"name": "PUSH",
									"source": 23,
									"value": "20"
								},
								{
									"begin": 13365,
									"end": 13370,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 13361,
									"end": 13377,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 13326,
									"end": 13391,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "97"
								},
								{
									"begin": 13326,
									"end": 13391,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 13326,
									"end": 13391,
									"name": "tag",
									"source": 23,
									"value": "276"
								},
								{
									"begin": 13326,
									"end": 13391,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13416,
									"end": 13422,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 13411,
									"end": 13414,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 13407,
									"end": 13423,
									"name": "ADD",
									"source": 23
								},
								{
									"begin": 13400,
									"end": 13423,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 13400,
									"end": 13423,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13149,
									"end": 13429,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13039,
									"end": 13429,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 13039,
									"end": 13429,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 13039,
									"end": 13429,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13039,
									"end": 13429,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13039,
									"end": 13429,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 13435,
									"end": 14190,
									"name": "tag",
									"source": 23,
									"value": "35"
								},
								{
									"begin": 13435,
									"end": 14190,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13711,
									"end": 13714,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 13733,
									"end": 13828,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "278"
								},
								{
									"begin": 13824,
									"end": 13827,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 13815,
									"end": 13821,
									"name": "DUP8",
									"source": 23
								},
								{
									"begin": 13733,
									"end": 13828,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "126"
								},
								{
									"begin": 13733,
									"end": 13828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 13733,
									"end": 13828,
									"name": "tag",
									"source": 23,
									"value": "278"
								},
								{
									"begin": 13733,
									"end": 13828,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13726,
									"end": 13828,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 13726,
									"end": 13828,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13845,
									"end": 13940,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "279"
								},
								{
									"begin": 13936,
									"end": 13939,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 13927,
									"end": 13933,
									"name": "DUP7",
									"source": 23
								},
								{
									"begin": 13845,
									"end": 13940,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "126"
								},
								{
									"begin": 13845,
									"end": 13940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 13845,
									"end": 13940,
									"name": "tag",
									"source": 23,
									"value": "279"
								},
								{
									"begin": 13845,
									"end": 13940,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13838,
									"end": 13940,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 13838,
									"end": 13940,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13957,
									"end": 14052,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "280"
								},
								{
									"begin": 14048,
									"end": 14051,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 14039,
									"end": 14045,
									"name": "DUP6",
									"source": 23
								},
								{
									"begin": 13957,
									"end": 14052,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "126"
								},
								{
									"begin": 13957,
									"end": 14052,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 13957,
									"end": 14052,
									"name": "tag",
									"source": 23,
									"value": "280"
								},
								{
									"begin": 13957,
									"end": 14052,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 13950,
									"end": 14052,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 13950,
									"end": 14052,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14069,
									"end": 14164,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "281"
								},
								{
									"begin": 14160,
									"end": 14163,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 14151,
									"end": 14157,
									"name": "DUP5",
									"source": 23
								},
								{
									"begin": 14069,
									"end": 14164,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "126"
								},
								{
									"begin": 14069,
									"end": 14164,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14069,
									"end": 14164,
									"name": "tag",
									"source": 23,
									"value": "281"
								},
								{
									"begin": 14069,
									"end": 14164,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14062,
									"end": 14164,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 14062,
									"end": 14164,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14181,
									"end": 14184,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 14174,
									"end": 14184,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 14174,
									"end": 14184,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13435,
									"end": 14190,
									"name": "SWAP6",
									"source": 23
								},
								{
									"begin": 13435,
									"end": 14190,
									"name": "SWAP5",
									"source": 23
								},
								{
									"begin": 13435,
									"end": 14190,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13435,
									"end": 14190,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13435,
									"end": 14190,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13435,
									"end": 14190,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13435,
									"end": 14190,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 13435,
									"end": 14190,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14196,
									"end": 14376,
									"name": "tag",
									"source": 23,
									"value": "50"
								},
								{
									"begin": 14196,
									"end": 14376,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14244,
									"end": 14321,
									"name": "PUSH",
									"source": 23,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14241,
									"end": 14242,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 14234,
									"end": 14322,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 14341,
									"end": 14345,
									"name": "PUSH",
									"source": 23,
									"value": "12"
								},
								{
									"begin": 14338,
									"end": 14339,
									"name": "PUSH",
									"source": 23,
									"value": "4"
								},
								{
									"begin": 14331,
									"end": 14346,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 14365,
									"end": 14369,
									"name": "PUSH",
									"source": 23,
									"value": "24"
								},
								{
									"begin": 14362,
									"end": 14363,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 14355,
									"end": 14370,
									"name": "REVERT",
									"source": 23
								},
								{
									"begin": 14382,
									"end": 14567,
									"name": "tag",
									"source": 23,
									"value": "55"
								},
								{
									"begin": 14382,
									"end": 14567,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14422,
									"end": 14423,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 14439,
									"end": 14459,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "284"
								},
								{
									"begin": 14457,
									"end": 14458,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 14439,
									"end": 14459,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "88"
								},
								{
									"begin": 14439,
									"end": 14459,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14439,
									"end": 14459,
									"name": "tag",
									"source": 23,
									"value": "284"
								},
								{
									"begin": 14439,
									"end": 14459,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14434,
									"end": 14459,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 14434,
									"end": 14459,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14473,
									"end": 14493,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "285"
								},
								{
									"begin": 14491,
									"end": 14492,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 14473,
									"end": 14493,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "88"
								},
								{
									"begin": 14473,
									"end": 14493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14473,
									"end": 14493,
									"name": "tag",
									"source": 23,
									"value": "285"
								},
								{
									"begin": 14473,
									"end": 14493,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14468,
									"end": 14493,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 14468,
									"end": 14493,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14512,
									"end": 14513,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 14502,
									"end": 14537,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "286"
								},
								{
									"begin": 14502,
									"end": 14537,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 14517,
									"end": 14535,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "287"
								},
								{
									"begin": 14517,
									"end": 14535,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "50"
								},
								{
									"begin": 14517,
									"end": 14535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14517,
									"end": 14535,
									"name": "tag",
									"source": 23,
									"value": "287"
								},
								{
									"begin": 14517,
									"end": 14535,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14502,
									"end": 14537,
									"name": "tag",
									"source": 23,
									"value": "286"
								},
								{
									"begin": 14502,
									"end": 14537,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14559,
									"end": 14560,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 14556,
									"end": 14557,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 14552,
									"end": 14561,
									"name": "DIV",
									"source": 23
								},
								{
									"begin": 14547,
									"end": 14561,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 14547,
									"end": 14561,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14382,
									"end": 14567,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 14382,
									"end": 14567,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 14382,
									"end": 14567,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14382,
									"end": 14567,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14382,
									"end": 14567,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14573,
									"end": 14767,
									"name": "tag",
									"source": 23,
									"value": "58"
								},
								{
									"begin": 14573,
									"end": 14767,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14613,
									"end": 14617,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 14633,
									"end": 14653,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "289"
								},
								{
									"begin": 14651,
									"end": 14652,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 14633,
									"end": 14653,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "88"
								},
								{
									"begin": 14633,
									"end": 14653,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14633,
									"end": 14653,
									"name": "tag",
									"source": 23,
									"value": "289"
								},
								{
									"begin": 14633,
									"end": 14653,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14628,
									"end": 14653,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 14628,
									"end": 14653,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14667,
									"end": 14687,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "290"
								},
								{
									"begin": 14685,
									"end": 14686,
									"name": "DUP4",
									"source": 23
								},
								{
									"begin": 14667,
									"end": 14687,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "88"
								},
								{
									"begin": 14667,
									"end": 14687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14667,
									"end": 14687,
									"name": "tag",
									"source": 23,
									"value": "290"
								},
								{
									"begin": 14667,
									"end": 14687,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14662,
									"end": 14687,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 14662,
									"end": 14687,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14711,
									"end": 14712,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 14708,
									"end": 14709,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 14704,
									"end": 14713,
									"name": "SUB",
									"source": 23
								},
								{
									"begin": 14696,
									"end": 14713,
									"name": "SWAP1",
									"source": 23
								},
								{
									"begin": 14696,
									"end": 14713,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14735,
									"end": 14736,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 14729,
									"end": 14733,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 14726,
									"end": 14737,
									"name": "GT",
									"source": 23
								},
								{
									"begin": 14723,
									"end": 14760,
									"name": "ISZERO",
									"source": 23
								},
								{
									"begin": 14723,
									"end": 14760,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "291"
								},
								{
									"begin": 14723,
									"end": 14760,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 14740,
									"end": 14758,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "292"
								},
								{
									"begin": 14740,
									"end": 14758,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "119"
								},
								{
									"begin": 14740,
									"end": 14758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 14740,
									"end": 14758,
									"name": "tag",
									"source": 23,
									"value": "292"
								},
								{
									"begin": 14740,
									"end": 14758,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14723,
									"end": 14760,
									"name": "tag",
									"source": 23,
									"value": "291"
								},
								{
									"begin": 14723,
									"end": 14760,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 14573,
									"end": 14767,
									"name": "SWAP3",
									"source": 23
								},
								{
									"begin": 14573,
									"end": 14767,
									"name": "SWAP2",
									"source": 23
								},
								{
									"begin": 14573,
									"end": 14767,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14573,
									"end": 14767,
									"name": "POP",
									"source": 23
								},
								{
									"begin": 14573,
									"end": 14767,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 23
								},
								{
									"begin": 555,
									"end": 3963,
									"name": "tag",
									"source": 21,
									"value": "16"
								},
								{
									"begin": 555,
									"end": 3963,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 555,
									"end": 3963,
									"name": "PUSH #[$]",
									"source": 21,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 555,
									"end": 3963,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 555,
									"end": 3963,
									"name": "PUSH [$]",
									"source": 21,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 555,
									"end": 3963,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 3963,
									"name": "CODECOPY",
									"source": 21
								},
								{
									"begin": 555,
									"end": 3963,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 3963,
									"name": "RETURN",
									"source": 21
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202ee99f0a55f292f0117329f20d9e897459eb6e84223f7b6467ba76b2a934f1f964736f6c63430008190033",
									".code": [
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "CALLVALUE",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "tag",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "CALLDATASIZE",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "SHR",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "6A49F979"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "15"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "6A49F979"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "9"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "95D89B41"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "10"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "B62A62EC"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "E8315742"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "12"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "F22A195E"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "13"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "F82900B1"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "tag",
											"source": 21,
											"value": "15"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "572B0CC"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "3"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "6FDDE03"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "18160DDD"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "5"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "3BA0B9A9"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "6"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "4FC8A991"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "7"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "57E871E7"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "8"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "tag",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 555,
											"end": 3963,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "tag",
											"source": 21,
											"value": "3"
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "16"
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "17"
										},
										{
											"begin": 3765,
											"end": 3856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "tag",
											"source": 21,
											"value": "16"
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "18"
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "19"
										},
										{
											"begin": 3765,
											"end": 3856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "tag",
											"source": 21,
											"value": "18"
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "RETURN",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "tag",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "21"
										},
										{
											"begin": 704,
											"end": 722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "tag",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "22"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "23"
										},
										{
											"begin": 704,
											"end": 722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "tag",
											"source": 21,
											"value": "22"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "RETURN",
											"source": 21
										},
										{
											"begin": 644,
											"end": 670,
											"name": "tag",
											"source": 21,
											"value": "5"
										},
										{
											"begin": 644,
											"end": 670,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 644,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "25"
										},
										{
											"begin": 644,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 644,
											"end": 670,
											"name": "tag",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 644,
											"end": 670,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 644,
											"end": 670,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 670,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 644,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "26"
										},
										{
											"begin": 644,
											"end": 670,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 644,
											"end": 670,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 644,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "19"
										},
										{
											"begin": 644,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 644,
											"end": 670,
											"name": "tag",
											"source": 21,
											"value": "26"
										},
										{
											"begin": 644,
											"end": 670,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 644,
											"end": 670,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 670,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 644,
											"end": 670,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 644,
											"end": 670,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 644,
											"end": 670,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 644,
											"end": 670,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 644,
											"end": 670,
											"name": "RETURN",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "tag",
											"source": 21,
											"value": "6"
										},
										{
											"begin": 729,
											"end": 754,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "27"
										},
										{
											"begin": 729,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "28"
										},
										{
											"begin": 729,
											"end": 754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "tag",
											"source": 21,
											"value": "27"
										},
										{
											"begin": 729,
											"end": 754,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 754,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "29"
										},
										{
											"begin": 729,
											"end": 754,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "30"
										},
										{
											"begin": 729,
											"end": 754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "tag",
											"source": 21,
											"value": "29"
										},
										{
											"begin": 729,
											"end": 754,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 754,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "RETURN",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "tag",
											"source": 21,
											"value": "7"
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "31"
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "CALLDATASIZE",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "32"
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "33"
										},
										{
											"begin": 3079,
											"end": 3757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "tag",
											"source": 21,
											"value": "32"
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "34"
										},
										{
											"begin": 3079,
											"end": 3757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "tag",
											"source": 21,
											"value": "31"
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "35"
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "36"
										},
										{
											"begin": 3079,
											"end": 3757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "tag",
											"source": 21,
											"value": "35"
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "RETURN",
											"source": 21
										},
										{
											"begin": 791,
											"end": 817,
											"name": "tag",
											"source": 21,
											"value": "8"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "37"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "38"
										},
										{
											"begin": 791,
											"end": 817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 791,
											"end": 817,
											"name": "tag",
											"source": 21,
											"value": "37"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "39"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "19"
										},
										{
											"begin": 791,
											"end": 817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 791,
											"end": 817,
											"name": "tag",
											"source": 21,
											"value": "39"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 791,
											"end": 817,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 791,
											"end": 817,
											"name": "RETURN",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "tag",
											"source": 21,
											"value": "9"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 893,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "tag",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "42"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "23"
										},
										{
											"begin": 893,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "tag",
											"source": 21,
											"value": "42"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "RETURN",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "tag",
											"source": 21,
											"value": "10"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "43"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 677,
											"end": 697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "tag",
											"source": 21,
											"value": "43"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "45"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "23"
										},
										{
											"begin": 677,
											"end": 697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "tag",
											"source": 21,
											"value": "45"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "RETURN",
											"source": 21
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "tag",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "46"
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "47"
										},
										{
											"begin": 3864,
											"end": 3960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "tag",
											"source": 21,
											"value": "46"
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "48"
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "23"
										},
										{
											"begin": 3864,
											"end": 3960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "tag",
											"source": 21,
											"value": "48"
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "RETURN",
											"source": 21
										},
										{
											"begin": 613,
											"end": 637,
											"name": "tag",
											"source": 21,
											"value": "12"
										},
										{
											"begin": 613,
											"end": 637,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 613,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "49"
										},
										{
											"begin": 613,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "50"
										},
										{
											"begin": 613,
											"end": 637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 613,
											"end": 637,
											"name": "tag",
											"source": 21,
											"value": "49"
										},
										{
											"begin": 613,
											"end": 637,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 613,
											"end": 637,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 637,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 613,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "51"
										},
										{
											"begin": 613,
											"end": 637,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 613,
											"end": 637,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 613,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "19"
										},
										{
											"begin": 613,
											"end": 637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 613,
											"end": 637,
											"name": "tag",
											"source": 21,
											"value": "51"
										},
										{
											"begin": 613,
											"end": 637,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 613,
											"end": 637,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 637,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 613,
											"end": 637,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 613,
											"end": 637,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 613,
											"end": 637,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 613,
											"end": 637,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 613,
											"end": 637,
											"name": "RETURN",
											"source": 21
										},
										{
											"begin": 824,
											"end": 848,
											"name": "tag",
											"source": 21,
											"value": "13"
										},
										{
											"begin": 824,
											"end": 848,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 824,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "52"
										},
										{
											"begin": 824,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "53"
										},
										{
											"begin": 824,
											"end": 848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 824,
											"end": 848,
											"name": "tag",
											"source": 21,
											"value": "52"
										},
										{
											"begin": 824,
											"end": 848,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 824,
											"end": 848,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 848,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 824,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "54"
										},
										{
											"begin": 824,
											"end": 848,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 824,
											"end": 848,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 824,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "55"
										},
										{
											"begin": 824,
											"end": 848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 824,
											"end": 848,
											"name": "tag",
											"source": 21,
											"value": "54"
										},
										{
											"begin": 824,
											"end": 848,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 824,
											"end": 848,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 848,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 824,
											"end": 848,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 824,
											"end": 848,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 824,
											"end": 848,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 824,
											"end": 848,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 824,
											"end": 848,
											"name": "RETURN",
											"source": 21
										},
										{
											"begin": 924,
											"end": 952,
											"name": "tag",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 924,
											"end": 952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 924,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "56"
										},
										{
											"begin": 924,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "57"
										},
										{
											"begin": 924,
											"end": 952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 924,
											"end": 952,
											"name": "tag",
											"source": 21,
											"value": "56"
										},
										{
											"begin": 924,
											"end": 952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 924,
											"end": 952,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 924,
											"end": 952,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 924,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "58"
										},
										{
											"begin": 924,
											"end": 952,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 924,
											"end": 952,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 924,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "19"
										},
										{
											"begin": 924,
											"end": 952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 924,
											"end": 952,
											"name": "tag",
											"source": 21,
											"value": "58"
										},
										{
											"begin": 924,
											"end": 952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 924,
											"end": 952,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 924,
											"end": 952,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 924,
											"end": 952,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 924,
											"end": 952,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 924,
											"end": 952,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 924,
											"end": 952,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 924,
											"end": 952,
											"name": "RETURN",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "tag",
											"source": 21,
											"value": "17"
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3808,
											"end": 3815,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3848,
											"name": "PUSH",
											"source": 21,
											"value": "9"
										},
										{
											"begin": 3835,
											"end": 3848,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 3828,
											"end": 3848,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3828,
											"end": 3848,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3856,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3765,
											"end": 3856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "tag",
											"source": 21,
											"value": "21"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH",
											"source": 21,
											"value": "3"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "61"
										},
										{
											"begin": 704,
											"end": 722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "tag",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "62"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "61"
										},
										{
											"begin": 704,
											"end": 722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "tag",
											"source": 21,
											"value": "62"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "63"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "63"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "tag",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "KECCAK256",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "tag",
											"source": 21,
											"value": "65"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "65"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "tag",
											"source": 21,
											"value": "63"
										},
										{
											"begin": 704,
											"end": 722,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 704,
											"end": 722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 644,
											"end": 670,
											"name": "tag",
											"source": 21,
											"value": "25"
										},
										{
											"begin": 644,
											"end": 670,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 644,
											"end": 670,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 644,
											"end": 670,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 644,
											"end": 670,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 644,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "tag",
											"source": 21,
											"value": "28"
										},
										{
											"begin": 729,
											"end": 754,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 729,
											"end": 754,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 754,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 729,
											"end": 754,
											"name": "EXP",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "PUSH",
											"source": 21,
											"value": "FF"
										},
										{
											"begin": 729,
											"end": 754,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 729,
											"end": 754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "tag",
											"source": 21,
											"value": "34"
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3169,
											"end": 3173,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3175,
											"end": 3182,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3200,
											"end": 3224,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH",
											"source": 21,
											"value": "8"
										},
										{
											"begin": 3253,
											"end": 3258,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "67"
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "68"
										},
										{
											"begin": 3227,
											"end": 3259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "tag",
											"source": 21,
											"value": "67"
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3200,
											"end": 3259,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3200,
											"end": 3259,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3272,
											"end": 3294,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3318,
											"end": 3328,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "69"
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "23"
										},
										{
											"begin": 3307,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "tag",
											"source": 21,
											"value": "69"
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3297,
											"end": 3330,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3297,
											"end": 3330,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3297,
											"end": 3330,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3297,
											"end": 3330,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3297,
											"end": 3330,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3297,
											"end": 3330,
											"name": "KECCAK256",
											"source": 21
										},
										{
											"begin": 3272,
											"end": 3330,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3272,
											"end": 3330,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3356,
											"end": 3363,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3351,
											"end": 3709,
											"name": "tag",
											"source": 21,
											"value": "70"
										},
										{
											"begin": 3351,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3374,
											"end": 3379,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3369,
											"end": 3370,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3369,
											"end": 3379,
											"name": "PUSH",
											"source": 21,
											"value": "FF"
										},
										{
											"begin": 3369,
											"end": 3379,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 3369,
											"end": 3379,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 3351,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "71"
										},
										{
											"begin": 3351,
											"end": 3709,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3477,
											"end": 3494,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3511,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3512,
											"end": 3513,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3497,
											"end": 3514,
											"name": "PUSH",
											"source": 21,
											"value": "FF"
										},
										{
											"begin": 3497,
											"end": 3514,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 3497,
											"end": 3514,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3497,
											"end": 3514,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3497,
											"end": 3514,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 3497,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "73"
										},
										{
											"begin": 3497,
											"end": 3514,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3497,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "74"
										},
										{
											"begin": 3497,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "75"
										},
										{
											"begin": 3497,
											"end": 3514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3497,
											"end": 3514,
											"name": "tag",
											"source": 21,
											"value": "74"
										},
										{
											"begin": 3497,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3497,
											"end": 3514,
											"name": "tag",
											"source": 21,
											"value": "73"
										},
										{
											"begin": 3497,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3497,
											"end": 3514,
											"name": "BYTE",
											"source": 21
										},
										{
											"begin": 3497,
											"end": 3514,
											"name": "PUSH",
											"source": 21,
											"value": "F8"
										},
										{
											"begin": 3497,
											"end": 3514,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 3477,
											"end": 3514,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3477,
											"end": 3514,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3553,
											"end": 3568,
											"name": "PUSH",
											"source": 21,
											"value": "A"
										},
										{
											"begin": 3553,
											"end": 3568,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 3553,
											"end": 3568,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3553,
											"end": 3568,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 3553,
											"end": 3568,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3553,
											"end": 3568,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 3553,
											"end": 3568,
											"name": "EXP",
											"source": 21
										},
										{
											"begin": 3553,
											"end": 3568,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3553,
											"end": 3568,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 3553,
											"end": 3568,
											"name": "PUSH",
											"source": 21,
											"value": "F8"
										},
										{
											"begin": 3553,
											"end": 3568,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 3539,
											"end": 3568,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3539,
											"end": 3568,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 3539,
											"end": 3568,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 3539,
											"end": 3549,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3539,
											"end": 3568,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3539,
											"end": 3568,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 3539,
											"end": 3568,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 3539,
											"end": 3568,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3535,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "76"
										},
										{
											"begin": 3535,
											"end": 3698,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3620,
											"end": 3633,
											"name": "PUSH",
											"source": 21,
											"value": "9"
										},
										{
											"begin": 3620,
											"end": 3633,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 3607,
											"end": 3618,
											"name": "PUSH",
											"source": 21,
											"value": "5"
										},
										{
											"begin": 3607,
											"end": 3618,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 3600,
											"end": 3605,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 3594,
											"end": 3634,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3594,
											"end": 3634,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 3594,
											"end": 3634,
											"name": "PUSH",
											"source": 21,
											"value": "5A9EC13C12CA9563A7B3108125F74C57ED388BB313394EA50F7E4A71B01497C2"
										},
										{
											"begin": 3594,
											"end": 3634,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3594,
											"end": 3634,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3594,
											"end": 3634,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3594,
											"end": 3634,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3594,
											"end": 3634,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3594,
											"end": 3634,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3594,
											"end": 3634,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3594,
											"end": 3634,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3594,
											"end": 3634,
											"name": "LOG4",
											"source": 21
										},
										{
											"begin": 3661,
											"end": 3665,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 3667,
											"end": 3681,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3653,
											"end": 3682,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 3653,
											"end": 3682,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3653,
											"end": 3682,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 3653,
											"end": 3682,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3653,
											"end": 3682,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3653,
											"end": 3682,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3653,
											"end": 3682,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3653,
											"end": 3682,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3653,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "66"
										},
										{
											"begin": 3653,
											"end": 3682,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3535,
											"end": 3698,
											"name": "tag",
											"source": 21,
											"value": "76"
										},
										{
											"begin": 3535,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3386,
											"end": 3709,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3381,
											"end": 3384,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3381,
											"end": 3384,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3381,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "77"
										},
										{
											"begin": 3381,
											"end": 3384,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3381,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "78"
										},
										{
											"begin": 3381,
											"end": 3384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3381,
											"end": 3384,
											"name": "tag",
											"source": 21,
											"value": "77"
										},
										{
											"begin": 3381,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3381,
											"end": 3384,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3381,
											"end": 3384,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3381,
											"end": 3384,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3351,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "70"
										},
										{
											"begin": 3351,
											"end": 3709,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3351,
											"end": 3709,
											"name": "tag",
											"source": 21,
											"value": "71"
										},
										{
											"begin": 3351,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3351,
											"end": 3709,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3727,
											"end": 3732,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3734,
											"end": 3748,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3719,
											"end": 3749,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 3719,
											"end": 3749,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3719,
											"end": 3749,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 3719,
											"end": 3749,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3719,
											"end": 3749,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3719,
											"end": 3749,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "tag",
											"source": 21,
											"value": "66"
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3079,
											"end": 3757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 791,
											"end": 817,
											"name": "tag",
											"source": 21,
											"value": "38"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH",
											"source": 21,
											"value": "5"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 791,
											"end": 817,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 791,
											"end": 817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "tag",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH",
											"source": 21,
											"value": "8"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "79"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "61"
										},
										{
											"begin": 893,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "tag",
											"source": 21,
											"value": "79"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "61"
										},
										{
											"begin": 893,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "tag",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "81"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "82"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "81"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "tag",
											"source": 21,
											"value": "82"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "KECCAK256",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "tag",
											"source": 21,
											"value": "83"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "83"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "tag",
											"source": 21,
											"value": "81"
										},
										{
											"begin": 893,
											"end": 917,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 893,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "tag",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "61"
										},
										{
											"begin": 677,
											"end": 697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "tag",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "85"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "61"
										},
										{
											"begin": 677,
											"end": 697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "tag",
											"source": 21,
											"value": "85"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "86"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "87"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "86"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "tag",
											"source": 21,
											"value": "87"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "KECCAK256",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "tag",
											"source": 21,
											"value": "88"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "88"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "tag",
											"source": 21,
											"value": "86"
										},
										{
											"begin": 677,
											"end": 697,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 677,
											"end": 697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "tag",
											"source": 21,
											"value": "47"
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3910,
											"end": 3923,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 3942,
											"end": 3952,
											"name": "PUSH",
											"source": 21,
											"value": "8"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "90"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "61"
										},
										{
											"begin": 3935,
											"end": 3952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "tag",
											"source": 21,
											"value": "90"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "91"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "61"
										},
										{
											"begin": 3935,
											"end": 3952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "tag",
											"source": 21,
											"value": "91"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "92"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "93"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "92"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "tag",
											"source": 21,
											"value": "93"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "KECCAK256",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "tag",
											"source": 21,
											"value": "94"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "94"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "tag",
											"source": 21,
											"value": "92"
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3935,
											"end": 3952,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3864,
											"end": 3960,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3864,
											"end": 3960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 613,
											"end": 637,
											"name": "tag",
											"source": 21,
											"value": "50"
										},
										{
											"begin": 613,
											"end": 637,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 613,
											"end": 637,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 637,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 613,
											"end": 637,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 613,
											"end": 637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 824,
											"end": 848,
											"name": "tag",
											"source": 21,
											"value": "53"
										},
										{
											"begin": 824,
											"end": 848,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 824,
											"end": 848,
											"name": "PUSH",
											"source": 21,
											"value": "6"
										},
										{
											"begin": 824,
											"end": 848,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 824,
											"end": 848,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 824,
											"end": 848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 924,
											"end": 952,
											"name": "tag",
											"source": 21,
											"value": "57"
										},
										{
											"begin": 924,
											"end": 952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 924,
											"end": 952,
											"name": "PUSH",
											"source": 21,
											"value": "9"
										},
										{
											"begin": 924,
											"end": 952,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 924,
											"end": 952,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 924,
											"end": 952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 23,
											"value": "95"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 23,
											"value": "96"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "133"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "95"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 23,
											"value": "133"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 23,
											"value": "19"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "135"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "96"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 23,
											"value": "135"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 442,
											"end": 541,
											"name": "tag",
											"source": 23,
											"value": "97"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 522,
											"end": 534,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 512,
											"end": 534,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 512,
											"end": 534,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 442,
											"end": 541,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 442,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 547,
											"end": 716,
											"name": "tag",
											"source": 23,
											"value": "98"
										},
										{
											"begin": 547,
											"end": 716,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 653,
											"end": 672,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 703,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 696,
											"end": 710,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 681,
											"end": 710,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 681,
											"end": 710,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 547,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 722,
											"end": 861,
											"name": "tag",
											"source": 23,
											"value": "99"
										},
										{
											"begin": 722,
											"end": 861,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 811,
											"end": 817,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 806,
											"end": 809,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 801,
											"end": 804,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 795,
											"end": 818,
											"name": "MCOPY",
											"source": 23
										},
										{
											"begin": 852,
											"end": 853,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 849,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 838,
											"end": 841,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 834,
											"end": 850,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 827,
											"end": 854,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 722,
											"end": 861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 867,
											"end": 969,
											"name": "tag",
											"source": 23,
											"value": "100"
										},
										{
											"begin": 867,
											"end": 969,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 908,
											"end": 914,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 961,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 955,
											"end": 962,
											"name": "NOT",
											"source": 23
										},
										{
											"begin": 950,
											"end": 952,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 939,
											"end": 953,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 935,
											"end": 963,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 925,
											"end": 963,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 925,
											"end": 963,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 867,
											"end": 969,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 867,
											"end": 969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "tag",
											"source": 23,
											"value": "101"
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "141"
										},
										{
											"begin": 1124,
											"end": 1129,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "97"
										},
										{
											"begin": 1091,
											"end": 1130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "tag",
											"source": 23,
											"value": "141"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "142"
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "98"
										},
										{
											"begin": 1146,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "tag",
											"source": 23,
											"value": "142"
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "143"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1279,
											"end": 1282,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 1261,
											"end": 1277,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "99"
										},
										{
											"begin": 1226,
											"end": 1291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "tag",
											"source": 23,
											"value": "143"
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "144"
										},
										{
											"begin": 1338,
											"end": 1344,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "100"
										},
										{
											"begin": 1316,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "tag",
											"source": 23,
											"value": "144"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1311,
											"end": 1314,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 1307,
											"end": 1346,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1067,
											"end": 1352,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 975,
											"end": 1352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "tag",
											"source": 23,
											"value": "23"
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1471,
											"end": 1475,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1511,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1494,
											"end": 1512,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1552,
											"end": 1556,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1544,
											"end": 1545,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 1529,
											"end": 1546,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1522,
											"end": 1569,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "146"
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "101"
										},
										{
											"begin": 1586,
											"end": 1664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "tag",
											"source": 23,
											"value": "146"
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1358,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1677,
											"end": 1763,
											"name": "tag",
											"source": 23,
											"value": "102"
										},
										{
											"begin": 1677,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1712,
											"end": 1719,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1756,
											"name": "PUSH",
											"source": 23,
											"value": "FF"
										},
										{
											"begin": 1745,
											"end": 1750,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1741,
											"end": 1757,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 1730,
											"end": 1757,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1730,
											"end": 1757,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1677,
											"end": 1763,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1677,
											"end": 1763,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1677,
											"end": 1763,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1677,
											"end": 1763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1769,
											"end": 1881,
											"name": "tag",
											"source": 23,
											"value": "103"
										},
										{
											"begin": 1769,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1852,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "149"
										},
										{
											"begin": 1868,
											"end": 1873,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1852,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "102"
										},
										{
											"begin": 1852,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1852,
											"end": 1874,
											"name": "tag",
											"source": 23,
											"value": "149"
										},
										{
											"begin": 1852,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1847,
											"end": 1850,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1840,
											"end": 1875,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1769,
											"end": 1881,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1769,
											"end": 1881,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1769,
											"end": 1881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1887,
											"end": 2101,
											"name": "tag",
											"source": 23,
											"value": "30"
										},
										{
											"begin": 1887,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1976,
											"end": 1980,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2012,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1999,
											"end": 2017,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1991,
											"end": 2017,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1991,
											"end": 2017,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2027,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "151"
										},
										{
											"begin": 2091,
											"end": 2092,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2089,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 2076,
											"end": 2093,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 2027,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "103"
										},
										{
											"begin": 2027,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2027,
											"end": 2094,
											"name": "tag",
											"source": 23,
											"value": "151"
										},
										{
											"begin": 2027,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1887,
											"end": 2101,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1887,
											"end": 2101,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1887,
											"end": 2101,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1887,
											"end": 2101,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1887,
											"end": 2101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2182,
											"name": "tag",
											"source": 23,
											"value": "104"
										},
										{
											"begin": 2107,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2175,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 2167,
											"end": 2176,
											"name": "MLOAD",
											"source": 23
										},
										{
											"begin": 2157,
											"end": 2176,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2157,
											"end": 2176,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2182,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2107,
											"end": 2182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2188,
											"end": 2305,
											"name": "tag",
											"source": 23,
											"value": "105"
										},
										{
											"begin": 2188,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2297,
											"end": 2298,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2287,
											"end": 2299,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 2311,
											"end": 2428,
											"name": "tag",
											"source": 23,
											"value": "106"
										},
										{
											"begin": 2311,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2420,
											"end": 2421,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2418,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2410,
											"end": 2422,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 2434,
											"end": 2560,
											"name": "tag",
											"source": 23,
											"value": "107"
										},
										{
											"begin": 2434,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2471,
											"end": 2478,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2553,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2500,
											"end": 2554,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 2489,
											"end": 2554,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2489,
											"end": 2554,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2434,
											"end": 2560,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2434,
											"end": 2560,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2434,
											"end": 2560,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2434,
											"end": 2560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2566,
											"end": 2662,
											"name": "tag",
											"source": 23,
											"value": "108"
										},
										{
											"begin": 2566,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2603,
											"end": 2610,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "157"
										},
										{
											"begin": 2650,
											"end": 2655,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "107"
										},
										{
											"begin": 2632,
											"end": 2656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "tag",
											"source": 23,
											"value": "157"
										},
										{
											"begin": 2632,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2621,
											"end": 2656,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2621,
											"end": 2656,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2566,
											"end": 2662,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2566,
											"end": 2662,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2566,
											"end": 2662,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2566,
											"end": 2662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2668,
											"end": 2790,
											"name": "tag",
											"source": 23,
											"value": "109"
										},
										{
											"begin": 2668,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2741,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "159"
										},
										{
											"begin": 2759,
											"end": 2764,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2741,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "108"
										},
										{
											"begin": 2741,
											"end": 2765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2741,
											"end": 2765,
											"name": "tag",
											"source": 23,
											"value": "159"
										},
										{
											"begin": 2741,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2734,
											"end": 2739,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2731,
											"end": 2766,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 2721,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "160"
										},
										{
											"begin": 2721,
											"end": 2784,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 2780,
											"end": 2781,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2777,
											"end": 2778,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 2721,
											"end": 2784,
											"name": "tag",
											"source": 23,
											"value": "160"
										},
										{
											"begin": 2721,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2668,
											"end": 2790,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2668,
											"end": 2790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2796,
											"end": 2935,
											"name": "tag",
											"source": 23,
											"value": "110"
										},
										{
											"begin": 2796,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2842,
											"end": 2847,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2880,
											"end": 2886,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2867,
											"end": 2887,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 2858,
											"end": 2887,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2858,
											"end": 2887,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2896,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "162"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2896,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "109"
										},
										{
											"begin": 2896,
											"end": 2929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2896,
											"end": 2929,
											"name": "tag",
											"source": 23,
											"value": "162"
										},
										{
											"begin": 2896,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2796,
											"end": 2935,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 2796,
											"end": 2935,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2796,
											"end": 2935,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2796,
											"end": 2935,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2796,
											"end": 2935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2941,
											"end": 3058,
											"name": "tag",
											"source": 23,
											"value": "111"
										},
										{
											"begin": 2941,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3050,
											"end": 3051,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3048,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 3040,
											"end": 3052,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 3064,
											"end": 3181,
											"name": "tag",
											"source": 23,
											"value": "112"
										},
										{
											"begin": 3064,
											"end": 3181,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3173,
											"end": 3174,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3171,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 3163,
											"end": 3175,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 3187,
											"end": 3367,
											"name": "tag",
											"source": 23,
											"value": "113"
										},
										{
											"begin": 3187,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3235,
											"end": 3312,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3232,
											"end": 3233,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3313,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 3332,
											"end": 3336,
											"name": "PUSH",
											"source": 23,
											"value": "41"
										},
										{
											"begin": 3329,
											"end": 3330,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 3322,
											"end": 3337,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 3356,
											"end": 3360,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 3353,
											"end": 3354,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3361,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 3373,
											"end": 3654,
											"name": "tag",
											"source": 23,
											"value": "114"
										},
										{
											"begin": 3373,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3456,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "167"
										},
										{
											"begin": 3478,
											"end": 3482,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3456,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "100"
										},
										{
											"begin": 3456,
											"end": 3483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3456,
											"end": 3483,
											"name": "tag",
											"source": 23,
											"value": "167"
										},
										{
											"begin": 3456,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3448,
											"end": 3454,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3444,
											"end": 3484,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3586,
											"end": 3592,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3574,
											"end": 3584,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "LT",
											"source": 23
										},
										{
											"begin": 3550,
											"end": 3568,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3538,
											"end": 3548,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3535,
											"end": 3569,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 3532,
											"end": 3594,
											"name": "OR",
											"source": 23
										},
										{
											"begin": 3529,
											"end": 3617,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 3529,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "168"
										},
										{
											"begin": 3529,
											"end": 3617,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 3597,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "169"
										},
										{
											"begin": 3597,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "113"
										},
										{
											"begin": 3597,
											"end": 3615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3597,
											"end": 3615,
											"name": "tag",
											"source": 23,
											"value": "169"
										},
										{
											"begin": 3597,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3529,
											"end": 3617,
											"name": "tag",
											"source": 23,
											"value": "168"
										},
										{
											"begin": 3529,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3637,
											"end": 3647,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 3633,
											"end": 3635,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 3626,
											"end": 3648,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 3416,
											"end": 3654,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3373,
											"end": 3654,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3373,
											"end": 3654,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3373,
											"end": 3654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3660,
											"end": 3789,
											"name": "tag",
											"source": 23,
											"value": "115"
										},
										{
											"begin": 3660,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3694,
											"end": 3700,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3721,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "171"
										},
										{
											"begin": 3721,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "104"
										},
										{
											"begin": 3721,
											"end": 3741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3721,
											"end": 3741,
											"name": "tag",
											"source": 23,
											"value": "171"
										},
										{
											"begin": 3721,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3711,
											"end": 3741,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3711,
											"end": 3741,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3750,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "172"
										},
										{
											"begin": 3778,
											"end": 3782,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3770,
											"end": 3776,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3750,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "114"
										},
										{
											"begin": 3750,
											"end": 3783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3750,
											"end": 3783,
											"name": "tag",
											"source": 23,
											"value": "172"
										},
										{
											"begin": 3750,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3660,
											"end": 3789,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3660,
											"end": 3789,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3660,
											"end": 3789,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3660,
											"end": 3789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3795,
											"end": 4103,
											"name": "tag",
											"source": 23,
											"value": "116"
										},
										{
											"begin": 3795,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3857,
											"end": 3861,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3965,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3939,
											"end": 3945,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3936,
											"end": 3966,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 3933,
											"end": 3989,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 3933,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "174"
										},
										{
											"begin": 3933,
											"end": 3989,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 3969,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "175"
										},
										{
											"begin": 3969,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "113"
										},
										{
											"begin": 3969,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3969,
											"end": 3987,
											"name": "tag",
											"source": 23,
											"value": "175"
										},
										{
											"begin": 3969,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3933,
											"end": 3989,
											"name": "tag",
											"source": 23,
											"value": "174"
										},
										{
											"begin": 3933,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4007,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "176"
										},
										{
											"begin": 4029,
											"end": 4035,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4007,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "100"
										},
										{
											"begin": 4007,
											"end": 4036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4007,
											"end": 4036,
											"name": "tag",
											"source": 23,
											"value": "176"
										},
										{
											"begin": 4007,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3999,
											"end": 4036,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3999,
											"end": 4036,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4091,
											"end": 4095,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 4085,
											"end": 4089,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4081,
											"end": 4096,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4073,
											"end": 4096,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4073,
											"end": 4096,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3795,
											"end": 4103,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3795,
											"end": 4103,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3795,
											"end": 4103,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3795,
											"end": 4103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4109,
											"end": 4257,
											"name": "tag",
											"source": 23,
											"value": "117"
										},
										{
											"begin": 4109,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4207,
											"end": 4213,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4202,
											"end": 4205,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4197,
											"end": 4200,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 4184,
											"end": 4214,
											"name": "CALLDATACOPY",
											"source": 23
										},
										{
											"begin": 4248,
											"end": 4249,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4239,
											"end": 4245,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 4234,
											"end": 4237,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 4230,
											"end": 4246,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4223,
											"end": 4250,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 4109,
											"end": 4257,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4109,
											"end": 4257,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4109,
											"end": 4257,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4109,
											"end": 4257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4263,
											"end": 4688,
											"name": "tag",
											"source": 23,
											"value": "118"
										},
										{
											"begin": 4263,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4341,
											"end": 4346,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4366,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "179"
										},
										{
											"begin": 4382,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "180"
										},
										{
											"begin": 4424,
											"end": 4430,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 4382,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "116"
										},
										{
											"begin": 4382,
											"end": 4431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4382,
											"end": 4431,
											"name": "tag",
											"source": 23,
											"value": "180"
										},
										{
											"begin": 4382,
											"end": 4431,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4366,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "115"
										},
										{
											"begin": 4366,
											"end": 4432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4366,
											"end": 4432,
											"name": "tag",
											"source": 23,
											"value": "179"
										},
										{
											"begin": 4366,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4357,
											"end": 4432,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4357,
											"end": 4432,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4448,
											"end": 4453,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4441,
											"end": 4462,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 4493,
											"end": 4497,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 4486,
											"end": 4491,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4482,
											"end": 4498,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4531,
											"end": 4534,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 4522,
											"end": 4528,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 4517,
											"end": 4520,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 4513,
											"end": 4529,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4510,
											"end": 4535,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 4507,
											"end": 4619,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 4507,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "181"
										},
										{
											"begin": 4507,
											"end": 4619,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "182"
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "112"
										},
										{
											"begin": 4538,
											"end": 4617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "tag",
											"source": 23,
											"value": "182"
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4507,
											"end": 4619,
											"name": "tag",
											"source": 23,
											"value": "181"
										},
										{
											"begin": 4507,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4628,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "183"
										},
										{
											"begin": 4675,
											"end": 4681,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 4670,
											"end": 4673,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4665,
											"end": 4668,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 4628,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "117"
										},
										{
											"begin": 4628,
											"end": 4682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4628,
											"end": 4682,
											"name": "tag",
											"source": 23,
											"value": "183"
										},
										{
											"begin": 4628,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4347,
											"end": 4688,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4263,
											"end": 4688,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 4263,
											"end": 4688,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 4263,
											"end": 4688,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4263,
											"end": 4688,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4263,
											"end": 4688,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4263,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4708,
											"end": 5048,
											"name": "tag",
											"source": 23,
											"value": "119"
										},
										{
											"begin": 4708,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4764,
											"end": 4769,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4813,
											"end": 4816,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4806,
											"end": 4810,
											"name": "PUSH",
											"source": 23,
											"value": "1F"
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 4794,
											"end": 4811,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4790,
											"end": 4817,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 4780,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "185"
										},
										{
											"begin": 4780,
											"end": 4902,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 4821,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "186"
										},
										{
											"begin": 4821,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "111"
										},
										{
											"begin": 4821,
											"end": 4900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4821,
											"end": 4900,
											"name": "tag",
											"source": 23,
											"value": "186"
										},
										{
											"begin": 4821,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4780,
											"end": 4902,
											"name": "tag",
											"source": 23,
											"value": "185"
										},
										{
											"begin": 4780,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4938,
											"end": 4944,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4925,
											"end": 4945,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "187"
										},
										{
											"begin": 5038,
											"end": 5041,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 5030,
											"end": 5036,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5023,
											"end": 5027,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 5015,
											"end": 5021,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 5011,
											"end": 5028,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "118"
										},
										{
											"begin": 4963,
											"end": 5042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "tag",
											"source": 23,
											"value": "187"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4954,
											"end": 5042,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4954,
											"end": 5042,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4770,
											"end": 5048,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4708,
											"end": 5048,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 4708,
											"end": 5048,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4708,
											"end": 5048,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4708,
											"end": 5048,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4708,
											"end": 5048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5054,
											"end": 5708,
											"name": "tag",
											"source": 23,
											"value": "33"
										},
										{
											"begin": 5054,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5132,
											"end": 5138,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "189"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "190"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "105"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 23,
											"value": "190"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 23,
											"value": "189"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "191"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "110"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 23,
											"value": "191"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5470,
											"end": 5472,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 5459,
											"end": 5468,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 5455,
											"end": 5473,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5442,
											"end": 5474,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 5501,
											"end": 5519,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5493,
											"end": 5499,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5490,
											"end": 5520,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 5487,
											"end": 5604,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 5487,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "192"
										},
										{
											"begin": 5487,
											"end": 5604,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 5523,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "193"
										},
										{
											"begin": 5523,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "106"
										},
										{
											"begin": 5523,
											"end": 5602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5523,
											"end": 5602,
											"name": "tag",
											"source": 23,
											"value": "193"
										},
										{
											"begin": 5523,
											"end": 5602,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5487,
											"end": 5604,
											"name": "tag",
											"source": 23,
											"value": "192"
										},
										{
											"begin": 5487,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "194"
										},
										{
											"begin": 5683,
											"end": 5690,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 5674,
											"end": 5680,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5663,
											"end": 5672,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 5659,
											"end": 5681,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "119"
										},
										{
											"begin": 5628,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "tag",
											"source": 23,
											"value": "194"
										},
										{
											"begin": 5628,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5618,
											"end": 5691,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 5618,
											"end": 5691,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5413,
											"end": 5701,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5054,
											"end": 5708,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5054,
											"end": 5708,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5054,
											"end": 5708,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 5054,
											"end": 5708,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5054,
											"end": 5708,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5054,
											"end": 5708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5714,
											"end": 5804,
											"name": "tag",
											"source": 23,
											"value": "120"
										},
										{
											"begin": 5714,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5748,
											"end": 5755,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5791,
											"end": 5796,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5784,
											"end": 5797,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 5777,
											"end": 5798,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5714,
											"end": 5804,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 5714,
											"end": 5804,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5714,
											"end": 5804,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5714,
											"end": 5804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5810,
											"end": 5919,
											"name": "tag",
											"source": 23,
											"value": "121"
										},
										{
											"begin": 5810,
											"end": 5919,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5891,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "197"
										},
										{
											"begin": 5906,
											"end": 5911,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5891,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "120"
										},
										{
											"begin": 5891,
											"end": 5912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5891,
											"end": 5912,
											"name": "tag",
											"source": 23,
											"value": "197"
										},
										{
											"begin": 5891,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5886,
											"end": 5889,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5879,
											"end": 5913,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 5810,
											"end": 5919,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5810,
											"end": 5919,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5810,
											"end": 5919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5925,
											"end": 6002,
											"name": "tag",
											"source": 23,
											"value": "122"
										},
										{
											"begin": 5925,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5962,
											"end": 5969,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5991,
											"end": 5996,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5925,
											"end": 6002,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 5925,
											"end": 6002,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5925,
											"end": 6002,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5925,
											"end": 6002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6008,
											"end": 6126,
											"name": "tag",
											"source": 23,
											"value": "123"
										},
										{
											"begin": 6008,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6095,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "200"
										},
										{
											"begin": 6113,
											"end": 6118,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6095,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "122"
										},
										{
											"begin": 6095,
											"end": 6119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6095,
											"end": 6119,
											"name": "tag",
											"source": 23,
											"value": "200"
										},
										{
											"begin": 6095,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6090,
											"end": 6093,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6083,
											"end": 6120,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 6008,
											"end": 6126,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6008,
											"end": 6126,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6008,
											"end": 6126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6132,
											"end": 6452,
											"name": "tag",
											"source": 23,
											"value": "36"
										},
										{
											"begin": 6132,
											"end": 6452,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6247,
											"end": 6251,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6285,
											"end": 6287,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 6274,
											"end": 6283,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6270,
											"end": 6288,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6262,
											"end": 6288,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6262,
											"end": 6288,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6298,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "202"
										},
										{
											"begin": 6360,
											"end": 6361,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6358,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 6345,
											"end": 6362,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6336,
											"end": 6342,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 6298,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "121"
										},
										{
											"begin": 6298,
											"end": 6363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6298,
											"end": 6363,
											"name": "tag",
											"source": 23,
											"value": "202"
										},
										{
											"begin": 6298,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6373,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "203"
										},
										{
											"begin": 6441,
											"end": 6443,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 6430,
											"end": 6439,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 6426,
											"end": 6444,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6417,
											"end": 6423,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 6373,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "123"
										},
										{
											"begin": 6373,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6373,
											"end": 6445,
											"name": "tag",
											"source": 23,
											"value": "203"
										},
										{
											"begin": 6373,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6132,
											"end": 6452,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 6132,
											"end": 6452,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 6132,
											"end": 6452,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6132,
											"end": 6452,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6132,
											"end": 6452,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6132,
											"end": 6452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6458,
											"end": 6680,
											"name": "tag",
											"source": 23,
											"value": "55"
										},
										{
											"begin": 6458,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6551,
											"end": 6555,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6591,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 6578,
											"end": 6587,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6574,
											"end": 6592,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6566,
											"end": 6592,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6566,
											"end": 6592,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6602,
											"end": 6673,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "205"
										},
										{
											"begin": 6670,
											"end": 6671,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6659,
											"end": 6668,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 6655,
											"end": 6672,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6646,
											"end": 6652,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 6602,
											"end": 6673,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "123"
										},
										{
											"begin": 6602,
											"end": 6673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6602,
											"end": 6673,
											"name": "tag",
											"source": 23,
											"value": "205"
										},
										{
											"begin": 6602,
											"end": 6673,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6458,
											"end": 6680,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 6458,
											"end": 6680,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6458,
											"end": 6680,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6458,
											"end": 6680,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6458,
											"end": 6680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6686,
											"end": 6866,
											"name": "tag",
											"source": 23,
											"value": "124"
										},
										{
											"begin": 6686,
											"end": 6866,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6734,
											"end": 6811,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6731,
											"end": 6732,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6724,
											"end": 6812,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 6831,
											"end": 6835,
											"name": "PUSH",
											"source": 23,
											"value": "22"
										},
										{
											"begin": 6828,
											"end": 6829,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 6821,
											"end": 6836,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 6855,
											"end": 6859,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 6852,
											"end": 6853,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6845,
											"end": 6860,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 6872,
											"end": 7192,
											"name": "tag",
											"source": 23,
											"value": "61"
										},
										{
											"begin": 6872,
											"end": 7192,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6916,
											"end": 6922,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 6954,
											"name": "PUSH",
											"source": 23,
											"value": "2"
										},
										{
											"begin": 6947,
											"end": 6951,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6943,
											"end": 6955,
											"name": "DIV",
											"source": 23
										},
										{
											"begin": 6933,
											"end": 6955,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6933,
											"end": 6955,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7000,
											"end": 7001,
											"name": "PUSH",
											"source": 23,
											"value": "1"
										},
										{
											"begin": 6994,
											"end": 6998,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6990,
											"end": 7002,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 7021,
											"end": 7039,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 7011,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "208"
										},
										{
											"begin": 7011,
											"end": 7092,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 7077,
											"end": 7081,
											"name": "PUSH",
											"source": 23,
											"value": "7F"
										},
										{
											"begin": 7069,
											"end": 7075,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7065,
											"end": 7082,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 7055,
											"end": 7082,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7055,
											"end": 7082,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7011,
											"end": 7092,
											"name": "tag",
											"source": 23,
											"value": "208"
										},
										{
											"begin": 7011,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7139,
											"end": 7141,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 7131,
											"end": 7137,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "LT",
											"source": 23
										},
										{
											"begin": 7108,
											"end": 7126,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7105,
											"end": 7143,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 7102,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "209"
										},
										{
											"begin": 7102,
											"end": 7186,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 7158,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "210"
										},
										{
											"begin": 7158,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "124"
										},
										{
											"begin": 7158,
											"end": 7176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7158,
											"end": 7176,
											"name": "tag",
											"source": 23,
											"value": "210"
										},
										{
											"begin": 7158,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7102,
											"end": 7186,
											"name": "tag",
											"source": 23,
											"value": "209"
										},
										{
											"begin": 7102,
											"end": 7186,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6923,
											"end": 7192,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6872,
											"end": 7192,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6872,
											"end": 7192,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6872,
											"end": 7192,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6872,
											"end": 7192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7198,
											"end": 7346,
											"name": "tag",
											"source": 23,
											"value": "125"
										},
										{
											"begin": 7198,
											"end": 7346,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7300,
											"end": 7311,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7337,
											"end": 7340,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7322,
											"end": 7340,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7322,
											"end": 7340,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7198,
											"end": 7346,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 7198,
											"end": 7346,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7198,
											"end": 7346,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7198,
											"end": 7346,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7198,
											"end": 7346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7352,
											"end": 7493,
											"name": "tag",
											"source": 23,
											"value": "126"
										},
										{
											"begin": 7352,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7401,
											"end": 7405,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7424,
											"end": 7427,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7416,
											"end": 7427,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7416,
											"end": 7427,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7447,
											"end": 7450,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7444,
											"end": 7445,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7451,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 7481,
											"end": 7485,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 7478,
											"end": 7479,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7468,
											"end": 7486,
											"name": "KECCAK256",
											"source": 23
										},
										{
											"begin": 7460,
											"end": 7486,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7460,
											"end": 7486,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7352,
											"end": 7493,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7352,
											"end": 7493,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7352,
											"end": 7493,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7352,
											"end": 7493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7523,
											"end": 8397,
											"name": "tag",
											"source": 23,
											"value": "127"
										},
										{
											"begin": 7523,
											"end": 8397,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7626,
											"end": 7629,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7663,
											"end": 7668,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7657,
											"end": 7669,
											"name": "SLOAD",
											"source": 23
										},
										{
											"begin": 7692,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "214"
										},
										{
											"begin": 7718,
											"end": 7727,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7692,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "61"
										},
										{
											"begin": 7692,
											"end": 7728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7692,
											"end": 7728,
											"name": "tag",
											"source": 23,
											"value": "214"
										},
										{
											"begin": 7692,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7744,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "215"
										},
										{
											"begin": 7826,
											"end": 7832,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7821,
											"end": 7824,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 7744,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "125"
										},
										{
											"begin": 7744,
											"end": 7833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7744,
											"end": 7833,
											"name": "tag",
											"source": 23,
											"value": "215"
										},
										{
											"begin": 7744,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7737,
											"end": 7833,
											"name": "SWAP5",
											"source": 23
										},
										{
											"begin": 7737,
											"end": 7833,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 23,
											"value": "1"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7849,
											"end": 7866,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 7880,
											"end": 7881,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7875,
											"end": 8041,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7875,
											"end": 8041,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 7875,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "217"
										},
										{
											"begin": 7875,
											"end": 8041,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 8055,
											"end": 8056,
											"name": "PUSH",
											"source": 23,
											"value": "1"
										},
										{
											"begin": 8050,
											"end": 8391,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8050,
											"end": 8391,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 8050,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "218"
										},
										{
											"begin": 8050,
											"end": 8391,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 7842,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "216"
										},
										{
											"begin": 7842,
											"end": 8391,
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7875,
											"end": 8041,
											"name": "tag",
											"source": 23,
											"value": "217"
										},
										{
											"begin": 7875,
											"end": 8041,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7959,
											"end": 7963,
											"name": "PUSH",
											"source": 23,
											"value": "FF"
										},
										{
											"begin": 7955,
											"end": 7964,
											"name": "NOT",
											"source": 23
										},
										{
											"begin": 7944,
											"end": 7953,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 7940,
											"end": 7965,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 7935,
											"end": 7938,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 7928,
											"end": 7966,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 8021,
											"end": 8027,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8014,
											"end": 8028,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 8007,
											"end": 8029,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 7999,
											"end": 8005,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7995,
											"end": 8030,
											"name": "MUL",
											"source": 23
										},
										{
											"begin": 7990,
											"end": 7993,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 7986,
											"end": 8031,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 7979,
											"end": 8031,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 7979,
											"end": 8031,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7875,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "216"
										},
										{
											"begin": 7875,
											"end": 8041,
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8050,
											"end": 8391,
											"name": "tag",
											"source": 23,
											"value": "218"
										},
										{
											"begin": 8050,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8117,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "219"
										},
										{
											"begin": 8149,
											"end": 8154,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 8117,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "126"
										},
										{
											"begin": 8117,
											"end": 8155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8117,
											"end": 8155,
											"name": "tag",
											"source": 23,
											"value": "219"
										},
										{
											"begin": 8117,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8177,
											"end": 8178,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8191,
											"end": 8345,
											"name": "tag",
											"source": 23,
											"value": "220"
										},
										{
											"begin": 8191,
											"end": 8345,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8205,
											"end": 8211,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 8202,
											"end": 8203,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8199,
											"end": 8212,
											"name": "LT",
											"source": 23
										},
										{
											"begin": 8191,
											"end": 8345,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 8191,
											"end": 8345,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "222"
										},
										{
											"begin": 8191,
											"end": 8345,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 8279,
											"end": 8286,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8273,
											"end": 8287,
											"name": "SLOAD",
											"source": 23
										},
										{
											"begin": 8269,
											"end": 8270,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8264,
											"end": 8267,
											"name": "DUP10",
											"source": 23
										},
										{
											"begin": 8260,
											"end": 8271,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8253,
											"end": 8288,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 8329,
											"end": 8330,
											"name": "PUSH",
											"source": 23,
											"value": "1"
										},
										{
											"begin": 8320,
											"end": 8327,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 8316,
											"end": 8331,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8305,
											"end": 8331,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 8305,
											"end": 8331,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8227,
											"end": 8231,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 8224,
											"end": 8225,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8220,
											"end": 8232,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8215,
											"end": 8232,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 8215,
											"end": 8232,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8191,
											"end": 8345,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "220"
										},
										{
											"begin": 8191,
											"end": 8345,
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8191,
											"end": 8345,
											"name": "tag",
											"source": 23,
											"value": "222"
										},
										{
											"begin": 8191,
											"end": 8345,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8374,
											"end": 8380,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 8369,
											"end": 8372,
											"name": "DUP9",
											"source": 23
										},
										{
											"begin": 8365,
											"end": 8381,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8358,
											"end": 8381,
											"name": "SWAP6",
											"source": 23
										},
										{
											"begin": 8358,
											"end": 8381,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8057,
											"end": 8391,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8057,
											"end": 8391,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7842,
											"end": 8391,
											"name": "tag",
											"source": 23,
											"value": "216"
										},
										{
											"begin": 7842,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7842,
											"end": 8391,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7630,
											"end": 8397,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7630,
											"end": 8397,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7523,
											"end": 8397,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 7523,
											"end": 8397,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7523,
											"end": 8397,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7523,
											"end": 8397,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7523,
											"end": 8397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8403,
											"end": 8793,
											"name": "tag",
											"source": 23,
											"value": "128"
										},
										{
											"begin": 8403,
											"end": 8793,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8509,
											"end": 8512,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8537,
											"end": 8576,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "224"
										},
										{
											"begin": 8570,
											"end": 8575,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 8537,
											"end": 8576,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "97"
										},
										{
											"begin": 8537,
											"end": 8576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8537,
											"end": 8576,
											"name": "tag",
											"source": 23,
											"value": "224"
										},
										{
											"begin": 8537,
											"end": 8576,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8592,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "225"
										},
										{
											"begin": 8674,
											"end": 8680,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8669,
											"end": 8672,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 8592,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "125"
										},
										{
											"begin": 8592,
											"end": 8681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8592,
											"end": 8681,
											"name": "tag",
											"source": 23,
											"value": "225"
										},
										{
											"begin": 8592,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8585,
											"end": 8681,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 8585,
											"end": 8681,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8690,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "226"
										},
										{
											"begin": 8748,
											"end": 8754,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 8743,
											"end": 8746,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 8736,
											"end": 8740,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 8729,
											"end": 8734,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 8725,
											"end": 8741,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8690,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "99"
										},
										{
											"begin": 8690,
											"end": 8755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8690,
											"end": 8755,
											"name": "tag",
											"source": 23,
											"value": "226"
										},
										{
											"begin": 8690,
											"end": 8755,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8780,
											"end": 8786,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 8775,
											"end": 8778,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 8771,
											"end": 8787,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 8764,
											"end": 8787,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 8764,
											"end": 8787,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8513,
											"end": 8793,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8403,
											"end": 8793,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 8403,
											"end": 8793,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 8403,
											"end": 8793,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8403,
											"end": 8793,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8403,
											"end": 8793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8799,
											"end": 9228,
											"name": "tag",
											"source": 23,
											"value": "68"
										},
										{
											"begin": 8799,
											"end": 9228,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8976,
											"end": 8979,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 8998,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "228"
										},
										{
											"begin": 9086,
											"end": 9089,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9077,
											"end": 9083,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 8998,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "127"
										},
										{
											"begin": 8998,
											"end": 9090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 8998,
											"end": 9090,
											"name": "tag",
											"source": 23,
											"value": "228"
										},
										{
											"begin": 8998,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 8991,
											"end": 9090,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 8991,
											"end": 9090,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9107,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "229"
										},
										{
											"begin": 9198,
											"end": 9201,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9189,
											"end": 9195,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 9107,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "128"
										},
										{
											"begin": 9107,
											"end": 9202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9107,
											"end": 9202,
											"name": "tag",
											"source": 23,
											"value": "229"
										},
										{
											"begin": 9107,
											"end": 9202,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9100,
											"end": 9202,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 9100,
											"end": 9202,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9219,
											"end": 9222,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 9212,
											"end": 9222,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 9212,
											"end": 9222,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8799,
											"end": 9228,
											"name": "SWAP4",
											"source": 23
										},
										{
											"begin": 8799,
											"end": 9228,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 8799,
											"end": 9228,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8799,
											"end": 9228,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8799,
											"end": 9228,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 8799,
											"end": 9228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9234,
											"end": 9414,
											"name": "tag",
											"source": 23,
											"value": "75"
										},
										{
											"begin": 9234,
											"end": 9414,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9282,
											"end": 9359,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9279,
											"end": 9280,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9272,
											"end": 9360,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 9379,
											"end": 9383,
											"name": "PUSH",
											"source": 23,
											"value": "32"
										},
										{
											"begin": 9376,
											"end": 9377,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 9369,
											"end": 9384,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 9403,
											"end": 9407,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 9400,
											"end": 9401,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 9420,
											"end": 9600,
											"name": "tag",
											"source": 23,
											"value": "129"
										},
										{
											"begin": 9420,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9468,
											"end": 9545,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9465,
											"end": 9466,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9458,
											"end": 9546,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 9565,
											"end": 9569,
											"name": "PUSH",
											"source": 23,
											"value": "11"
										},
										{
											"begin": 9562,
											"end": 9563,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 9555,
											"end": 9570,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 9589,
											"end": 9593,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 9586,
											"end": 9587,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9579,
											"end": 9594,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 9606,
											"end": 9773,
											"name": "tag",
											"source": 23,
											"value": "78"
										},
										{
											"begin": 9606,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9643,
											"end": 9646,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 9666,
											"end": 9688,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "233"
										},
										{
											"begin": 9682,
											"end": 9687,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9666,
											"end": 9688,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "102"
										},
										{
											"begin": 9666,
											"end": 9688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9666,
											"end": 9688,
											"name": "tag",
											"source": 23,
											"value": "233"
										},
										{
											"begin": 9666,
											"end": 9688,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9657,
											"end": 9688,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 9657,
											"end": 9688,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9710,
											"end": 9714,
											"name": "PUSH",
											"source": 23,
											"value": "FF"
										},
										{
											"begin": 9703,
											"end": 9708,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9700,
											"end": 9715,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 9697,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "234"
										},
										{
											"begin": 9697,
											"end": 9738,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 9718,
											"end": 9736,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "235"
										},
										{
											"begin": 9718,
											"end": 9736,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "129"
										},
										{
											"begin": 9718,
											"end": 9736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 9718,
											"end": 9736,
											"name": "tag",
											"source": 23,
											"value": "235"
										},
										{
											"begin": 9718,
											"end": 9736,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9697,
											"end": 9738,
											"name": "tag",
											"source": 23,
											"value": "234"
										},
										{
											"begin": 9697,
											"end": 9738,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 9765,
											"end": 9766,
											"name": "PUSH",
											"source": 23,
											"value": "1"
										},
										{
											"begin": 9758,
											"end": 9763,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 9754,
											"end": 9767,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 9747,
											"end": 9767,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 9747,
											"end": 9767,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9606,
											"end": 9773,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 9606,
											"end": 9773,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 9606,
											"end": 9773,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 9606,
											"end": 9773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@trt-utils/TRTStrings.sol",
								"contracts/MiningContract.sol",
								"contracts/StakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"blockHash()": "f22a195e",
							"blockNumber()": "57e871e7",
							"exchangeRate()": "3ba0b9a9",
							"getMiningTask()": "b62a62ec",
							"getRewards()": "0572b0cc",
							"maxTokens()": "e8315742",
							"mineTokens(address,string)": "4fc8a991",
							"miningRewards()": "f82900b1",
							"miningTask()": "6a49f979",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"exchRate\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxTok\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symb\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nameGet\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSup\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"miner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"minedBlockNumber\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"}],\"name\":\"Mined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"minedBlockNumber\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"miningTask\",\"type\":\"string\"}],\"name\":\"MiningRunning\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"blockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMiningTask\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"miner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"mineTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningTask\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MiningContract.sol\":\"MiningContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@trt-utils/TRTStrings.sol\":{\"keccak256\":\"0xd8e62453a12988c284c296f504e661e85bcf28473a59204fb60db867ab920a3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eab2fd6003fecd776b6869c151862157fbee8e2d59efa78415a76c6381700c\",\"dweb:/ipfs/QmXG3yxccug87PAZQtCAc5zyVQhy1YVqrjcktLDKgxN3Ez\"]},\"contracts/MiningContract.sol\":{\"keccak256\":\"0xeb5bebdacffe939ddf839a235b9afdd3efdc19ef307b0e2699625b6af78f8b4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cd3ebb88976fe406b742f561b5da06511411384909b6f7a748913a84a500abc\",\"dweb:/ipfs/QmPyvnpAYEtmXDXWgwwLfLYWT33sPnjSZc9LMeC9uSkdRQ\"]},\"contracts/StakingContract.sol\":{\"keccak256\":\"0x2ac5bdfbe1ceb6c518d73b59af64ed01cc33493500f09607148fb70b075d469a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d2b8a95213d36eede4d524a7115be15b5920757f32ba9f407068d73bb9446b0\",\"dweb:/ipfs/QmPQwwNTx6NhNVhTXPHQt6Ar6g1D3GeAsaW9zLJVVdG6T4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3806,
								"contract": "contracts/MiningContract.sol:MiningContract",
								"label": "maxTokens",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 3808,
								"contract": "contracts/MiningContract.sol:MiningContract",
								"label": "totalSupply",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 3810,
								"contract": "contracts/MiningContract.sol:MiningContract",
								"label": "symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 3812,
								"contract": "contracts/MiningContract.sol:MiningContract",
								"label": "name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 3814,
								"contract": "contracts/MiningContract.sol:MiningContract",
								"label": "exchangeRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 3816,
								"contract": "contracts/MiningContract.sol:MiningContract",
								"label": "blockNumber",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 3818,
								"contract": "contracts/MiningContract.sol:MiningContract",
								"label": "blockHash",
								"offset": 0,
								"slot": "6",
								"type": "t_bytes32"
							},
							{
								"astId": 3821,
								"contract": "contracts/MiningContract.sol:MiningContract",
								"label": "rewardRate",
								"offset": 0,
								"slot": "7",
								"type": "t_uint8"
							},
							{
								"astId": 3823,
								"contract": "contracts/MiningContract.sol:MiningContract",
								"label": "miningTask",
								"offset": 0,
								"slot": "8",
								"type": "t_string_storage"
							},
							{
								"astId": 3825,
								"contract": "contracts/MiningContract.sol:MiningContract",
								"label": "miningRewards",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 3828,
								"contract": "contracts/MiningContract.sol:MiningContract",
								"label": "PREFIXLENGTH",
								"offset": 0,
								"slot": "10",
								"type": "t_uint8"
							},
							{
								"astId": 3831,
								"contract": "contracts/MiningContract.sol:MiningContract",
								"label": "PREFIXHASHVALUE",
								"offset": 1,
								"slot": "10",
								"type": "t_bytes1"
							}
						],
						"types": {
							"t_bytes1": {
								"encoding": "inplace",
								"label": "bytes1",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/StakingContract.sol": {
				"StakingContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Rewarded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakersAddresses",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StakingContract.sol\":105:2164  contract StakingContract {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/StakingContract.sol\":542:558  constructor() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/StakingContract.sol\":105:2164  contract StakingContract {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StakingContract.sol\":105:2164  contract StakingContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9168ae72\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x9168ae72\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xadc9772e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xbf9befb1\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc2a672e0\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x0700037d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0e15561a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3d42071c\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/StakingContract.sol\":253:295  mapping(address => uint256) public rewards */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingContract.sol\":170:197  uint256 public totalRewards */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingContract.sol\":302:335  address[] public stakersAddresses */\n    tag_5:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingContract.sol\":204:246  mapping(address => uint256) public stakers */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingContract.sol\":607:929  function stake(address staker, uint256 amount) public {... */\n    tag_7:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/StakingContract.sol\":137:163  uint256 public totalStakes */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingContract.sol\":980:1398  function unstake(address staker, uint256 amount) public returns (bool) {... */\n    tag_9:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingContract.sol\":253:295  mapping(address => uint256) public rewards */\n    tag_14:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/StakingContract.sol\":170:197  uint256 public totalRewards */\n    tag_18:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingContract.sol\":302:335  address[] public stakersAddresses */\n    tag_23:\n      0x04\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StakingContract.sol\":204:246  mapping(address => uint256) public stakers */\n    tag_28:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/StakingContract.sol\":607:929  function stake(address staker, uint256 amount) public {... */\n    tag_33:\n        /* \"contracts/StakingContract.sol\":689:690  0 */\n      0x00\n        /* \"contracts/StakingContract.sol\":680:686  amount */\n      dup2\n        /* \"contracts/StakingContract.sol\":680:690  amount > 0 */\n      gt\n        /* \"contracts/StakingContract.sol\":672:724  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_45\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_46\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_45:\n        /* \"contracts/StakingContract.sol\":757:758  1 */\n      0x01\n        /* \"contracts/StakingContract.sol\":739:746  stakers */\n      0x02\n        /* \"contracts/StakingContract.sol\":739:754  stakers[staker] */\n      0x00\n        /* \"contracts/StakingContract.sol\":747:753  staker */\n      dup5\n        /* \"contracts/StakingContract.sol\":739:754  stakers[staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingContract.sol\":739:758  stakers[staker] < 1 */\n      lt\n        /* \"contracts/StakingContract.sol\":735:816  if (stakers[staker] < 1) {... */\n      iszero\n      tag_48\n      jumpi\n        /* \"contracts/StakingContract.sol\":775:791  stakersAddresses */\n      0x04\n        /* \"contracts/StakingContract.sol\":797:803  staker */\n      dup3\n        /* \"contracts/StakingContract.sol\":775:804  stakersAddresses.push(staker) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingContract.sol\":735:816  if (stakers[staker] < 1) {... */\n    tag_48:\n        /* \"contracts/StakingContract.sol\":845:851  amount */\n      dup1\n        /* \"contracts/StakingContract.sol\":826:833  stakers */\n      0x02\n        /* \"contracts/StakingContract.sol\":826:841  stakers[staker] */\n      0x00\n        /* \"contracts/StakingContract.sol\":834:840  staker */\n      dup5\n        /* \"contracts/StakingContract.sol\":826:841  stakers[staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/StakingContract.sol\":826:851  stakers[staker] += amount */\n      dup3\n      dup3\n      sload\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingContract.sol\":877:883  amount */\n      dup1\n        /* \"contracts/StakingContract.sol\":862:873  totalStakes */\n      0x00\n      dup1\n        /* \"contracts/StakingContract.sol\":862:883  totalStakes += amount */\n      dup3\n      dup3\n      sload\n      tag_52\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_52:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingContract.sol\":906:912  staker */\n      dup2\n        /* \"contracts/StakingContract.sol\":899:921  Staked(staker, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/StakingContract.sol\":914:920  amount */\n      dup3\n        /* \"contracts/StakingContract.sol\":899:921  Staked(staker, amount) */\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingContract.sol\":607:929  function stake(address staker, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingContract.sol\":137:163  uint256 public totalStakes */\n    tag_35:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingContract.sol\":980:1398  function unstake(address staker, uint256 amount) public returns (bool) {... */\n    tag_39:\n        /* \"contracts/StakingContract.sol\":1045:1049  bool */\n      0x00\n        /* \"contracts/StakingContract.sol\":1099:1105  amount */\n      dup2\n        /* \"contracts/StakingContract.sol\":1084:1095  totalStakes */\n      sload(0x00)\n        /* \"contracts/StakingContract.sol\":1084:1105  totalStakes >= amount */\n      lt\n      iszero\n        /* \"contracts/StakingContract.sol\":1062:1181  require(... */\n      tag_55\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"contracts/StakingContract.sol\":1219:1225  amount */\n      dup2\n        /* \"contracts/StakingContract.sol\":1200:1207  stakers */\n      0x02\n        /* \"contracts/StakingContract.sol\":1200:1215  stakers[staker] */\n      0x00\n        /* \"contracts/StakingContract.sol\":1208:1214  staker */\n      dup6\n        /* \"contracts/StakingContract.sol\":1200:1215  stakers[staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingContract.sol\":1200:1225  stakers[staker] >= amount */\n      lt\n      iszero\n        /* \"contracts/StakingContract.sol\":1192:1260  require(stakers[staker] >= amount, \"Amount must be greater than 0.\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"contracts/StakingContract.sol\":1290:1296  amount */\n      dup2\n        /* \"contracts/StakingContract.sol\":1271:1278  stakers */\n      0x02\n        /* \"contracts/StakingContract.sol\":1271:1286  stakers[staker] */\n      0x00\n        /* \"contracts/StakingContract.sol\":1279:1285  staker */\n      dup6\n        /* \"contracts/StakingContract.sol\":1271:1286  stakers[staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/StakingContract.sol\":1271:1296  stakers[staker] -= amount */\n      dup3\n      dup3\n      sload\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingContract.sol\":1322:1328  amount */\n      dup2\n        /* \"contracts/StakingContract.sol\":1307:1318  totalStakes */\n      0x00\n      dup1\n        /* \"contracts/StakingContract.sol\":1307:1328  totalStakes -= amount */\n      dup3\n      dup3\n      sload\n      tag_63\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_63:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingContract.sol\":1353:1359  staker */\n      dup3\n        /* \"contracts/StakingContract.sol\":1344:1368  Unstaked(staker, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75\n        /* \"contracts/StakingContract.sol\":1361:1367  amount */\n      dup4\n        /* \"contracts/StakingContract.sol\":1344:1368  Unstaked(staker, amount) */\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingContract.sol\":1386:1390  true */\n      0x01\n        /* \"contracts/StakingContract.sol\":1379:1390  return true */\n      swap1\n      pop\n        /* \"contracts/StakingContract.sol\":980:1398  function unstake(address staker, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_66:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_68:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_69:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_93\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_68\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_70:\n        /* \"#utility.yul\":641:665   */\n      tag_95\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_69\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_96:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_71:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_98\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_70\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_13:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_101\n      tag_66\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":917:1036   */\n    tag_100:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_102\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_71\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_72:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_73:\n        /* \"#utility.yul\":1346:1370   */\n      tag_105\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_72\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_16:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_107\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_73\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_74:\n        /* \"#utility.yul\":1684:1708   */\n      tag_109\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_72\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_110\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_110:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_75:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_112\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_74\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_22:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_115\n      tag_66\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1960:2079   */\n    tag_114:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_116\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_75\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2337   */\n    tag_76:\n        /* \"#utility.yul\":2306:2330   */\n      tag_118\n        /* \"#utility.yul\":2324:2329   */\n      dup2\n        /* \"#utility.yul\":2306:2330   */\n      tag_69\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2301:2304   */\n      dup3\n        /* \"#utility.yul\":2294:2331   */\n      mstore\n        /* \"#utility.yul\":2219:2337   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2343:2565   */\n    tag_25:\n        /* \"#utility.yul\":2436:2440   */\n      0x00\n        /* \"#utility.yul\":2474:2476   */\n      0x20\n        /* \"#utility.yul\":2463:2472   */\n      dup3\n        /* \"#utility.yul\":2459:2477   */\n      add\n        /* \"#utility.yul\":2451:2477   */\n      swap1\n      pop\n        /* \"#utility.yul\":2487:2558   */\n      tag_120\n        /* \"#utility.yul\":2555:2556   */\n      0x00\n        /* \"#utility.yul\":2544:2553   */\n      dup4\n        /* \"#utility.yul\":2540:2557   */\n      add\n        /* \"#utility.yul\":2531:2537   */\n      dup5\n        /* \"#utility.yul\":2487:2558   */\n      tag_76\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2343:2565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:3045   */\n    tag_32:\n        /* \"#utility.yul\":2639:2645   */\n      0x00\n        /* \"#utility.yul\":2647:2653   */\n      dup1\n        /* \"#utility.yul\":2696:2698   */\n      0x40\n        /* \"#utility.yul\":2684:2693   */\n      dup4\n        /* \"#utility.yul\":2675:2682   */\n      dup6\n        /* \"#utility.yul\":2671:2694   */\n      sub\n        /* \"#utility.yul\":2667:2699   */\n      slt\n        /* \"#utility.yul\":2664:2783   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":2702:2781   */\n      tag_123\n      tag_66\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2664:2783   */\n    tag_122:\n        /* \"#utility.yul\":2822:2823   */\n      0x00\n        /* \"#utility.yul\":2847:2900   */\n      tag_124\n        /* \"#utility.yul\":2892:2899   */\n      dup6\n        /* \"#utility.yul\":2883:2889   */\n      dup3\n        /* \"#utility.yul\":2872:2881   */\n      dup7\n        /* \"#utility.yul\":2868:2890   */\n      add\n        /* \"#utility.yul\":2847:2900   */\n      tag_71\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2837:2900   */\n      swap3\n      pop\n        /* \"#utility.yul\":2793:2910   */\n      pop\n        /* \"#utility.yul\":2949:2951   */\n      0x20\n        /* \"#utility.yul\":2975:3028   */\n      tag_125\n        /* \"#utility.yul\":3020:3027   */\n      dup6\n        /* \"#utility.yul\":3011:3017   */\n      dup3\n        /* \"#utility.yul\":3000:3009   */\n      dup7\n        /* \"#utility.yul\":2996:3018   */\n      add\n        /* \"#utility.yul\":2975:3028   */\n      tag_75\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2965:3028   */\n      swap2\n      pop\n        /* \"#utility.yul\":2920:3038   */\n      pop\n        /* \"#utility.yul\":2571:3045   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3141   */\n    tag_77:\n        /* \"#utility.yul\":3085:3092   */\n      0x00\n        /* \"#utility.yul\":3128:3133   */\n      dup2\n        /* \"#utility.yul\":3121:3134   */\n      iszero\n        /* \"#utility.yul\":3114:3135   */\n      iszero\n        /* \"#utility.yul\":3103:3135   */\n      swap1\n      pop\n        /* \"#utility.yul\":3051:3141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3147:3256   */\n    tag_78:\n        /* \"#utility.yul\":3228:3249   */\n      tag_128\n        /* \"#utility.yul\":3243:3248   */\n      dup2\n        /* \"#utility.yul\":3228:3249   */\n      tag_77\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":3223:3226   */\n      dup3\n        /* \"#utility.yul\":3216:3250   */\n      mstore\n        /* \"#utility.yul\":3147:3256   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3262:3472   */\n    tag_41:\n        /* \"#utility.yul\":3349:3353   */\n      0x00\n        /* \"#utility.yul\":3387:3389   */\n      0x20\n        /* \"#utility.yul\":3376:3385   */\n      dup3\n        /* \"#utility.yul\":3372:3390   */\n      add\n        /* \"#utility.yul\":3364:3390   */\n      swap1\n      pop\n        /* \"#utility.yul\":3400:3465   */\n      tag_130\n        /* \"#utility.yul\":3462:3463   */\n      0x00\n        /* \"#utility.yul\":3451:3460   */\n      dup4\n        /* \"#utility.yul\":3447:3464   */\n      add\n        /* \"#utility.yul\":3438:3444   */\n      dup5\n        /* \"#utility.yul\":3400:3465   */\n      tag_78\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3262:3472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3478:3647   */\n    tag_79:\n        /* \"#utility.yul\":3562:3573   */\n      0x00\n        /* \"#utility.yul\":3596:3602   */\n      dup3\n        /* \"#utility.yul\":3591:3594   */\n      dup3\n        /* \"#utility.yul\":3584:3603   */\n      mstore\n        /* \"#utility.yul\":3636:3640   */\n      0x20\n        /* \"#utility.yul\":3631:3634   */\n      dup3\n        /* \"#utility.yul\":3627:3641   */\n      add\n        /* \"#utility.yul\":3612:3641   */\n      swap1\n      pop\n        /* \"#utility.yul\":3478:3647   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3832   */\n    tag_80:\n        /* \"#utility.yul\":3793:3824   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":3789:3790   */\n      0x00\n        /* \"#utility.yul\":3781:3787   */\n      dup3\n        /* \"#utility.yul\":3777:3791   */\n      add\n        /* \"#utility.yul\":3770:3825   */\n      mstore\n        /* \"#utility.yul\":3653:3832   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3838:4204   */\n    tag_81:\n        /* \"#utility.yul\":3980:3983   */\n      0x00\n        /* \"#utility.yul\":4001:4068   */\n      tag_134\n        /* \"#utility.yul\":4065:4067   */\n      0x1d\n        /* \"#utility.yul\":4060:4063   */\n      dup4\n        /* \"#utility.yul\":4001:4068   */\n      tag_79\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3994:4068   */\n      swap2\n      pop\n        /* \"#utility.yul\":4077:4170   */\n      tag_135\n        /* \"#utility.yul\":4166:4169   */\n      dup3\n        /* \"#utility.yul\":4077:4170   */\n      tag_80\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":4195:4197   */\n      0x20\n        /* \"#utility.yul\":4190:4193   */\n      dup3\n        /* \"#utility.yul\":4186:4198   */\n      add\n        /* \"#utility.yul\":4179:4198   */\n      swap1\n      pop\n        /* \"#utility.yul\":3838:4204   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4210:4629   */\n    tag_47:\n        /* \"#utility.yul\":4376:4380   */\n      0x00\n        /* \"#utility.yul\":4414:4416   */\n      0x20\n        /* \"#utility.yul\":4403:4412   */\n      dup3\n        /* \"#utility.yul\":4399:4417   */\n      add\n        /* \"#utility.yul\":4391:4417   */\n      swap1\n      pop\n        /* \"#utility.yul\":4463:4472   */\n      dup2\n        /* \"#utility.yul\":4457:4461   */\n      dup2\n        /* \"#utility.yul\":4453:4473   */\n      sub\n        /* \"#utility.yul\":4449:4450   */\n      0x00\n        /* \"#utility.yul\":4438:4447   */\n      dup4\n        /* \"#utility.yul\":4434:4451   */\n      add\n        /* \"#utility.yul\":4427:4474   */\n      mstore\n        /* \"#utility.yul\":4491:4622   */\n      tag_137\n        /* \"#utility.yul\":4617:4621   */\n      dup2\n        /* \"#utility.yul\":4491:4622   */\n      tag_81\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4483:4622   */\n      swap1\n      pop\n        /* \"#utility.yul\":4210:4629   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4635:4815   */\n    tag_82:\n        /* \"#utility.yul\":4683:4760   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4680:4681   */\n      0x00\n        /* \"#utility.yul\":4673:4761   */\n      mstore\n        /* \"#utility.yul\":4780:4784   */\n      0x11\n        /* \"#utility.yul\":4777:4778   */\n      0x04\n        /* \"#utility.yul\":4770:4785   */\n      mstore\n        /* \"#utility.yul\":4804:4808   */\n      0x24\n        /* \"#utility.yul\":4801:4802   */\n      0x00\n        /* \"#utility.yul\":4794:4809   */\n      revert\n        /* \"#utility.yul\":4821:5012   */\n    tag_51:\n        /* \"#utility.yul\":4861:4864   */\n      0x00\n        /* \"#utility.yul\":4880:4900   */\n      tag_140\n        /* \"#utility.yul\":4898:4899   */\n      dup3\n        /* \"#utility.yul\":4880:4900   */\n      tag_72\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":4875:4900   */\n      swap2\n      pop\n        /* \"#utility.yul\":4914:4934   */\n      tag_141\n        /* \"#utility.yul\":4932:4933   */\n      dup4\n        /* \"#utility.yul\":4914:4934   */\n      tag_72\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":4909:4934   */\n      swap3\n      pop\n        /* \"#utility.yul\":4957:4958   */\n      dup3\n        /* \"#utility.yul\":4954:4955   */\n      dup3\n        /* \"#utility.yul\":4950:4959   */\n      add\n        /* \"#utility.yul\":4943:4959   */\n      swap1\n      pop\n        /* \"#utility.yul\":4978:4981   */\n      dup1\n        /* \"#utility.yul\":4975:4976   */\n      dup3\n        /* \"#utility.yul\":4972:4982   */\n      gt\n        /* \"#utility.yul\":4969:5005   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":4985:5003   */\n      tag_143\n      tag_82\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4969:5005   */\n    tag_142:\n        /* \"#utility.yul\":4821:5012   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5018:5253   */\n    tag_83:\n        /* \"#utility.yul\":5158:5192   */\n      0x546865726520617265206e6f7420656e6f75676820636f696e7320696e20796f\n        /* \"#utility.yul\":5154:5155   */\n      0x00\n        /* \"#utility.yul\":5146:5152   */\n      dup3\n        /* \"#utility.yul\":5142:5156   */\n      add\n        /* \"#utility.yul\":5135:5193   */\n      mstore\n        /* \"#utility.yul\":5227:5245   */\n      0x7572207374616b696e6720706f6f6c2e00000000000000000000000000000000\n        /* \"#utility.yul\":5222:5224   */\n      0x20\n        /* \"#utility.yul\":5214:5220   */\n      dup3\n        /* \"#utility.yul\":5210:5225   */\n      add\n        /* \"#utility.yul\":5203:5246   */\n      mstore\n        /* \"#utility.yul\":5018:5253   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5259:5625   */\n    tag_84:\n        /* \"#utility.yul\":5401:5404   */\n      0x00\n        /* \"#utility.yul\":5422:5489   */\n      tag_146\n        /* \"#utility.yul\":5486:5488   */\n      0x30\n        /* \"#utility.yul\":5481:5484   */\n      dup4\n        /* \"#utility.yul\":5422:5489   */\n      tag_79\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":5415:5489   */\n      swap2\n      pop\n        /* \"#utility.yul\":5498:5591   */\n      tag_147\n        /* \"#utility.yul\":5587:5590   */\n      dup3\n        /* \"#utility.yul\":5498:5591   */\n      tag_83\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":5616:5618   */\n      0x40\n        /* \"#utility.yul\":5611:5614   */\n      dup3\n        /* \"#utility.yul\":5607:5619   */\n      add\n        /* \"#utility.yul\":5600:5619   */\n      swap1\n      pop\n        /* \"#utility.yul\":5259:5625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5631:6050   */\n    tag_57:\n        /* \"#utility.yul\":5797:5801   */\n      0x00\n        /* \"#utility.yul\":5835:5837   */\n      0x20\n        /* \"#utility.yul\":5824:5833   */\n      dup3\n        /* \"#utility.yul\":5820:5838   */\n      add\n        /* \"#utility.yul\":5812:5838   */\n      swap1\n      pop\n        /* \"#utility.yul\":5884:5893   */\n      dup2\n        /* \"#utility.yul\":5878:5882   */\n      dup2\n        /* \"#utility.yul\":5874:5894   */\n      sub\n        /* \"#utility.yul\":5870:5871   */\n      0x00\n        /* \"#utility.yul\":5859:5868   */\n      dup4\n        /* \"#utility.yul\":5855:5872   */\n      add\n        /* \"#utility.yul\":5848:5895   */\n      mstore\n        /* \"#utility.yul\":5912:6043   */\n      tag_149\n        /* \"#utility.yul\":6038:6042   */\n      dup2\n        /* \"#utility.yul\":5912:6043   */\n      tag_84\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":5904:6043   */\n      swap1\n      pop\n        /* \"#utility.yul\":5631:6050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6056:6236   */\n    tag_85:\n        /* \"#utility.yul\":6196:6228   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e20302e0000\n        /* \"#utility.yul\":6192:6193   */\n      0x00\n        /* \"#utility.yul\":6184:6190   */\n      dup3\n        /* \"#utility.yul\":6180:6194   */\n      add\n        /* \"#utility.yul\":6173:6229   */\n      mstore\n        /* \"#utility.yul\":6056:6236   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6242:6608   */\n    tag_86:\n        /* \"#utility.yul\":6384:6387   */\n      0x00\n        /* \"#utility.yul\":6405:6472   */\n      tag_152\n        /* \"#utility.yul\":6469:6471   */\n      0x1e\n        /* \"#utility.yul\":6464:6467   */\n      dup4\n        /* \"#utility.yul\":6405:6472   */\n      tag_79\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":6398:6472   */\n      swap2\n      pop\n        /* \"#utility.yul\":6481:6574   */\n      tag_153\n        /* \"#utility.yul\":6570:6573   */\n      dup3\n        /* \"#utility.yul\":6481:6574   */\n      tag_85\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":6599:6601   */\n      0x20\n        /* \"#utility.yul\":6594:6597   */\n      dup3\n        /* \"#utility.yul\":6590:6602   */\n      add\n        /* \"#utility.yul\":6583:6602   */\n      swap1\n      pop\n        /* \"#utility.yul\":6242:6608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6614:7033   */\n    tag_60:\n        /* \"#utility.yul\":6780:6784   */\n      0x00\n        /* \"#utility.yul\":6818:6820   */\n      0x20\n        /* \"#utility.yul\":6807:6816   */\n      dup3\n        /* \"#utility.yul\":6803:6821   */\n      add\n        /* \"#utility.yul\":6795:6821   */\n      swap1\n      pop\n        /* \"#utility.yul\":6867:6876   */\n      dup2\n        /* \"#utility.yul\":6861:6865   */\n      dup2\n        /* \"#utility.yul\":6857:6877   */\n      sub\n        /* \"#utility.yul\":6853:6854   */\n      0x00\n        /* \"#utility.yul\":6842:6851   */\n      dup4\n        /* \"#utility.yul\":6838:6855   */\n      add\n        /* \"#utility.yul\":6831:6878   */\n      mstore\n        /* \"#utility.yul\":6895:7026   */\n      tag_155\n        /* \"#utility.yul\":7021:7025   */\n      dup2\n        /* \"#utility.yul\":6895:7026   */\n      tag_86\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":6887:7026   */\n      swap1\n      pop\n        /* \"#utility.yul\":6614:7033   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7039:7233   */\n    tag_62:\n        /* \"#utility.yul\":7079:7083   */\n      0x00\n        /* \"#utility.yul\":7099:7119   */\n      tag_157\n        /* \"#utility.yul\":7117:7118   */\n      dup3\n        /* \"#utility.yul\":7099:7119   */\n      tag_72\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":7094:7119   */\n      swap2\n      pop\n        /* \"#utility.yul\":7133:7153   */\n      tag_158\n        /* \"#utility.yul\":7151:7152   */\n      dup4\n        /* \"#utility.yul\":7133:7153   */\n      tag_72\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":7128:7153   */\n      swap3\n      pop\n        /* \"#utility.yul\":7177:7178   */\n      dup3\n        /* \"#utility.yul\":7174:7175   */\n      dup3\n        /* \"#utility.yul\":7170:7179   */\n      sub\n        /* \"#utility.yul\":7162:7179   */\n      swap1\n      pop\n        /* \"#utility.yul\":7201:7202   */\n      dup2\n        /* \"#utility.yul\":7195:7199   */\n      dup2\n        /* \"#utility.yul\":7192:7203   */\n      gt\n        /* \"#utility.yul\":7189:7226   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":7206:7224   */\n      tag_160\n      tag_82\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":7189:7226   */\n    tag_159:\n        /* \"#utility.yul\":7039:7233   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208d2e3c435f5c4c307763360984639cc889fa6e264ea81b4224616051bd2ba9e764736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_4113": {
									"entryPoint": null,
									"id": 4113,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506109128061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c80639168ae72116100595780639168ae72146100fd578063adc9772e1461012d578063bf9befb114610149578063c2a672e0146101675761007b565b80630700037d1461007f5780630e15561a146100af5780633d42071c146100cd575b5f80fd5b61009960048036038101906100949190610591565b610197565b6040516100a691906105d4565b60405180910390f35b6100b76101ac565b6040516100c491906105d4565b60405180910390f35b6100e760048036038101906100e29190610617565b6101b2565b6040516100f49190610651565b60405180910390f35b61011760048036038101906101129190610591565b6101ed565b60405161012491906105d4565b60405180910390f35b6101476004803603810190610142919061066a565b610202565b005b6101516103a7565b60405161015e91906105d4565b60405180910390f35b610181600480360381019061017c919061066a565b6103ac565b60405161018e91906106c2565b60405180910390f35b6003602052805f5260405f205f915090505481565b60015481565b600481815481106101c1575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052805f5260405f205f915090505481565b5f8111610244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023b90610735565b60405180910390fd5b600160025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156102eb57600482908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103379190610780565b92505081905550805f8082825461034e9190610780565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8260405161039b91906105d4565b60405180910390a25050565b5f5481565b5f815f5410156103f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e890610823565b60405180910390fd5b8160025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104689061088b565b60405180910390fd5b8160025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104bd91906108a9565b92505081905550815f808282546104d491906108a9565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f758360405161052191906105d4565b60405180910390a26001905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61056082610537565b9050919050565b61057081610556565b811461057a575f80fd5b50565b5f8135905061058b81610567565b92915050565b5f602082840312156105a6576105a5610533565b5b5f6105b38482850161057d565b91505092915050565b5f819050919050565b6105ce816105bc565b82525050565b5f6020820190506105e75f8301846105c5565b92915050565b6105f6816105bc565b8114610600575f80fd5b50565b5f81359050610611816105ed565b92915050565b5f6020828403121561062c5761062b610533565b5b5f61063984828501610603565b91505092915050565b61064b81610556565b82525050565b5f6020820190506106645f830184610642565b92915050565b5f80604083850312156106805761067f610533565b5b5f61068d8582860161057d565b925050602061069e85828601610603565b9150509250929050565b5f8115159050919050565b6106bc816106a8565b82525050565b5f6020820190506106d55f8301846106b3565b92915050565b5f82825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f61071f601d836106db565b915061072a826106eb565b602082019050919050565b5f6020820190508181035f83015261074c81610713565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61078a826105bc565b9150610795836105bc565b92508282019050808211156107ad576107ac610753565b5b92915050565b7f546865726520617265206e6f7420656e6f75676820636f696e7320696e20796f5f8201527f7572207374616b696e6720706f6f6c2e00000000000000000000000000000000602082015250565b5f61080d6030836106db565b9150610818826107b3565b604082019050919050565b5f6020820190508181035f83015261083a81610801565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e20302e00005f82015250565b5f610875601e836106db565b915061088082610841565b602082019050919050565b5f6020820190508181035f8301526108a281610869565b9050919050565b5f6108b3826105bc565b91506108be836105bc565b92508282039050818111156108d6576108d5610753565b5b9291505056fea26469706673582212208d2e3c435f5c4c307763360984639cc889fa6e264ea81b4224616051bd2ba9e764736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x912 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9168AE72 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xBF9BEFB1 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xC2A672E0 EQ PUSH2 0x167 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x700037D EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x3D42071C EQ PUSH2 0xCD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x66A JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x151 PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x66A JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x244 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23B SWAP1 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x4 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x780 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x780 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 PUSH0 SLOAD LT ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E8 SWAP1 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x468 SWAP1 PUSH2 0x88B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x8A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x8A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP4 PUSH1 0x40 MLOAD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x560 DUP3 PUSH2 0x537 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x570 DUP2 PUSH2 0x556 JUMP JUMPDEST DUP2 EQ PUSH2 0x57A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x58B DUP2 PUSH2 0x567 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A6 JUMPI PUSH2 0x5A5 PUSH2 0x533 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5B3 DUP5 DUP3 DUP6 ADD PUSH2 0x57D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CE DUP2 PUSH2 0x5BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x5C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5F6 DUP2 PUSH2 0x5BC JUMP JUMPDEST DUP2 EQ PUSH2 0x600 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x611 DUP2 PUSH2 0x5ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62C JUMPI PUSH2 0x62B PUSH2 0x533 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x639 DUP5 DUP3 DUP6 ADD PUSH2 0x603 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x64B DUP2 PUSH2 0x556 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x664 PUSH0 DUP4 ADD DUP5 PUSH2 0x642 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x680 JUMPI PUSH2 0x67F PUSH2 0x533 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x68D DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x69E DUP6 DUP3 DUP7 ADD PUSH2 0x603 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6BC DUP2 PUSH2 0x6A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6D5 PUSH0 DUP4 ADD DUP5 PUSH2 0x6B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x71F PUSH1 0x1D DUP4 PUSH2 0x6DB JUMP JUMPDEST SWAP2 POP PUSH2 0x72A DUP3 PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x74C DUP2 PUSH2 0x713 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x78A DUP3 PUSH2 0x5BC JUMP JUMPDEST SWAP2 POP PUSH2 0x795 DUP4 PUSH2 0x5BC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x7AD JUMPI PUSH2 0x7AC PUSH2 0x753 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546865726520617265206E6F7420656E6F75676820636F696E7320696E20796F PUSH0 DUP3 ADD MSTORE PUSH32 0x7572207374616B696E6720706F6F6C2E00000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x80D PUSH1 0x30 DUP4 PUSH2 0x6DB JUMP JUMPDEST SWAP2 POP PUSH2 0x818 DUP3 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x83A DUP2 PUSH2 0x801 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E20302E0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x875 PUSH1 0x1E DUP4 PUSH2 0x6DB JUMP JUMPDEST SWAP2 POP PUSH2 0x880 DUP3 PUSH2 0x841 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8A2 DUP2 PUSH2 0x869 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8B3 DUP3 PUSH2 0x5BC JUMP JUMPDEST SWAP2 POP PUSH2 0x8BE DUP4 PUSH2 0x5BC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x8D6 JUMPI PUSH2 0x8D5 PUSH2 0x753 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0x2E EXTCODECOPY NUMBER PUSH0 TLOAD 0x4C ADDRESS PUSH24 0x63360984639CC889FA6E264EA81B4224616051BD2BA9E764 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "105:2059:22:-:0;;;542:16;;;;;;;;;;105:2059;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@rewards_4088": {
									"entryPoint": 407,
									"id": 4088,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_4156": {
									"entryPoint": 514,
									"id": 4156,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakersAddresses_4091": {
									"entryPoint": 434,
									"id": 4091,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakers_4084": {
									"entryPoint": 493,
									"id": 4084,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalRewards_4080": {
									"entryPoint": 428,
									"id": 4080,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStakes_4078": {
									"entryPoint": 935,
									"id": 4078,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstake_4199": {
									"entryPoint": 940,
									"id": 4199,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0839195af36ea54dbc20a631264e4e0fc516850571ce306a1e4e2acdc351064e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_67111866d931937286ca54a65005a3e515da8e44535c98b102bab072683691c5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0839195af36ea54dbc20a631264e4e0fc516850571ce306a1e4e2acdc351064e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67111866d931937286ca54a65005a3e515da8e44535c98b102bab072683691c5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0839195af36ea54dbc20a631264e4e0fc516850571ce306a1e4e2acdc351064e": {
									"entryPoint": 2113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 1771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_67111866d931937286ca54a65005a3e515da8e44535c98b102bab072683691c5": {
									"entryPoint": 1971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7236:23",
										"nodeType": "YulBlock",
										"src": "0:7236:23",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:23",
													"nodeType": "YulBlock",
													"src": "47:35:23",
													"statements": [
														{
															"nativeSrc": "57:19:23",
															"nodeType": "YulAssignment",
															"src": "57:19:23",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:23",
																		"nodeType": "YulLiteral",
																		"src": "73:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:23"
																},
																"nativeSrc": "67:9:23",
																"nodeType": "YulFunctionCall",
																"src": "67:9:23"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:23"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:23",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:23",
														"nodeType": "YulTypedName",
														"src": "40:6:23",
														"type": ""
													}
												],
												"src": "7:75:23"
											},
											{
												"body": {
													"nativeSrc": "177:28:23",
													"nodeType": "YulBlock",
													"src": "177:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:23",
																		"nodeType": "YulLiteral",
																		"src": "194:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:23",
																		"nodeType": "YulLiteral",
																		"src": "197:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:23"
																},
																"nativeSrc": "187:12:23",
																"nodeType": "YulFunctionCall",
																"src": "187:12:23"
															},
															"nativeSrc": "187:12:23",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:23"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:23",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:23"
											},
											{
												"body": {
													"nativeSrc": "300:28:23",
													"nodeType": "YulBlock",
													"src": "300:28:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:23",
																		"nodeType": "YulLiteral",
																		"src": "317:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:23",
																		"nodeType": "YulLiteral",
																		"src": "320:1:23",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:23"
																},
																"nativeSrc": "310:12:23",
																"nodeType": "YulFunctionCall",
																"src": "310:12:23"
															},
															"nativeSrc": "310:12:23",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:23"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:23",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:23"
											},
											{
												"body": {
													"nativeSrc": "379:81:23",
													"nodeType": "YulBlock",
													"src": "379:81:23",
													"statements": [
														{
															"nativeSrc": "389:65:23",
															"nodeType": "YulAssignment",
															"src": "389:65:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:23",
																		"nodeType": "YulLiteral",
																		"src": "411:42:23",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:23"
																},
																"nativeSrc": "400:54:23",
																"nodeType": "YulFunctionCall",
																"src": "400:54:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:23",
														"nodeType": "YulTypedName",
														"src": "361:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:23",
														"nodeType": "YulTypedName",
														"src": "371:7:23",
														"type": ""
													}
												],
												"src": "334:126:23"
											},
											{
												"body": {
													"nativeSrc": "511:51:23",
													"nodeType": "YulBlock",
													"src": "511:51:23",
													"statements": [
														{
															"nativeSrc": "521:35:23",
															"nodeType": "YulAssignment",
															"src": "521:35:23",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:23"
																},
																"nativeSrc": "532:24:23",
																"nodeType": "YulFunctionCall",
																"src": "532:24:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:23",
														"nodeType": "YulTypedName",
														"src": "493:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:23",
														"nodeType": "YulTypedName",
														"src": "503:7:23",
														"type": ""
													}
												],
												"src": "466:96:23"
											},
											{
												"body": {
													"nativeSrc": "611:79:23",
													"nodeType": "YulBlock",
													"src": "611:79:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:23",
																"nodeType": "YulBlock",
																"src": "668:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:23",
																					"nodeType": "YulLiteral",
																					"src": "677:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:23",
																					"nodeType": "YulLiteral",
																					"src": "680:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:23"
																			},
																			"nativeSrc": "670:12:23",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:23"
																		},
																		"nativeSrc": "670:12:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:23",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:23"
																				},
																				"nativeSrc": "641:24:23",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:23"
																		},
																		"nativeSrc": "631:35:23",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:23"
																},
																"nativeSrc": "624:43:23",
																"nodeType": "YulFunctionCall",
																"src": "624:43:23"
															},
															"nativeSrc": "621:63:23",
															"nodeType": "YulIf",
															"src": "621:63:23"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:23",
														"nodeType": "YulTypedName",
														"src": "604:5:23",
														"type": ""
													}
												],
												"src": "568:122:23"
											},
											{
												"body": {
													"nativeSrc": "748:87:23",
													"nodeType": "YulBlock",
													"src": "748:87:23",
													"statements": [
														{
															"nativeSrc": "758:29:23",
															"nodeType": "YulAssignment",
															"src": "758:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:23",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:23"
																},
																"nativeSrc": "767:20:23",
																"nodeType": "YulFunctionCall",
																"src": "767:20:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:23",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:23"
																},
																"nativeSrc": "796:33:23",
																"nodeType": "YulFunctionCall",
																"src": "796:33:23"
															},
															"nativeSrc": "796:33:23",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:23"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:23",
														"nodeType": "YulTypedName",
														"src": "726:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:23",
														"nodeType": "YulTypedName",
														"src": "734:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:23",
														"nodeType": "YulTypedName",
														"src": "742:5:23",
														"type": ""
													}
												],
												"src": "696:139:23"
											},
											{
												"body": {
													"nativeSrc": "907:263:23",
													"nodeType": "YulBlock",
													"src": "907:263:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:23",
																"nodeType": "YulBlock",
																"src": "953:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:23"
																			},
																			"nativeSrc": "955:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:23"
																		},
																		"nativeSrc": "955:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:23"
																		},
																		"nativeSrc": "924:23:23",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:23",
																		"nodeType": "YulLiteral",
																		"src": "949:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:23"
																},
																"nativeSrc": "920:32:23",
																"nodeType": "YulFunctionCall",
																"src": "920:32:23"
															},
															"nativeSrc": "917:119:23",
															"nodeType": "YulIf",
															"src": "917:119:23"
														},
														{
															"nativeSrc": "1046:117:23",
															"nodeType": "YulBlock",
															"src": "1046:117:23",
															"statements": [
																{
																	"nativeSrc": "1061:15:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:23",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:23",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:23",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:23"
																				},
																				"nativeSrc": "1121:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:23",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:23"
																		},
																		"nativeSrc": "1100:53:23",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:23",
														"nodeType": "YulTypedName",
														"src": "877:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:23",
														"nodeType": "YulTypedName",
														"src": "888:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:23",
														"nodeType": "YulTypedName",
														"src": "900:6:23",
														"type": ""
													}
												],
												"src": "841:329:23"
											},
											{
												"body": {
													"nativeSrc": "1221:32:23",
													"nodeType": "YulBlock",
													"src": "1221:32:23",
													"statements": [
														{
															"nativeSrc": "1231:16:23",
															"nodeType": "YulAssignment",
															"src": "1231:16:23",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:23",
																"nodeType": "YulIdentifier",
																"src": "1242:5:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:23",
														"nodeType": "YulTypedName",
														"src": "1203:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:23",
														"nodeType": "YulTypedName",
														"src": "1213:7:23",
														"type": ""
													}
												],
												"src": "1176:77:23"
											},
											{
												"body": {
													"nativeSrc": "1324:53:23",
													"nodeType": "YulBlock",
													"src": "1324:53:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:23",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:23"
																		},
																		"nativeSrc": "1346:24:23",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:23"
																},
																"nativeSrc": "1334:37:23",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:23"
															},
															"nativeSrc": "1334:37:23",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:23"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:23",
														"nodeType": "YulTypedName",
														"src": "1312:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:23",
														"nodeType": "YulTypedName",
														"src": "1319:3:23",
														"type": ""
													}
												],
												"src": "1259:118:23"
											},
											{
												"body": {
													"nativeSrc": "1481:124:23",
													"nodeType": "YulBlock",
													"src": "1481:124:23",
													"statements": [
														{
															"nativeSrc": "1491:26:23",
															"nodeType": "YulAssignment",
															"src": "1491:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:23",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:23"
																},
																"nativeSrc": "1499:18:23",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:23",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:23"
																		},
																		"nativeSrc": "1580:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:23"
																},
																"nativeSrc": "1527:71:23",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:23"
															},
															"nativeSrc": "1527:71:23",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:23",
														"nodeType": "YulTypedName",
														"src": "1453:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:23",
														"nodeType": "YulTypedName",
														"src": "1465:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:23",
														"nodeType": "YulTypedName",
														"src": "1476:4:23",
														"type": ""
													}
												],
												"src": "1383:222:23"
											},
											{
												"body": {
													"nativeSrc": "1654:79:23",
													"nodeType": "YulBlock",
													"src": "1654:79:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:23",
																"nodeType": "YulBlock",
																"src": "1711:16:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:23",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:23",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:23",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:23",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:23"
																			},
																			"nativeSrc": "1713:12:23",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:23"
																		},
																		"nativeSrc": "1713:12:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:23"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:23",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:23"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:23",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:23"
																				},
																				"nativeSrc": "1684:24:23",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:23"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:23",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:23"
																		},
																		"nativeSrc": "1674:35:23",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:23"
																},
																"nativeSrc": "1667:43:23",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:23"
															},
															"nativeSrc": "1664:63:23",
															"nodeType": "YulIf",
															"src": "1664:63:23"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:23",
														"nodeType": "YulTypedName",
														"src": "1647:5:23",
														"type": ""
													}
												],
												"src": "1611:122:23"
											},
											{
												"body": {
													"nativeSrc": "1791:87:23",
													"nodeType": "YulBlock",
													"src": "1791:87:23",
													"statements": [
														{
															"nativeSrc": "1801:29:23",
															"nodeType": "YulAssignment",
															"src": "1801:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:23"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:23",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:23"
																},
																"nativeSrc": "1810:20:23",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:23"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:23",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:23",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:23"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:23",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:23"
																},
																"nativeSrc": "1839:33:23",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:23"
															},
															"nativeSrc": "1839:33:23",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:23"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:23",
														"nodeType": "YulTypedName",
														"src": "1769:6:23",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:23",
														"nodeType": "YulTypedName",
														"src": "1777:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:23",
														"nodeType": "YulTypedName",
														"src": "1785:5:23",
														"type": ""
													}
												],
												"src": "1739:139:23"
											},
											{
												"body": {
													"nativeSrc": "1950:263:23",
													"nodeType": "YulBlock",
													"src": "1950:263:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:23",
																"nodeType": "YulBlock",
																"src": "1996:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:23"
																			},
																			"nativeSrc": "1998:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:23"
																		},
																		"nativeSrc": "1998:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:23"
																		},
																		"nativeSrc": "1967:23:23",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:23",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:23"
																},
																"nativeSrc": "1963:32:23",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:23"
															},
															"nativeSrc": "1960:119:23",
															"nodeType": "YulIf",
															"src": "1960:119:23"
														},
														{
															"nativeSrc": "2089:117:23",
															"nodeType": "YulBlock",
															"src": "2089:117:23",
															"statements": [
																{
																	"nativeSrc": "2104:15:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:23",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:23",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:23",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:23"
																				},
																				"nativeSrc": "2164:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2143:20:23",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:23"
																		},
																		"nativeSrc": "2143:53:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1884:329:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:23",
														"nodeType": "YulTypedName",
														"src": "1920:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:23",
														"nodeType": "YulTypedName",
														"src": "1931:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:23",
														"nodeType": "YulTypedName",
														"src": "1943:6:23",
														"type": ""
													}
												],
												"src": "1884:329:23"
											},
											{
												"body": {
													"nativeSrc": "2284:53:23",
													"nodeType": "YulBlock",
													"src": "2284:53:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2301:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "2301:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2324:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "2324:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2306:17:23",
																			"nodeType": "YulIdentifier",
																			"src": "2306:17:23"
																		},
																		"nativeSrc": "2306:24:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2306:24:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2294:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:23"
																},
																"nativeSrc": "2294:37:23",
																"nodeType": "YulFunctionCall",
																"src": "2294:37:23"
															},
															"nativeSrc": "2294:37:23",
															"nodeType": "YulExpressionStatement",
															"src": "2294:37:23"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2219:118:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2272:5:23",
														"nodeType": "YulTypedName",
														"src": "2272:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2279:3:23",
														"nodeType": "YulTypedName",
														"src": "2279:3:23",
														"type": ""
													}
												],
												"src": "2219:118:23"
											},
											{
												"body": {
													"nativeSrc": "2441:124:23",
													"nodeType": "YulBlock",
													"src": "2441:124:23",
													"statements": [
														{
															"nativeSrc": "2451:26:23",
															"nodeType": "YulAssignment",
															"src": "2451:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2463:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "2463:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2474:2:23",
																		"nodeType": "YulLiteral",
																		"src": "2474:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2459:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "2459:3:23"
																},
																"nativeSrc": "2459:18:23",
																"nodeType": "YulFunctionCall",
																"src": "2459:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2451:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "2451:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2531:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "2531:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2544:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "2544:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2555:1:23",
																				"nodeType": "YulLiteral",
																				"src": "2555:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2540:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "2540:3:23"
																		},
																		"nativeSrc": "2540:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2540:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2487:43:23",
																	"nodeType": "YulIdentifier",
																	"src": "2487:43:23"
																},
																"nativeSrc": "2487:71:23",
																"nodeType": "YulFunctionCall",
																"src": "2487:71:23"
															},
															"nativeSrc": "2487:71:23",
															"nodeType": "YulExpressionStatement",
															"src": "2487:71:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2343:222:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2413:9:23",
														"nodeType": "YulTypedName",
														"src": "2413:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2425:6:23",
														"nodeType": "YulTypedName",
														"src": "2425:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2436:4:23",
														"nodeType": "YulTypedName",
														"src": "2436:4:23",
														"type": ""
													}
												],
												"src": "2343:222:23"
											},
											{
												"body": {
													"nativeSrc": "2654:391:23",
													"nodeType": "YulBlock",
													"src": "2654:391:23",
													"statements": [
														{
															"body": {
																"nativeSrc": "2700:83:23",
																"nodeType": "YulBlock",
																"src": "2700:83:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2702:77:23",
																				"nodeType": "YulIdentifier",
																				"src": "2702:77:23"
																			},
																			"nativeSrc": "2702:79:23",
																			"nodeType": "YulFunctionCall",
																			"src": "2702:79:23"
																		},
																		"nativeSrc": "2702:79:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "2702:79:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2675:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "2675:7:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2684:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "2684:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2671:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "2671:3:23"
																		},
																		"nativeSrc": "2671:23:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2671:23:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2696:2:23",
																		"nodeType": "YulLiteral",
																		"src": "2696:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2667:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "2667:3:23"
																},
																"nativeSrc": "2667:32:23",
																"nodeType": "YulFunctionCall",
																"src": "2667:32:23"
															},
															"nativeSrc": "2664:119:23",
															"nodeType": "YulIf",
															"src": "2664:119:23"
														},
														{
															"nativeSrc": "2793:117:23",
															"nodeType": "YulBlock",
															"src": "2793:117:23",
															"statements": [
																{
																	"nativeSrc": "2808:15:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2808:15:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2822:1:23",
																		"nodeType": "YulLiteral",
																		"src": "2822:1:23",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2812:6:23",
																			"nodeType": "YulTypedName",
																			"src": "2812:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2837:63:23",
																	"nodeType": "YulAssignment",
																	"src": "2837:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2872:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "2872:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2883:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "2883:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2868:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "2868:3:23"
																				},
																				"nativeSrc": "2868:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "2868:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2892:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "2892:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2847:20:23",
																			"nodeType": "YulIdentifier",
																			"src": "2847:20:23"
																		},
																		"nativeSrc": "2847:53:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2847:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2837:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "2837:6:23"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2920:118:23",
															"nodeType": "YulBlock",
															"src": "2920:118:23",
															"statements": [
																{
																	"nativeSrc": "2935:16:23",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2935:16:23",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2949:2:23",
																		"nodeType": "YulLiteral",
																		"src": "2949:2:23",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2939:6:23",
																			"nodeType": "YulTypedName",
																			"src": "2939:6:23",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2965:63:23",
																	"nodeType": "YulAssignment",
																	"src": "2965:63:23",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3000:9:23",
																						"nodeType": "YulIdentifier",
																						"src": "3000:9:23"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3011:6:23",
																						"nodeType": "YulIdentifier",
																						"src": "3011:6:23"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2996:3:23",
																					"nodeType": "YulIdentifier",
																					"src": "2996:3:23"
																				},
																				"nativeSrc": "2996:22:23",
																				"nodeType": "YulFunctionCall",
																				"src": "2996:22:23"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3020:7:23",
																				"nodeType": "YulIdentifier",
																				"src": "3020:7:23"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2975:20:23",
																			"nodeType": "YulIdentifier",
																			"src": "2975:20:23"
																		},
																		"nativeSrc": "2975:53:23",
																		"nodeType": "YulFunctionCall",
																		"src": "2975:53:23"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2965:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "2965:6:23"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2571:474:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2616:9:23",
														"nodeType": "YulTypedName",
														"src": "2616:9:23",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2627:7:23",
														"nodeType": "YulTypedName",
														"src": "2627:7:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2639:6:23",
														"nodeType": "YulTypedName",
														"src": "2639:6:23",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2647:6:23",
														"nodeType": "YulTypedName",
														"src": "2647:6:23",
														"type": ""
													}
												],
												"src": "2571:474:23"
											},
											{
												"body": {
													"nativeSrc": "3093:48:23",
													"nodeType": "YulBlock",
													"src": "3093:48:23",
													"statements": [
														{
															"nativeSrc": "3103:32:23",
															"nodeType": "YulAssignment",
															"src": "3103:32:23",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3128:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "3128:5:23"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3121:6:23",
																			"nodeType": "YulIdentifier",
																			"src": "3121:6:23"
																		},
																		"nativeSrc": "3121:13:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3121:13:23"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3114:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:23"
																},
																"nativeSrc": "3114:21:23",
																"nodeType": "YulFunctionCall",
																"src": "3114:21:23"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3103:7:23",
																	"nodeType": "YulIdentifier",
																	"src": "3103:7:23"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3051:90:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3075:5:23",
														"nodeType": "YulTypedName",
														"src": "3075:5:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3085:7:23",
														"nodeType": "YulTypedName",
														"src": "3085:7:23",
														"type": ""
													}
												],
												"src": "3051:90:23"
											},
											{
												"body": {
													"nativeSrc": "3206:50:23",
													"nodeType": "YulBlock",
													"src": "3206:50:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3223:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "3223:3:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3243:5:23",
																				"nodeType": "YulIdentifier",
																				"src": "3243:5:23"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3228:14:23",
																			"nodeType": "YulIdentifier",
																			"src": "3228:14:23"
																		},
																		"nativeSrc": "3228:21:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3228:21:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3216:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "3216:6:23"
																},
																"nativeSrc": "3216:34:23",
																"nodeType": "YulFunctionCall",
																"src": "3216:34:23"
															},
															"nativeSrc": "3216:34:23",
															"nodeType": "YulExpressionStatement",
															"src": "3216:34:23"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3147:109:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3194:5:23",
														"nodeType": "YulTypedName",
														"src": "3194:5:23",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3201:3:23",
														"nodeType": "YulTypedName",
														"src": "3201:3:23",
														"type": ""
													}
												],
												"src": "3147:109:23"
											},
											{
												"body": {
													"nativeSrc": "3354:118:23",
													"nodeType": "YulBlock",
													"src": "3354:118:23",
													"statements": [
														{
															"nativeSrc": "3364:26:23",
															"nodeType": "YulAssignment",
															"src": "3364:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3376:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "3376:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3387:2:23",
																		"nodeType": "YulLiteral",
																		"src": "3387:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3372:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "3372:3:23"
																},
																"nativeSrc": "3372:18:23",
																"nodeType": "YulFunctionCall",
																"src": "3372:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3364:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "3364:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3438:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "3438:6:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3451:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "3451:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3462:1:23",
																				"nodeType": "YulLiteral",
																				"src": "3462:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3447:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "3447:3:23"
																		},
																		"nativeSrc": "3447:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3447:17:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3400:37:23",
																	"nodeType": "YulIdentifier",
																	"src": "3400:37:23"
																},
																"nativeSrc": "3400:65:23",
																"nodeType": "YulFunctionCall",
																"src": "3400:65:23"
															},
															"nativeSrc": "3400:65:23",
															"nodeType": "YulExpressionStatement",
															"src": "3400:65:23"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3262:210:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3326:9:23",
														"nodeType": "YulTypedName",
														"src": "3326:9:23",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3338:6:23",
														"nodeType": "YulTypedName",
														"src": "3338:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3349:4:23",
														"nodeType": "YulTypedName",
														"src": "3349:4:23",
														"type": ""
													}
												],
												"src": "3262:210:23"
											},
											{
												"body": {
													"nativeSrc": "3574:73:23",
													"nodeType": "YulBlock",
													"src": "3574:73:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3591:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "3591:3:23"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3596:6:23",
																		"nodeType": "YulIdentifier",
																		"src": "3596:6:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3584:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "3584:6:23"
																},
																"nativeSrc": "3584:19:23",
																"nodeType": "YulFunctionCall",
																"src": "3584:19:23"
															},
															"nativeSrc": "3584:19:23",
															"nodeType": "YulExpressionStatement",
															"src": "3584:19:23"
														},
														{
															"nativeSrc": "3612:29:23",
															"nodeType": "YulAssignment",
															"src": "3612:29:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3631:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "3631:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3636:4:23",
																		"nodeType": "YulLiteral",
																		"src": "3636:4:23",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3627:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "3627:3:23"
																},
																"nativeSrc": "3627:14:23",
																"nodeType": "YulFunctionCall",
																"src": "3627:14:23"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3612:11:23",
																	"nodeType": "YulIdentifier",
																	"src": "3612:11:23"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3478:169:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3546:3:23",
														"nodeType": "YulTypedName",
														"src": "3546:3:23",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3551:6:23",
														"nodeType": "YulTypedName",
														"src": "3551:6:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3562:11:23",
														"nodeType": "YulTypedName",
														"src": "3562:11:23",
														"type": ""
													}
												],
												"src": "3478:169:23"
											},
											{
												"body": {
													"nativeSrc": "3759:73:23",
													"nodeType": "YulBlock",
													"src": "3759:73:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3781:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "3781:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3789:1:23",
																				"nodeType": "YulLiteral",
																				"src": "3789:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3777:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "3777:3:23"
																		},
																		"nativeSrc": "3777:14:23",
																		"nodeType": "YulFunctionCall",
																		"src": "3777:14:23"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "3793:31:23",
																		"nodeType": "YulLiteral",
																		"src": "3793:31:23",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3770:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "3770:6:23"
																},
																"nativeSrc": "3770:55:23",
																"nodeType": "YulFunctionCall",
																"src": "3770:55:23"
															},
															"nativeSrc": "3770:55:23",
															"nodeType": "YulExpressionStatement",
															"src": "3770:55:23"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nativeSrc": "3653:179:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3751:6:23",
														"nodeType": "YulTypedName",
														"src": "3751:6:23",
														"type": ""
													}
												],
												"src": "3653:179:23"
											},
											{
												"body": {
													"nativeSrc": "3984:220:23",
													"nodeType": "YulBlock",
													"src": "3984:220:23",
													"statements": [
														{
															"nativeSrc": "3994:74:23",
															"nodeType": "YulAssignment",
															"src": "3994:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4060:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "4060:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4065:2:23",
																		"nodeType": "YulLiteral",
																		"src": "4065:2:23",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4001:58:23",
																	"nodeType": "YulIdentifier",
																	"src": "4001:58:23"
																},
																"nativeSrc": "4001:67:23",
																"nodeType": "YulFunctionCall",
																"src": "4001:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3994:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "3994:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4166:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "4166:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nativeSrc": "4077:88:23",
																	"nodeType": "YulIdentifier",
																	"src": "4077:88:23"
																},
																"nativeSrc": "4077:93:23",
																"nodeType": "YulFunctionCall",
																"src": "4077:93:23"
															},
															"nativeSrc": "4077:93:23",
															"nodeType": "YulExpressionStatement",
															"src": "4077:93:23"
														},
														{
															"nativeSrc": "4179:19:23",
															"nodeType": "YulAssignment",
															"src": "4179:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4190:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "4190:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4195:2:23",
																		"nodeType": "YulLiteral",
																		"src": "4195:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4186:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "4186:3:23"
																},
																"nativeSrc": "4186:12:23",
																"nodeType": "YulFunctionCall",
																"src": "4186:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4179:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "4179:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3838:366:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3972:3:23",
														"nodeType": "YulTypedName",
														"src": "3972:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3980:3:23",
														"nodeType": "YulTypedName",
														"src": "3980:3:23",
														"type": ""
													}
												],
												"src": "3838:366:23"
											},
											{
												"body": {
													"nativeSrc": "4381:248:23",
													"nodeType": "YulBlock",
													"src": "4381:248:23",
													"statements": [
														{
															"nativeSrc": "4391:26:23",
															"nodeType": "YulAssignment",
															"src": "4391:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4403:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "4403:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4414:2:23",
																		"nodeType": "YulLiteral",
																		"src": "4414:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4399:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:23"
																},
																"nativeSrc": "4399:18:23",
																"nodeType": "YulFunctionCall",
																"src": "4399:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4391:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "4391:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4438:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "4438:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4449:1:23",
																				"nodeType": "YulLiteral",
																				"src": "4449:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4434:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "4434:3:23"
																		},
																		"nativeSrc": "4434:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4434:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4457:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "4457:4:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4463:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "4463:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4453:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "4453:3:23"
																		},
																		"nativeSrc": "4453:20:23",
																		"nodeType": "YulFunctionCall",
																		"src": "4453:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4427:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "4427:6:23"
																},
																"nativeSrc": "4427:47:23",
																"nodeType": "YulFunctionCall",
																"src": "4427:47:23"
															},
															"nativeSrc": "4427:47:23",
															"nodeType": "YulExpressionStatement",
															"src": "4427:47:23"
														},
														{
															"nativeSrc": "4483:139:23",
															"nodeType": "YulAssignment",
															"src": "4483:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4617:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "4617:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4491:124:23",
																	"nodeType": "YulIdentifier",
																	"src": "4491:124:23"
																},
																"nativeSrc": "4491:131:23",
																"nodeType": "YulFunctionCall",
																"src": "4491:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4483:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "4483:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4210:419:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4361:9:23",
														"nodeType": "YulTypedName",
														"src": "4361:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4376:4:23",
														"nodeType": "YulTypedName",
														"src": "4376:4:23",
														"type": ""
													}
												],
												"src": "4210:419:23"
											},
											{
												"body": {
													"nativeSrc": "4663:152:23",
													"nodeType": "YulBlock",
													"src": "4663:152:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4680:1:23",
																		"nodeType": "YulLiteral",
																		"src": "4680:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4683:77:23",
																		"nodeType": "YulLiteral",
																		"src": "4683:77:23",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4673:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "4673:6:23"
																},
																"nativeSrc": "4673:88:23",
																"nodeType": "YulFunctionCall",
																"src": "4673:88:23"
															},
															"nativeSrc": "4673:88:23",
															"nodeType": "YulExpressionStatement",
															"src": "4673:88:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4777:1:23",
																		"nodeType": "YulLiteral",
																		"src": "4777:1:23",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4780:4:23",
																		"nodeType": "YulLiteral",
																		"src": "4780:4:23",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4770:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "4770:6:23"
																},
																"nativeSrc": "4770:15:23",
																"nodeType": "YulFunctionCall",
																"src": "4770:15:23"
															},
															"nativeSrc": "4770:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "4770:15:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4801:1:23",
																		"nodeType": "YulLiteral",
																		"src": "4801:1:23",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4804:4:23",
																		"nodeType": "YulLiteral",
																		"src": "4804:4:23",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4794:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "4794:6:23"
																},
																"nativeSrc": "4794:15:23",
																"nodeType": "YulFunctionCall",
																"src": "4794:15:23"
															},
															"nativeSrc": "4794:15:23",
															"nodeType": "YulExpressionStatement",
															"src": "4794:15:23"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4635:180:23",
												"nodeType": "YulFunctionDefinition",
												"src": "4635:180:23"
											},
											{
												"body": {
													"nativeSrc": "4865:147:23",
													"nodeType": "YulBlock",
													"src": "4865:147:23",
													"statements": [
														{
															"nativeSrc": "4875:25:23",
															"nodeType": "YulAssignment",
															"src": "4875:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4898:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "4898:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4880:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "4880:17:23"
																},
																"nativeSrc": "4880:20:23",
																"nodeType": "YulFunctionCall",
																"src": "4880:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4875:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "4875:1:23"
																}
															]
														},
														{
															"nativeSrc": "4909:25:23",
															"nodeType": "YulAssignment",
															"src": "4909:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4932:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "4932:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4914:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "4914:17:23"
																},
																"nativeSrc": "4914:20:23",
																"nodeType": "YulFunctionCall",
																"src": "4914:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4909:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "4909:1:23"
																}
															]
														},
														{
															"nativeSrc": "4943:16:23",
															"nodeType": "YulAssignment",
															"src": "4943:16:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4954:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "4954:1:23"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4957:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "4957:1:23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4950:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "4950:3:23"
																},
																"nativeSrc": "4950:9:23",
																"nodeType": "YulFunctionCall",
																"src": "4950:9:23"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4943:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "4943:3:23"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4983:22:23",
																"nodeType": "YulBlock",
																"src": "4983:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4985:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "4985:16:23"
																			},
																			"nativeSrc": "4985:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "4985:18:23"
																		},
																		"nativeSrc": "4985:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "4985:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4975:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "4975:1:23"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4978:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "4978:3:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4972:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "4972:2:23"
																},
																"nativeSrc": "4972:10:23",
																"nodeType": "YulFunctionCall",
																"src": "4972:10:23"
															},
															"nativeSrc": "4969:36:23",
															"nodeType": "YulIf",
															"src": "4969:36:23"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4821:191:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4852:1:23",
														"nodeType": "YulTypedName",
														"src": "4852:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4855:1:23",
														"nodeType": "YulTypedName",
														"src": "4855:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4861:3:23",
														"nodeType": "YulTypedName",
														"src": "4861:3:23",
														"type": ""
													}
												],
												"src": "4821:191:23"
											},
											{
												"body": {
													"nativeSrc": "5124:129:23",
													"nodeType": "YulBlock",
													"src": "5124:129:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5146:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "5146:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5154:1:23",
																				"nodeType": "YulLiteral",
																				"src": "5154:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5142:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "5142:3:23"
																		},
																		"nativeSrc": "5142:14:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5142:14:23"
																	},
																	{
																		"hexValue": "546865726520617265206e6f7420656e6f75676820636f696e7320696e20796f",
																		"kind": "string",
																		"nativeSrc": "5158:34:23",
																		"nodeType": "YulLiteral",
																		"src": "5158:34:23",
																		"type": "",
																		"value": "There are not enough coins in yo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5135:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "5135:6:23"
																},
																"nativeSrc": "5135:58:23",
																"nodeType": "YulFunctionCall",
																"src": "5135:58:23"
															},
															"nativeSrc": "5135:58:23",
															"nodeType": "YulExpressionStatement",
															"src": "5135:58:23"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5214:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "5214:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5222:2:23",
																				"nodeType": "YulLiteral",
																				"src": "5222:2:23",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5210:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "5210:3:23"
																		},
																		"nativeSrc": "5210:15:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5210:15:23"
																	},
																	{
																		"hexValue": "7572207374616b696e6720706f6f6c2e",
																		"kind": "string",
																		"nativeSrc": "5227:18:23",
																		"nodeType": "YulLiteral",
																		"src": "5227:18:23",
																		"type": "",
																		"value": "ur staking pool."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5203:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "5203:6:23"
																},
																"nativeSrc": "5203:43:23",
																"nodeType": "YulFunctionCall",
																"src": "5203:43:23"
															},
															"nativeSrc": "5203:43:23",
															"nodeType": "YulExpressionStatement",
															"src": "5203:43:23"
														}
													]
												},
												"name": "store_literal_in_memory_67111866d931937286ca54a65005a3e515da8e44535c98b102bab072683691c5",
												"nativeSrc": "5018:235:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5116:6:23",
														"nodeType": "YulTypedName",
														"src": "5116:6:23",
														"type": ""
													}
												],
												"src": "5018:235:23"
											},
											{
												"body": {
													"nativeSrc": "5405:220:23",
													"nodeType": "YulBlock",
													"src": "5405:220:23",
													"statements": [
														{
															"nativeSrc": "5415:74:23",
															"nodeType": "YulAssignment",
															"src": "5415:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5481:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "5481:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5486:2:23",
																		"nodeType": "YulLiteral",
																		"src": "5486:2:23",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5422:58:23",
																	"nodeType": "YulIdentifier",
																	"src": "5422:58:23"
																},
																"nativeSrc": "5422:67:23",
																"nodeType": "YulFunctionCall",
																"src": "5422:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5415:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "5415:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5587:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "5587:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_67111866d931937286ca54a65005a3e515da8e44535c98b102bab072683691c5",
																	"nativeSrc": "5498:88:23",
																	"nodeType": "YulIdentifier",
																	"src": "5498:88:23"
																},
																"nativeSrc": "5498:93:23",
																"nodeType": "YulFunctionCall",
																"src": "5498:93:23"
															},
															"nativeSrc": "5498:93:23",
															"nodeType": "YulExpressionStatement",
															"src": "5498:93:23"
														},
														{
															"nativeSrc": "5600:19:23",
															"nodeType": "YulAssignment",
															"src": "5600:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5611:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "5611:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5616:2:23",
																		"nodeType": "YulLiteral",
																		"src": "5616:2:23",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5607:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "5607:3:23"
																},
																"nativeSrc": "5607:12:23",
																"nodeType": "YulFunctionCall",
																"src": "5607:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5600:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_67111866d931937286ca54a65005a3e515da8e44535c98b102bab072683691c5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5259:366:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5393:3:23",
														"nodeType": "YulTypedName",
														"src": "5393:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5401:3:23",
														"nodeType": "YulTypedName",
														"src": "5401:3:23",
														"type": ""
													}
												],
												"src": "5259:366:23"
											},
											{
												"body": {
													"nativeSrc": "5802:248:23",
													"nodeType": "YulBlock",
													"src": "5802:248:23",
													"statements": [
														{
															"nativeSrc": "5812:26:23",
															"nodeType": "YulAssignment",
															"src": "5812:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5824:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "5824:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5835:2:23",
																		"nodeType": "YulLiteral",
																		"src": "5835:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5820:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "5820:3:23"
																},
																"nativeSrc": "5820:18:23",
																"nodeType": "YulFunctionCall",
																"src": "5820:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5812:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "5812:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5859:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "5859:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5870:1:23",
																				"nodeType": "YulLiteral",
																				"src": "5870:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5855:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "5855:3:23"
																		},
																		"nativeSrc": "5855:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5855:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5878:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "5878:4:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5884:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "5884:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5874:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "5874:3:23"
																		},
																		"nativeSrc": "5874:20:23",
																		"nodeType": "YulFunctionCall",
																		"src": "5874:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5848:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "5848:6:23"
																},
																"nativeSrc": "5848:47:23",
																"nodeType": "YulFunctionCall",
																"src": "5848:47:23"
															},
															"nativeSrc": "5848:47:23",
															"nodeType": "YulExpressionStatement",
															"src": "5848:47:23"
														},
														{
															"nativeSrc": "5904:139:23",
															"nodeType": "YulAssignment",
															"src": "5904:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6038:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "6038:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_67111866d931937286ca54a65005a3e515da8e44535c98b102bab072683691c5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5912:124:23",
																	"nodeType": "YulIdentifier",
																	"src": "5912:124:23"
																},
																"nativeSrc": "5912:131:23",
																"nodeType": "YulFunctionCall",
																"src": "5912:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5904:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "5904:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67111866d931937286ca54a65005a3e515da8e44535c98b102bab072683691c5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5631:419:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5782:9:23",
														"nodeType": "YulTypedName",
														"src": "5782:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5797:4:23",
														"nodeType": "YulTypedName",
														"src": "5797:4:23",
														"type": ""
													}
												],
												"src": "5631:419:23"
											},
											{
												"body": {
													"nativeSrc": "6162:74:23",
													"nodeType": "YulBlock",
													"src": "6162:74:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6184:6:23",
																				"nodeType": "YulIdentifier",
																				"src": "6184:6:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6192:1:23",
																				"nodeType": "YulLiteral",
																				"src": "6192:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6180:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "6180:3:23"
																		},
																		"nativeSrc": "6180:14:23",
																		"nodeType": "YulFunctionCall",
																		"src": "6180:14:23"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e20302e",
																		"kind": "string",
																		"nativeSrc": "6196:32:23",
																		"nodeType": "YulLiteral",
																		"src": "6196:32:23",
																		"type": "",
																		"value": "Amount must be greater than 0."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6173:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "6173:6:23"
																},
																"nativeSrc": "6173:56:23",
																"nodeType": "YulFunctionCall",
																"src": "6173:56:23"
															},
															"nativeSrc": "6173:56:23",
															"nodeType": "YulExpressionStatement",
															"src": "6173:56:23"
														}
													]
												},
												"name": "store_literal_in_memory_0839195af36ea54dbc20a631264e4e0fc516850571ce306a1e4e2acdc351064e",
												"nativeSrc": "6056:180:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6154:6:23",
														"nodeType": "YulTypedName",
														"src": "6154:6:23",
														"type": ""
													}
												],
												"src": "6056:180:23"
											},
											{
												"body": {
													"nativeSrc": "6388:220:23",
													"nodeType": "YulBlock",
													"src": "6388:220:23",
													"statements": [
														{
															"nativeSrc": "6398:74:23",
															"nodeType": "YulAssignment",
															"src": "6398:74:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6464:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "6464:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6469:2:23",
																		"nodeType": "YulLiteral",
																		"src": "6469:2:23",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6405:58:23",
																	"nodeType": "YulIdentifier",
																	"src": "6405:58:23"
																},
																"nativeSrc": "6405:67:23",
																"nodeType": "YulFunctionCall",
																"src": "6405:67:23"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6398:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "6398:3:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6570:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "6570:3:23"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0839195af36ea54dbc20a631264e4e0fc516850571ce306a1e4e2acdc351064e",
																	"nativeSrc": "6481:88:23",
																	"nodeType": "YulIdentifier",
																	"src": "6481:88:23"
																},
																"nativeSrc": "6481:93:23",
																"nodeType": "YulFunctionCall",
																"src": "6481:93:23"
															},
															"nativeSrc": "6481:93:23",
															"nodeType": "YulExpressionStatement",
															"src": "6481:93:23"
														},
														{
															"nativeSrc": "6583:19:23",
															"nodeType": "YulAssignment",
															"src": "6583:19:23",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6594:3:23",
																		"nodeType": "YulIdentifier",
																		"src": "6594:3:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6599:2:23",
																		"nodeType": "YulLiteral",
																		"src": "6599:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6590:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "6590:3:23"
																},
																"nativeSrc": "6590:12:23",
																"nodeType": "YulFunctionCall",
																"src": "6590:12:23"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6583:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "6583:3:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0839195af36ea54dbc20a631264e4e0fc516850571ce306a1e4e2acdc351064e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6242:366:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6376:3:23",
														"nodeType": "YulTypedName",
														"src": "6376:3:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6384:3:23",
														"nodeType": "YulTypedName",
														"src": "6384:3:23",
														"type": ""
													}
												],
												"src": "6242:366:23"
											},
											{
												"body": {
													"nativeSrc": "6785:248:23",
													"nodeType": "YulBlock",
													"src": "6785:248:23",
													"statements": [
														{
															"nativeSrc": "6795:26:23",
															"nodeType": "YulAssignment",
															"src": "6795:26:23",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6807:9:23",
																		"nodeType": "YulIdentifier",
																		"src": "6807:9:23"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6818:2:23",
																		"nodeType": "YulLiteral",
																		"src": "6818:2:23",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6803:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "6803:3:23"
																},
																"nativeSrc": "6803:18:23",
																"nodeType": "YulFunctionCall",
																"src": "6803:18:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6795:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "6795:4:23"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6842:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "6842:9:23"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6853:1:23",
																				"nodeType": "YulLiteral",
																				"src": "6853:1:23",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6838:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "6838:3:23"
																		},
																		"nativeSrc": "6838:17:23",
																		"nodeType": "YulFunctionCall",
																		"src": "6838:17:23"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6861:4:23",
																				"nodeType": "YulIdentifier",
																				"src": "6861:4:23"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6867:9:23",
																				"nodeType": "YulIdentifier",
																				"src": "6867:9:23"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6857:3:23",
																			"nodeType": "YulIdentifier",
																			"src": "6857:3:23"
																		},
																		"nativeSrc": "6857:20:23",
																		"nodeType": "YulFunctionCall",
																		"src": "6857:20:23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6831:6:23",
																	"nodeType": "YulIdentifier",
																	"src": "6831:6:23"
																},
																"nativeSrc": "6831:47:23",
																"nodeType": "YulFunctionCall",
																"src": "6831:47:23"
															},
															"nativeSrc": "6831:47:23",
															"nodeType": "YulExpressionStatement",
															"src": "6831:47:23"
														},
														{
															"nativeSrc": "6887:139:23",
															"nodeType": "YulAssignment",
															"src": "6887:139:23",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7021:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "7021:4:23"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0839195af36ea54dbc20a631264e4e0fc516850571ce306a1e4e2acdc351064e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6895:124:23",
																	"nodeType": "YulIdentifier",
																	"src": "6895:124:23"
																},
																"nativeSrc": "6895:131:23",
																"nodeType": "YulFunctionCall",
																"src": "6895:131:23"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6887:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "6887:4:23"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0839195af36ea54dbc20a631264e4e0fc516850571ce306a1e4e2acdc351064e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6614:419:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6765:9:23",
														"nodeType": "YulTypedName",
														"src": "6765:9:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6780:4:23",
														"nodeType": "YulTypedName",
														"src": "6780:4:23",
														"type": ""
													}
												],
												"src": "6614:419:23"
											},
											{
												"body": {
													"nativeSrc": "7084:149:23",
													"nodeType": "YulBlock",
													"src": "7084:149:23",
													"statements": [
														{
															"nativeSrc": "7094:25:23",
															"nodeType": "YulAssignment",
															"src": "7094:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7117:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "7117:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7099:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "7099:17:23"
																},
																"nativeSrc": "7099:20:23",
																"nodeType": "YulFunctionCall",
																"src": "7099:20:23"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7094:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "7094:1:23"
																}
															]
														},
														{
															"nativeSrc": "7128:25:23",
															"nodeType": "YulAssignment",
															"src": "7128:25:23",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7151:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "7151:1:23"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7133:17:23",
																	"nodeType": "YulIdentifier",
																	"src": "7133:17:23"
																},
																"nativeSrc": "7133:20:23",
																"nodeType": "YulFunctionCall",
																"src": "7133:20:23"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7128:1:23",
																	"nodeType": "YulIdentifier",
																	"src": "7128:1:23"
																}
															]
														},
														{
															"nativeSrc": "7162:17:23",
															"nodeType": "YulAssignment",
															"src": "7162:17:23",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7174:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "7174:1:23"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7177:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "7177:1:23"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7170:3:23",
																	"nodeType": "YulIdentifier",
																	"src": "7170:3:23"
																},
																"nativeSrc": "7170:9:23",
																"nodeType": "YulFunctionCall",
																"src": "7170:9:23"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7162:4:23",
																	"nodeType": "YulIdentifier",
																	"src": "7162:4:23"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7204:22:23",
																"nodeType": "YulBlock",
																"src": "7204:22:23",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7206:16:23",
																				"nodeType": "YulIdentifier",
																				"src": "7206:16:23"
																			},
																			"nativeSrc": "7206:18:23",
																			"nodeType": "YulFunctionCall",
																			"src": "7206:18:23"
																		},
																		"nativeSrc": "7206:18:23",
																		"nodeType": "YulExpressionStatement",
																		"src": "7206:18:23"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7195:4:23",
																		"nodeType": "YulIdentifier",
																		"src": "7195:4:23"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7201:1:23",
																		"nodeType": "YulIdentifier",
																		"src": "7201:1:23"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7192:2:23",
																	"nodeType": "YulIdentifier",
																	"src": "7192:2:23"
																},
																"nativeSrc": "7192:11:23",
																"nodeType": "YulFunctionCall",
																"src": "7192:11:23"
															},
															"nativeSrc": "7189:37:23",
															"nodeType": "YulIf",
															"src": "7189:37:23"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7039:194:23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7070:1:23",
														"nodeType": "YulTypedName",
														"src": "7070:1:23",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7073:1:23",
														"nodeType": "YulTypedName",
														"src": "7073:1:23",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7079:4:23",
														"nodeType": "YulTypedName",
														"src": "7079:4:23",
														"type": ""
													}
												],
												"src": "7039:194:23"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_67111866d931937286ca54a65005a3e515da8e44535c98b102bab072683691c5(memPtr) {\n\n        mstore(add(memPtr, 0), \"There are not enough coins in yo\")\n\n        mstore(add(memPtr, 32), \"ur staking pool.\")\n\n    }\n\n    function abi_encode_t_stringliteral_67111866d931937286ca54a65005a3e515da8e44535c98b102bab072683691c5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_67111866d931937286ca54a65005a3e515da8e44535c98b102bab072683691c5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_67111866d931937286ca54a65005a3e515da8e44535c98b102bab072683691c5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_67111866d931937286ca54a65005a3e515da8e44535c98b102bab072683691c5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0839195af36ea54dbc20a631264e4e0fc516850571ce306a1e4e2acdc351064e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0.\")\n\n    }\n\n    function abi_encode_t_stringliteral_0839195af36ea54dbc20a631264e4e0fc516850571ce306a1e4e2acdc351064e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_0839195af36ea54dbc20a631264e4e0fc516850571ce306a1e4e2acdc351064e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0839195af36ea54dbc20a631264e4e0fc516850571ce306a1e4e2acdc351064e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0839195af36ea54dbc20a631264e4e0fc516850571ce306a1e4e2acdc351064e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 23,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061007b575f3560e01c80639168ae72116100595780639168ae72146100fd578063adc9772e1461012d578063bf9befb114610149578063c2a672e0146101675761007b565b80630700037d1461007f5780630e15561a146100af5780633d42071c146100cd575b5f80fd5b61009960048036038101906100949190610591565b610197565b6040516100a691906105d4565b60405180910390f35b6100b76101ac565b6040516100c491906105d4565b60405180910390f35b6100e760048036038101906100e29190610617565b6101b2565b6040516100f49190610651565b60405180910390f35b61011760048036038101906101129190610591565b6101ed565b60405161012491906105d4565b60405180910390f35b6101476004803603810190610142919061066a565b610202565b005b6101516103a7565b60405161015e91906105d4565b60405180910390f35b610181600480360381019061017c919061066a565b6103ac565b60405161018e91906106c2565b60405180910390f35b6003602052805f5260405f205f915090505481565b60015481565b600481815481106101c1575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052805f5260405f205f915090505481565b5f8111610244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023b90610735565b60405180910390fd5b600160025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156102eb57600482908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103379190610780565b92505081905550805f8082825461034e9190610780565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8260405161039b91906105d4565b60405180910390a25050565b5f5481565b5f815f5410156103f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e890610823565b60405180910390fd5b8160025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104689061088b565b60405180910390fd5b8160025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104bd91906108a9565b92505081905550815f808282546104d491906108a9565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f758360405161052191906105d4565b60405180910390a26001905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61056082610537565b9050919050565b61057081610556565b811461057a575f80fd5b50565b5f8135905061058b81610567565b92915050565b5f602082840312156105a6576105a5610533565b5b5f6105b38482850161057d565b91505092915050565b5f819050919050565b6105ce816105bc565b82525050565b5f6020820190506105e75f8301846105c5565b92915050565b6105f6816105bc565b8114610600575f80fd5b50565b5f81359050610611816105ed565b92915050565b5f6020828403121561062c5761062b610533565b5b5f61063984828501610603565b91505092915050565b61064b81610556565b82525050565b5f6020820190506106645f830184610642565b92915050565b5f80604083850312156106805761067f610533565b5b5f61068d8582860161057d565b925050602061069e85828601610603565b9150509250929050565b5f8115159050919050565b6106bc816106a8565b82525050565b5f6020820190506106d55f8301846106b3565b92915050565b5f82825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f61071f601d836106db565b915061072a826106eb565b602082019050919050565b5f6020820190508181035f83015261074c81610713565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61078a826105bc565b9150610795836105bc565b92508282019050808211156107ad576107ac610753565b5b92915050565b7f546865726520617265206e6f7420656e6f75676820636f696e7320696e20796f5f8201527f7572207374616b696e6720706f6f6c2e00000000000000000000000000000000602082015250565b5f61080d6030836106db565b9150610818826107b3565b604082019050919050565b5f6020820190508181035f83015261083a81610801565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e20302e00005f82015250565b5f610875601e836106db565b915061088082610841565b602082019050919050565b5f6020820190508181035f8301526108a281610869565b9050919050565b5f6108b3826105bc565b91506108be836105bc565b92508282039050818111156108d6576108d5610753565b5b9291505056fea26469706673582212208d2e3c435f5c4c307763360984639cc889fa6e264ea81b4224616051bd2ba9e764736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9168AE72 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xBF9BEFB1 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xC2A672E0 EQ PUSH2 0x167 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x700037D EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x3D42071C EQ PUSH2 0xCD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x66A JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x151 PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x66A JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x244 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23B SWAP1 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x4 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x780 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x780 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 PUSH0 SLOAD LT ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E8 SWAP1 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x468 SWAP1 PUSH2 0x88B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x8A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x8A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP4 PUSH1 0x40 MLOAD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x560 DUP3 PUSH2 0x537 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x570 DUP2 PUSH2 0x556 JUMP JUMPDEST DUP2 EQ PUSH2 0x57A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x58B DUP2 PUSH2 0x567 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A6 JUMPI PUSH2 0x5A5 PUSH2 0x533 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5B3 DUP5 DUP3 DUP6 ADD PUSH2 0x57D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CE DUP2 PUSH2 0x5BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x5C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5F6 DUP2 PUSH2 0x5BC JUMP JUMPDEST DUP2 EQ PUSH2 0x600 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x611 DUP2 PUSH2 0x5ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62C JUMPI PUSH2 0x62B PUSH2 0x533 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x639 DUP5 DUP3 DUP6 ADD PUSH2 0x603 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x64B DUP2 PUSH2 0x556 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x664 PUSH0 DUP4 ADD DUP5 PUSH2 0x642 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x680 JUMPI PUSH2 0x67F PUSH2 0x533 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x68D DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x69E DUP6 DUP3 DUP7 ADD PUSH2 0x603 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6BC DUP2 PUSH2 0x6A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6D5 PUSH0 DUP4 ADD DUP5 PUSH2 0x6B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x71F PUSH1 0x1D DUP4 PUSH2 0x6DB JUMP JUMPDEST SWAP2 POP PUSH2 0x72A DUP3 PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x74C DUP2 PUSH2 0x713 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x78A DUP3 PUSH2 0x5BC JUMP JUMPDEST SWAP2 POP PUSH2 0x795 DUP4 PUSH2 0x5BC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x7AD JUMPI PUSH2 0x7AC PUSH2 0x753 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546865726520617265206E6F7420656E6F75676820636F696E7320696E20796F PUSH0 DUP3 ADD MSTORE PUSH32 0x7572207374616B696E6720706F6F6C2E00000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x80D PUSH1 0x30 DUP4 PUSH2 0x6DB JUMP JUMPDEST SWAP2 POP PUSH2 0x818 DUP3 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x83A DUP2 PUSH2 0x801 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E20302E0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x875 PUSH1 0x1E DUP4 PUSH2 0x6DB JUMP JUMPDEST SWAP2 POP PUSH2 0x880 DUP3 PUSH2 0x841 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8A2 DUP2 PUSH2 0x869 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8B3 DUP3 PUSH2 0x5BC JUMP JUMPDEST SWAP2 POP PUSH2 0x8BE DUP4 PUSH2 0x5BC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x8D6 JUMPI PUSH2 0x8D5 PUSH2 0x753 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0x2E EXTCODECOPY NUMBER PUSH0 TLOAD 0x4C ADDRESS PUSH24 0x63360984639CC889FA6E264EA81B4224616051BD2BA9E764 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "105:2059:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;253:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;170:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;302:33;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;204:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;607:322;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;137:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;980:418;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;253:42;;;;;;;;;;;;;;;;;:::o;170:27::-;;;;:::o;302:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;204:42::-;;;;;;;;;;;;;;;;;:::o;607:322::-;689:1;680:6;:10;672:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;757:1;739:7;:15;747:6;739:15;;;;;;;;;;;;;;;;:19;735:81;;;775:16;797:6;775:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:81;845:6;826:7;:15;834:6;826:15;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;877:6;862:11;;:21;;;;;;;:::i;:::-;;;;;;;;906:6;899:22;;;914:6;899:22;;;;;;:::i;:::-;;;;;;;;607:322;;:::o;137:26::-;;;;:::o;980:418::-;1045:4;1099:6;1084:11;;:21;;1062:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;1219:6;1200:7;:15;1208:6;1200:15;;;;;;;;;;;;;;;;:25;;1192:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1290:6;1271:7;:15;1279:6;1271:15;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;1322:6;1307:11;;:21;;;;;;;:::i;:::-;;;;;;;;1353:6;1344:24;;;1361:6;1344:24;;;;;;:::i;:::-;;;;;;;;1386:4;1379:11;;980:418;;;;:::o;88:117:23:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:118::-;2306:24;2324:5;2306:24;:::i;:::-;2301:3;2294:37;2219:118;;:::o;2343:222::-;2436:4;2474:2;2463:9;2459:18;2451:26;;2487:71;2555:1;2544:9;2540:17;2531:6;2487:71;:::i;:::-;2343:222;;;;:::o;2571:474::-;2639:6;2647;2696:2;2684:9;2675:7;2671:23;2667:32;2664:119;;;2702:79;;:::i;:::-;2664:119;2822:1;2847:53;2892:7;2883:6;2872:9;2868:22;2847:53;:::i;:::-;2837:63;;2793:117;2949:2;2975:53;3020:7;3011:6;3000:9;2996:22;2975:53;:::i;:::-;2965:63;;2920:118;2571:474;;;;;:::o;3051:90::-;3085:7;3128:5;3121:13;3114:21;3103:32;;3051:90;;;:::o;3147:109::-;3228:21;3243:5;3228:21;:::i;:::-;3223:3;3216:34;3147:109;;:::o;3262:210::-;3349:4;3387:2;3376:9;3372:18;3364:26;;3400:65;3462:1;3451:9;3447:17;3438:6;3400:65;:::i;:::-;3262:210;;;;:::o;3478:169::-;3562:11;3596:6;3591:3;3584:19;3636:4;3631:3;3627:14;3612:29;;3478:169;;;;:::o;3653:179::-;3793:31;3789:1;3781:6;3777:14;3770:55;3653:179;:::o;3838:366::-;3980:3;4001:67;4065:2;4060:3;4001:67;:::i;:::-;3994:74;;4077:93;4166:3;4077:93;:::i;:::-;4195:2;4190:3;4186:12;4179:19;;3838:366;;;:::o;4210:419::-;4376:4;4414:2;4403:9;4399:18;4391:26;;4463:9;4457:4;4453:20;4449:1;4438:9;4434:17;4427:47;4491:131;4617:4;4491:131;:::i;:::-;4483:139;;4210:419;;;:::o;4635:180::-;4683:77;4680:1;4673:88;4780:4;4777:1;4770:15;4804:4;4801:1;4794:15;4821:191;4861:3;4880:20;4898:1;4880:20;:::i;:::-;4875:25;;4914:20;4932:1;4914:20;:::i;:::-;4909:25;;4957:1;4954;4950:9;4943:16;;4978:3;4975:1;4972:10;4969:36;;;4985:18;;:::i;:::-;4969:36;4821:191;;;;:::o;5018:235::-;5158:34;5154:1;5146:6;5142:14;5135:58;5227:18;5222:2;5214:6;5210:15;5203:43;5018:235;:::o;5259:366::-;5401:3;5422:67;5486:2;5481:3;5422:67;:::i;:::-;5415:74;;5498:93;5587:3;5498:93;:::i;:::-;5616:2;5611:3;5607:12;5600:19;;5259:366;;;:::o;5631:419::-;5797:4;5835:2;5824:9;5820:18;5812:26;;5884:9;5878:4;5874:20;5870:1;5859:9;5855:17;5848:47;5912:131;6038:4;5912:131;:::i;:::-;5904:139;;5631:419;;;:::o;6056:180::-;6196:32;6192:1;6184:6;6180:14;6173:56;6056:180;:::o;6242:366::-;6384:3;6405:67;6469:2;6464:3;6405:67;:::i;:::-;6398:74;;6481:93;6570:3;6481:93;:::i;:::-;6599:2;6594:3;6590:12;6583:19;;6242:366;;;:::o;6614:419::-;6780:4;6818:2;6807:9;6803:18;6795:26;;6867:9;6861:4;6857:20;6853:1;6842:9;6838:17;6831:47;6895:131;7021:4;6895:131;:::i;:::-;6887:139;;6614:419;;;:::o;7039:194::-;7079:4;7099:20;7117:1;7099:20;:::i;:::-;7094:25;;7133:20;7151:1;7133:20;:::i;:::-;7128:25;;7177:1;7174;7170:9;7162:17;;7201:1;7195:4;7192:11;7189:37;;;7206:18;;:::i;:::-;7189:37;7039:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "464400",
								"executionCost": "497",
								"totalCost": "464897"
							},
							"external": {
								"rewards(address)": "2803",
								"stake(address,uint256)": "infinite",
								"stakers(address)": "2802",
								"stakersAddresses(uint256)": "4989",
								"totalRewards()": "2448",
								"totalStakes()": "2468",
								"unstake(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 105,
									"end": 2164,
									"name": "PUSH",
									"source": 22,
									"value": "80"
								},
								{
									"begin": 105,
									"end": 2164,
									"name": "PUSH",
									"source": 22,
									"value": "40"
								},
								{
									"begin": 105,
									"end": 2164,
									"name": "MSTORE",
									"source": 22
								},
								{
									"begin": 542,
									"end": 558,
									"name": "CALLVALUE",
									"source": 22
								},
								{
									"begin": 542,
									"end": 558,
									"name": "DUP1",
									"source": 22
								},
								{
									"begin": 542,
									"end": 558,
									"name": "ISZERO",
									"source": 22
								},
								{
									"begin": 542,
									"end": 558,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "1"
								},
								{
									"begin": 542,
									"end": 558,
									"name": "JUMPI",
									"source": 22
								},
								{
									"begin": 542,
									"end": 558,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 542,
									"end": 558,
									"name": "DUP1",
									"source": 22
								},
								{
									"begin": 542,
									"end": 558,
									"name": "REVERT",
									"source": 22
								},
								{
									"begin": 542,
									"end": 558,
									"name": "tag",
									"source": 22,
									"value": "1"
								},
								{
									"begin": 542,
									"end": 558,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 542,
									"end": 558,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 105,
									"end": 2164,
									"name": "PUSH #[$]",
									"source": 22,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 105,
									"end": 2164,
									"name": "DUP1",
									"source": 22
								},
								{
									"begin": 105,
									"end": 2164,
									"name": "PUSH [$]",
									"source": 22,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 105,
									"end": 2164,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 105,
									"end": 2164,
									"name": "CODECOPY",
									"source": 22
								},
								{
									"begin": 105,
									"end": 2164,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 105,
									"end": 2164,
									"name": "RETURN",
									"source": 22
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208d2e3c435f5c4c307763360984639cc889fa6e264ea81b4224616051bd2ba9e764736f6c63430008190033",
									".code": [
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "CALLVALUE",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "1"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "tag",
											"source": 22,
											"value": "1"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "CALLDATASIZE",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "2"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH",
											"source": 22,
											"value": "E0"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "SHR",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH",
											"source": 22,
											"value": "9168AE72"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "10"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH",
											"source": 22,
											"value": "9168AE72"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "6"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH",
											"source": 22,
											"value": "ADC9772E"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "7"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH",
											"source": 22,
											"value": "BF9BEFB1"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "8"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH",
											"source": 22,
											"value": "C2A672E0"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "9"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "2"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "tag",
											"source": 22,
											"value": "10"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH",
											"source": 22,
											"value": "700037D"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "3"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH",
											"source": 22,
											"value": "E15561A"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH",
											"source": 22,
											"value": "3D42071C"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "5"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "tag",
											"source": 22,
											"value": "2"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 105,
											"end": 2164,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "tag",
											"source": 22,
											"value": "3"
										},
										{
											"begin": 253,
											"end": 295,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "11"
										},
										{
											"begin": 253,
											"end": 295,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 253,
											"end": 295,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "CALLDATASIZE",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "12"
										},
										{
											"begin": 253,
											"end": 295,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "13"
										},
										{
											"begin": 253,
											"end": 295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "tag",
											"source": 22,
											"value": "12"
										},
										{
											"begin": 253,
											"end": 295,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "14"
										},
										{
											"begin": 253,
											"end": 295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "tag",
											"source": 22,
											"value": "11"
										},
										{
											"begin": 253,
											"end": 295,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 295,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "15"
										},
										{
											"begin": 253,
											"end": 295,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "16"
										},
										{
											"begin": 253,
											"end": 295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "tag",
											"source": 22,
											"value": "15"
										},
										{
											"begin": 253,
											"end": 295,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 295,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "RETURN",
											"source": 22
										},
										{
											"begin": 170,
											"end": 197,
											"name": "tag",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 197,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 170,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "17"
										},
										{
											"begin": 170,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "18"
										},
										{
											"begin": 170,
											"end": 197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 170,
											"end": 197,
											"name": "tag",
											"source": 22,
											"value": "17"
										},
										{
											"begin": 170,
											"end": 197,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 170,
											"end": 197,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 197,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 170,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "19"
										},
										{
											"begin": 170,
											"end": 197,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 170,
											"end": 197,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 170,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "16"
										},
										{
											"begin": 170,
											"end": 197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 170,
											"end": 197,
											"name": "tag",
											"source": 22,
											"value": "19"
										},
										{
											"begin": 170,
											"end": 197,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 170,
											"end": 197,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 197,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 170,
											"end": 197,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 170,
											"end": 197,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 170,
											"end": 197,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 170,
											"end": 197,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 170,
											"end": 197,
											"name": "RETURN",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "tag",
											"source": 22,
											"value": "5"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "CALLDATASIZE",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "21"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "22"
										},
										{
											"begin": 302,
											"end": 335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "tag",
											"source": 22,
											"value": "21"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "23"
										},
										{
											"begin": 302,
											"end": 335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "tag",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "25"
										},
										{
											"begin": 302,
											"end": 335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "tag",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "RETURN",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "tag",
											"source": 22,
											"value": "6"
										},
										{
											"begin": 204,
											"end": 246,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "26"
										},
										{
											"begin": 204,
											"end": 246,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 204,
											"end": 246,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "CALLDATASIZE",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "27"
										},
										{
											"begin": 204,
											"end": 246,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "13"
										},
										{
											"begin": 204,
											"end": 246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "tag",
											"source": 22,
											"value": "27"
										},
										{
											"begin": 204,
											"end": 246,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "28"
										},
										{
											"begin": 204,
											"end": 246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "tag",
											"source": 22,
											"value": "26"
										},
										{
											"begin": 204,
											"end": 246,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 246,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "29"
										},
										{
											"begin": 204,
											"end": 246,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "16"
										},
										{
											"begin": 204,
											"end": 246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "tag",
											"source": 22,
											"value": "29"
										},
										{
											"begin": 204,
											"end": 246,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 246,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "RETURN",
											"source": 22
										},
										{
											"begin": 607,
											"end": 929,
											"name": "tag",
											"source": 22,
											"value": "7"
										},
										{
											"begin": 607,
											"end": 929,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 607,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "30"
										},
										{
											"begin": 607,
											"end": 929,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 607,
											"end": 929,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 607,
											"end": 929,
											"name": "CALLDATASIZE",
											"source": 22
										},
										{
											"begin": 607,
											"end": 929,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 607,
											"end": 929,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 607,
											"end": 929,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 607,
											"end": 929,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 607,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "31"
										},
										{
											"begin": 607,
											"end": 929,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 607,
											"end": 929,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 607,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "32"
										},
										{
											"begin": 607,
											"end": 929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 607,
											"end": 929,
											"name": "tag",
											"source": 22,
											"value": "31"
										},
										{
											"begin": 607,
											"end": 929,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 607,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "33"
										},
										{
											"begin": 607,
											"end": 929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 607,
											"end": 929,
											"name": "tag",
											"source": 22,
											"value": "30"
										},
										{
											"begin": 607,
											"end": 929,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 607,
											"end": 929,
											"name": "STOP",
											"source": 22
										},
										{
											"begin": 137,
											"end": 163,
											"name": "tag",
											"source": 22,
											"value": "8"
										},
										{
											"begin": 137,
											"end": 163,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 137,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "34"
										},
										{
											"begin": 137,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "35"
										},
										{
											"begin": 137,
											"end": 163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 137,
											"end": 163,
											"name": "tag",
											"source": 22,
											"value": "34"
										},
										{
											"begin": 137,
											"end": 163,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 137,
											"end": 163,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 137,
											"end": 163,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 137,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "36"
										},
										{
											"begin": 137,
											"end": 163,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 137,
											"end": 163,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 137,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "16"
										},
										{
											"begin": 137,
											"end": 163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 137,
											"end": 163,
											"name": "tag",
											"source": 22,
											"value": "36"
										},
										{
											"begin": 137,
											"end": 163,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 137,
											"end": 163,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 137,
											"end": 163,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 137,
											"end": 163,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 137,
											"end": 163,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 137,
											"end": 163,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 137,
											"end": 163,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 137,
											"end": 163,
											"name": "RETURN",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "tag",
											"source": 22,
											"value": "9"
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "37"
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "CALLDATASIZE",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "38"
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "32"
										},
										{
											"begin": 980,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "tag",
											"source": 22,
											"value": "38"
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "39"
										},
										{
											"begin": 980,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "tag",
											"source": 22,
											"value": "37"
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "41"
										},
										{
											"begin": 980,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "tag",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "RETURN",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "tag",
											"source": 22,
											"value": "14"
										},
										{
											"begin": 253,
											"end": 295,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "PUSH",
											"source": 22,
											"value": "3"
										},
										{
											"begin": 253,
											"end": 295,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 253,
											"end": 295,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 295,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 295,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 295,
											"name": "KECCAK256",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 295,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "SLOAD",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 253,
											"end": 295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 170,
											"end": 197,
											"name": "tag",
											"source": 22,
											"value": "18"
										},
										{
											"begin": 170,
											"end": 197,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 170,
											"end": 197,
											"name": "PUSH",
											"source": 22,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 197,
											"name": "SLOAD",
											"source": 22
										},
										{
											"begin": 170,
											"end": 197,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 170,
											"end": 197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "tag",
											"source": 22,
											"value": "23"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "SLOAD",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "42"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "tag",
											"source": 22,
											"value": "42"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "KECCAK256",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "SLOAD",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "PUSH",
											"source": 22,
											"value": "100"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "EXP",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "DIV",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 302,
											"end": 335,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 302,
											"end": 335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "tag",
											"source": 22,
											"value": "28"
										},
										{
											"begin": 204,
											"end": 246,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "PUSH",
											"source": 22,
											"value": "2"
										},
										{
											"begin": 204,
											"end": 246,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 204,
											"end": 246,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 246,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 246,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 246,
											"name": "KECCAK256",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 246,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "SLOAD",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 204,
											"end": 246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 607,
											"end": 929,
											"name": "tag",
											"source": 22,
											"value": "33"
										},
										{
											"begin": 607,
											"end": 929,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 689,
											"end": 690,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 686,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 680,
											"end": 690,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 672,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "45"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 672,
											"end": 724,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 672,
											"end": 724,
											"name": "PUSH",
											"source": 22,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 672,
											"end": 724,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 672,
											"end": 724,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 672,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "46"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 672,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "47"
										},
										{
											"begin": 672,
											"end": 724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 672,
											"end": 724,
											"name": "tag",
											"source": 22,
											"value": "46"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 672,
											"end": 724,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 672,
											"end": 724,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 672,
											"end": 724,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 672,
											"end": 724,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 672,
											"end": 724,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 672,
											"end": 724,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 672,
											"end": 724,
											"name": "tag",
											"source": 22,
											"value": "45"
										},
										{
											"begin": 672,
											"end": 724,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 757,
											"end": 758,
											"name": "PUSH",
											"source": 22,
											"value": "1"
										},
										{
											"begin": 739,
											"end": 746,
											"name": "PUSH",
											"source": 22,
											"value": "2"
										},
										{
											"begin": 739,
											"end": 754,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 753,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 739,
											"end": 754,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 739,
											"end": 754,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 739,
											"end": 754,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 739,
											"end": 754,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 739,
											"end": 754,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 739,
											"end": 754,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 739,
											"end": 754,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 739,
											"end": 754,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 739,
											"end": 754,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 739,
											"end": 754,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 739,
											"end": 754,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 739,
											"end": 754,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 739,
											"end": 754,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 739,
											"end": 754,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 754,
											"name": "KECCAK256",
											"source": 22
										},
										{
											"begin": 739,
											"end": 754,
											"name": "SLOAD",
											"source": 22
										},
										{
											"begin": 739,
											"end": 758,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 735,
											"end": 816,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 735,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "48"
										},
										{
											"begin": 735,
											"end": 816,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 775,
											"end": 791,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 797,
											"end": 803,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "PUSH",
											"source": 22,
											"value": "1"
										},
										{
											"begin": 775,
											"end": 804,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "SLOAD",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "SSTORE",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "PUSH",
											"source": 22,
											"value": "1"
										},
										{
											"begin": 775,
											"end": 804,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 804,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 775,
											"end": 804,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 804,
											"name": "KECCAK256",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 804,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "PUSH",
											"source": 22,
											"value": "100"
										},
										{
											"begin": 775,
											"end": 804,
											"name": "EXP",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "SLOAD",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 804,
											"name": "MUL",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "NOT",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 804,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "MUL",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "OR",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "SSTORE",
											"source": 22
										},
										{
											"begin": 775,
											"end": 804,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 735,
											"end": 816,
											"name": "tag",
											"source": 22,
											"value": "48"
										},
										{
											"begin": 735,
											"end": 816,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 845,
											"end": 851,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 826,
											"end": 833,
											"name": "PUSH",
											"source": 22,
											"value": "2"
										},
										{
											"begin": 826,
											"end": 841,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 840,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 826,
											"end": 841,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 841,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 826,
											"end": 841,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 841,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 826,
											"end": 841,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 826,
											"end": 841,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 826,
											"end": 841,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 841,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 826,
											"end": 841,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 826,
											"end": 841,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 826,
											"end": 841,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 826,
											"end": 841,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 841,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 826,
											"end": 841,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 841,
											"name": "KECCAK256",
											"source": 22
										},
										{
											"begin": 826,
											"end": 841,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 851,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 826,
											"end": 851,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 826,
											"end": 851,
											"name": "SLOAD",
											"source": 22
										},
										{
											"begin": 826,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "50"
										},
										{
											"begin": 826,
											"end": 851,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 826,
											"end": 851,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 826,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "51"
										},
										{
											"begin": 826,
											"end": 851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 826,
											"end": 851,
											"name": "tag",
											"source": 22,
											"value": "50"
										},
										{
											"begin": 826,
											"end": 851,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 826,
											"end": 851,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 826,
											"end": 851,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 826,
											"end": 851,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 826,
											"end": 851,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 826,
											"end": 851,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 826,
											"end": 851,
											"name": "SSTORE",
											"source": 22
										},
										{
											"begin": 826,
											"end": 851,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 877,
											"end": 883,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 862,
											"end": 873,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 862,
											"end": 883,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 862,
											"end": 883,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 862,
											"end": 883,
											"name": "SLOAD",
											"source": 22
										},
										{
											"begin": 862,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "52"
										},
										{
											"begin": 862,
											"end": 883,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 862,
											"end": 883,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 862,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "51"
										},
										{
											"begin": 862,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 862,
											"end": 883,
											"name": "tag",
											"source": 22,
											"value": "52"
										},
										{
											"begin": 862,
											"end": 883,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 862,
											"end": 883,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 862,
											"end": 883,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 862,
											"end": 883,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 862,
											"end": 883,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 862,
											"end": 883,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 862,
											"end": 883,
											"name": "SSTORE",
											"source": 22
										},
										{
											"begin": 862,
											"end": 883,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 906,
											"end": 912,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 899,
											"end": 921,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 899,
											"end": 921,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 899,
											"end": 921,
											"name": "PUSH",
											"source": 22,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 914,
											"end": 920,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 899,
											"end": 921,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 921,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 899,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "53"
										},
										{
											"begin": 899,
											"end": 921,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 899,
											"end": 921,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 899,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "16"
										},
										{
											"begin": 899,
											"end": 921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 899,
											"end": 921,
											"name": "tag",
											"source": 22,
											"value": "53"
										},
										{
											"begin": 899,
											"end": 921,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 899,
											"end": 921,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 921,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 899,
											"end": 921,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 899,
											"end": 921,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 899,
											"end": 921,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 899,
											"end": 921,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 899,
											"end": 921,
											"name": "LOG2",
											"source": 22
										},
										{
											"begin": 607,
											"end": 929,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 607,
											"end": 929,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 607,
											"end": 929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 137,
											"end": 163,
											"name": "tag",
											"source": 22,
											"value": "35"
										},
										{
											"begin": 137,
											"end": 163,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 137,
											"end": 163,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 163,
											"name": "SLOAD",
											"source": 22
										},
										{
											"begin": 137,
											"end": 163,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 137,
											"end": 163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "tag",
											"source": 22,
											"value": "39"
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1045,
											"end": 1049,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1105,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1084,
											"end": 1095,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1095,
											"name": "SLOAD",
											"source": 22
										},
										{
											"begin": 1084,
											"end": 1105,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 1084,
											"end": 1105,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "55"
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "PUSH",
											"source": 22,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "56"
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "57"
										},
										{
											"begin": 1062,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "tag",
											"source": 22,
											"value": "56"
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "tag",
											"source": 22,
											"value": "55"
										},
										{
											"begin": 1062,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1219,
											"end": 1225,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1200,
											"end": 1207,
											"name": "PUSH",
											"source": 22,
											"value": "2"
										},
										{
											"begin": 1200,
											"end": 1215,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1214,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 1200,
											"end": 1215,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1200,
											"end": 1215,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 1200,
											"end": 1215,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1200,
											"end": 1215,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 1200,
											"end": 1215,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1200,
											"end": 1215,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 1200,
											"end": 1215,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 1200,
											"end": 1215,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1200,
											"end": 1215,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1200,
											"end": 1215,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1200,
											"end": 1215,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 1200,
											"end": 1215,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 1200,
											"end": 1215,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1200,
											"end": 1215,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1215,
											"name": "KECCAK256",
											"source": 22
										},
										{
											"begin": 1200,
											"end": 1215,
											"name": "SLOAD",
											"source": 22
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "58"
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "PUSH",
											"source": 22,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "59"
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 1192,
											"end": 1260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "tag",
											"source": 22,
											"value": "59"
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "tag",
											"source": 22,
											"value": "58"
										},
										{
											"begin": 1192,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "PUSH",
											"source": 22,
											"value": "2"
										},
										{
											"begin": 1271,
											"end": 1286,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1285,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1286,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1271,
											"end": 1286,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1286,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1271,
											"end": 1286,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1286,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1286,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1286,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1286,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1286,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1286,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1286,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1286,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1286,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1286,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1286,
											"name": "KECCAK256",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1286,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1296,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1296,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1296,
											"name": "SLOAD",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "61"
										},
										{
											"begin": 1271,
											"end": 1296,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1296,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "62"
										},
										{
											"begin": 1271,
											"end": 1296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1296,
											"name": "tag",
											"source": 22,
											"value": "61"
										},
										{
											"begin": 1271,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1296,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1296,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1296,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1296,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1296,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1296,
											"name": "SSTORE",
											"source": 22
										},
										{
											"begin": 1271,
											"end": 1296,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1307,
											"end": 1318,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1318,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 1307,
											"end": 1328,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 1307,
											"end": 1328,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 1307,
											"end": 1328,
											"name": "SLOAD",
											"source": 22
										},
										{
											"begin": 1307,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "63"
										},
										{
											"begin": 1307,
											"end": 1328,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 1307,
											"end": 1328,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1307,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "62"
										},
										{
											"begin": 1307,
											"end": 1328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1307,
											"end": 1328,
											"name": "tag",
											"source": 22,
											"value": "63"
										},
										{
											"begin": 1307,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1307,
											"end": 1328,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 1307,
											"end": 1328,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1307,
											"end": 1328,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1307,
											"end": 1328,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1307,
											"end": 1328,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1307,
											"end": 1328,
											"name": "SSTORE",
											"source": 22
										},
										{
											"begin": 1307,
											"end": 1328,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "PUSH",
											"source": 22,
											"value": "F5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75"
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "64"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "16"
										},
										{
											"begin": 1344,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "tag",
											"source": 22,
											"value": "64"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "LOG2",
											"source": 22
										},
										{
											"begin": 1386,
											"end": 1390,
											"name": "PUSH",
											"source": 22,
											"value": "1"
										},
										{
											"begin": 1379,
											"end": 1390,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1379,
											"end": 1390,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 980,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 23,
											"value": "66"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 23,
											"value": "68"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 23,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 23
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 23,
											"value": "69"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "93"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "68"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 23,
											"value": "93"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 23,
											"value": "70"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "95"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "69"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 23,
											"value": "95"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "96"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 23,
											"value": "96"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 23,
											"value": "71"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "98"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "70"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 23,
											"value": "98"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 23,
											"value": "13"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "100"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "101"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "66"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 23,
											"value": "101"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 23,
											"value": "100"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "102"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "71"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 23,
											"value": "102"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 23,
											"value": "72"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 23,
											"value": "73"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "105"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "72"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 23,
											"value": "105"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 23,
											"value": "16"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "107"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "73"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 23,
											"value": "107"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 23,
											"value": "74"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "109"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "72"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 23,
											"value": "109"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "110"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 23,
											"value": "110"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 23,
											"value": "75"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 23
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "112"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "74"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 23,
											"value": "112"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 23,
											"value": "22"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "114"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "115"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "66"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 23,
											"value": "115"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 23,
											"value": "114"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "116"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "75"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 23,
											"value": "116"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "tag",
											"source": 23,
											"value": "76"
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "118"
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "69"
										},
										{
											"begin": 2306,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "tag",
											"source": 23,
											"value": "118"
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2301,
											"end": 2304,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2294,
											"end": 2331,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2219,
											"end": 2337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "tag",
											"source": 23,
											"value": "25"
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2436,
											"end": 2440,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2476,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2472,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2459,
											"end": 2477,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "120"
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 2540,
											"end": 2557,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "76"
										},
										{
											"begin": 2487,
											"end": 2558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "tag",
											"source": 23,
											"value": "120"
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2343,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "tag",
											"source": 23,
											"value": "32"
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2639,
											"end": 2645,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 2696,
											"end": 2698,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 2684,
											"end": 2693,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 2675,
											"end": 2682,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 2667,
											"end": 2699,
											"name": "SLT",
											"source": 23
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "122"
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "123"
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "66"
										},
										{
											"begin": 2702,
											"end": 2781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "tag",
											"source": 23,
											"value": "123"
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "tag",
											"source": 23,
											"value": "122"
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2822,
											"end": 2823,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "124"
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 2872,
											"end": 2881,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "71"
										},
										{
											"begin": 2847,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "tag",
											"source": 23,
											"value": "124"
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2837,
											"end": 2900,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 2837,
											"end": 2900,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2793,
											"end": 2910,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2949,
											"end": 2951,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "125"
										},
										{
											"begin": 3020,
											"end": 3027,
											"name": "DUP6",
											"source": 23
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "DUP7",
											"source": 23
										},
										{
											"begin": 2996,
											"end": 3018,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "75"
										},
										{
											"begin": 2975,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "tag",
											"source": 23,
											"value": "125"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2920,
											"end": 3038,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 2571,
											"end": 3045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "tag",
											"source": 23,
											"value": "77"
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3085,
											"end": 3092,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3128,
											"end": 3133,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3121,
											"end": 3134,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 3114,
											"end": 3135,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 3103,
											"end": 3135,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3103,
											"end": 3135,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3051,
											"end": 3141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "tag",
											"source": 23,
											"value": "78"
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "128"
										},
										{
											"begin": 3243,
											"end": 3248,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "77"
										},
										{
											"begin": 3228,
											"end": 3249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "tag",
											"source": 23,
											"value": "128"
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3223,
											"end": 3226,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3147,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "tag",
											"source": 23,
											"value": "41"
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3349,
											"end": 3353,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3389,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 3376,
											"end": 3385,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "130"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 3447,
											"end": 3464,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3438,
											"end": 3444,
											"name": "DUP5",
											"source": 23
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "78"
										},
										{
											"begin": 3400,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "tag",
											"source": 23,
											"value": "130"
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3262,
											"end": 3472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "tag",
											"source": 23,
											"value": "79"
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3562,
											"end": 3573,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3602,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3591,
											"end": 3594,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3584,
											"end": 3603,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 3636,
											"end": 3640,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 3631,
											"end": 3634,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3627,
											"end": 3641,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3612,
											"end": 3641,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3612,
											"end": 3641,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3478,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3653,
											"end": 3832,
											"name": "tag",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 3653,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3793,
											"end": 3824,
											"name": "PUSH",
											"source": 23,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 3789,
											"end": 3790,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3787,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 3777,
											"end": 3791,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 3770,
											"end": 3825,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 3653,
											"end": 3832,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3653,
											"end": 3832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 3838,
											"end": 4204,
											"name": "tag",
											"source": 23,
											"value": "81"
										},
										{
											"begin": 3838,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3980,
											"end": 3983,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4001,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "134"
										},
										{
											"begin": 4065,
											"end": 4067,
											"name": "PUSH",
											"source": 23,
											"value": "1D"
										},
										{
											"begin": 4060,
											"end": 4063,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 4001,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "79"
										},
										{
											"begin": 4001,
											"end": 4068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4001,
											"end": 4068,
											"name": "tag",
											"source": 23,
											"value": "134"
										},
										{
											"begin": 4001,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 3994,
											"end": 4068,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3994,
											"end": 4068,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4077,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "135"
										},
										{
											"begin": 4166,
											"end": 4169,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4077,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 4077,
											"end": 4170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4077,
											"end": 4170,
											"name": "tag",
											"source": 23,
											"value": "135"
										},
										{
											"begin": 4077,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4195,
											"end": 4197,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 4190,
											"end": 4193,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4186,
											"end": 4198,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4179,
											"end": 4198,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4179,
											"end": 4198,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3838,
											"end": 4204,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 3838,
											"end": 4204,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 3838,
											"end": 4204,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 3838,
											"end": 4204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4210,
											"end": 4629,
											"name": "tag",
											"source": 23,
											"value": "47"
										},
										{
											"begin": 4210,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4376,
											"end": 4380,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 4403,
											"end": 4412,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4399,
											"end": 4417,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4391,
											"end": 4417,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4391,
											"end": 4417,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4463,
											"end": 4472,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4457,
											"end": 4461,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4453,
											"end": 4473,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 4449,
											"end": 4450,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4447,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 4434,
											"end": 4451,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4427,
											"end": 4474,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 4491,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "137"
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 4491,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "81"
										},
										{
											"begin": 4491,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4491,
											"end": 4622,
											"name": "tag",
											"source": 23,
											"value": "137"
										},
										{
											"begin": 4491,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4483,
											"end": 4622,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4483,
											"end": 4622,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4210,
											"end": 4629,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4210,
											"end": 4629,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4210,
											"end": 4629,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4210,
											"end": 4629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4635,
											"end": 4815,
											"name": "tag",
											"source": 23,
											"value": "82"
										},
										{
											"begin": 4635,
											"end": 4815,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4683,
											"end": 4760,
											"name": "PUSH",
											"source": 23,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4680,
											"end": 4681,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4673,
											"end": 4761,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 4780,
											"end": 4784,
											"name": "PUSH",
											"source": 23,
											"value": "11"
										},
										{
											"begin": 4777,
											"end": 4778,
											"name": "PUSH",
											"source": 23,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4785,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 4804,
											"end": 4808,
											"name": "PUSH",
											"source": 23,
											"value": "24"
										},
										{
											"begin": 4801,
											"end": 4802,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4794,
											"end": 4809,
											"name": "REVERT",
											"source": 23
										},
										{
											"begin": 4821,
											"end": 5012,
											"name": "tag",
											"source": 23,
											"value": "51"
										},
										{
											"begin": 4821,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4861,
											"end": 4864,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "140"
										},
										{
											"begin": 4898,
											"end": 4899,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4880,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "72"
										},
										{
											"begin": 4880,
											"end": 4900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4880,
											"end": 4900,
											"name": "tag",
											"source": 23,
											"value": "140"
										},
										{
											"begin": 4880,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4875,
											"end": 4900,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4875,
											"end": 4900,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4914,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "141"
										},
										{
											"begin": 4932,
											"end": 4933,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 4914,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "72"
										},
										{
											"begin": 4914,
											"end": 4934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4914,
											"end": 4934,
											"name": "tag",
											"source": 23,
											"value": "141"
										},
										{
											"begin": 4914,
											"end": 4934,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4909,
											"end": 4934,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 4909,
											"end": 4934,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4957,
											"end": 4958,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4954,
											"end": 4955,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4950,
											"end": 4959,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 4943,
											"end": 4959,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 4943,
											"end": 4959,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4978,
											"end": 4981,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 4975,
											"end": 4976,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 4972,
											"end": 4982,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 4969,
											"end": 5005,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 4969,
											"end": 5005,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "142"
										},
										{
											"begin": 4969,
											"end": 5005,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 4985,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "143"
										},
										{
											"begin": 4985,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "82"
										},
										{
											"begin": 4985,
											"end": 5003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 4985,
											"end": 5003,
											"name": "tag",
											"source": 23,
											"value": "143"
										},
										{
											"begin": 4985,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4969,
											"end": 5005,
											"name": "tag",
											"source": 23,
											"value": "142"
										},
										{
											"begin": 4969,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 4821,
											"end": 5012,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 4821,
											"end": 5012,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 4821,
											"end": 5012,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4821,
											"end": 5012,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 4821,
											"end": 5012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5018,
											"end": 5253,
											"name": "tag",
											"source": 23,
											"value": "83"
										},
										{
											"begin": 5018,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5158,
											"end": 5192,
											"name": "PUSH",
											"source": 23,
											"value": "546865726520617265206E6F7420656E6F75676820636F696E7320696E20796F"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5152,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5135,
											"end": 5193,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 5227,
											"end": 5245,
											"name": "PUSH",
											"source": 23,
											"value": "7572207374616B696E6720706F6F6C2E00000000000000000000000000000000"
										},
										{
											"begin": 5222,
											"end": 5224,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 5214,
											"end": 5220,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5210,
											"end": 5225,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5203,
											"end": 5246,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 5018,
											"end": 5253,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5018,
											"end": 5253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5259,
											"end": 5625,
											"name": "tag",
											"source": 23,
											"value": "84"
										},
										{
											"begin": 5259,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5401,
											"end": 5404,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5422,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "146"
										},
										{
											"begin": 5486,
											"end": 5488,
											"name": "PUSH",
											"source": 23,
											"value": "30"
										},
										{
											"begin": 5481,
											"end": 5484,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 5422,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "79"
										},
										{
											"begin": 5422,
											"end": 5489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5422,
											"end": 5489,
											"name": "tag",
											"source": 23,
											"value": "146"
										},
										{
											"begin": 5422,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5415,
											"end": 5489,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 5415,
											"end": 5489,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5498,
											"end": 5591,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "147"
										},
										{
											"begin": 5587,
											"end": 5590,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5498,
											"end": 5591,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "83"
										},
										{
											"begin": 5498,
											"end": 5591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5498,
											"end": 5591,
											"name": "tag",
											"source": 23,
											"value": "147"
										},
										{
											"begin": 5498,
											"end": 5591,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5616,
											"end": 5618,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 5611,
											"end": 5614,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5607,
											"end": 5619,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5600,
											"end": 5619,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5600,
											"end": 5619,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5259,
											"end": 5625,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 5259,
											"end": 5625,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5259,
											"end": 5625,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5259,
											"end": 5625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5631,
											"end": 6050,
											"name": "tag",
											"source": 23,
											"value": "57"
										},
										{
											"begin": 5631,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5797,
											"end": 5801,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5835,
											"end": 5837,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 5824,
											"end": 5833,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5812,
											"end": 5838,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5812,
											"end": 5838,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5884,
											"end": 5893,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5878,
											"end": 5882,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5874,
											"end": 5894,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 5870,
											"end": 5871,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 5859,
											"end": 5868,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 5855,
											"end": 5872,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 5848,
											"end": 5895,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 5912,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "149"
										},
										{
											"begin": 6038,
											"end": 6042,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 5912,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "84"
										},
										{
											"begin": 5912,
											"end": 6043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 5912,
											"end": 6043,
											"name": "tag",
											"source": 23,
											"value": "149"
										},
										{
											"begin": 5912,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 5904,
											"end": 6043,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5904,
											"end": 6043,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5631,
											"end": 6050,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 5631,
											"end": 6050,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 5631,
											"end": 6050,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 5631,
											"end": 6050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6056,
											"end": 6236,
											"name": "tag",
											"source": 23,
											"value": "85"
										},
										{
											"begin": 6056,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6196,
											"end": 6228,
											"name": "PUSH",
											"source": 23,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E20302E0000"
										},
										{
											"begin": 6192,
											"end": 6193,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6184,
											"end": 6190,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6180,
											"end": 6194,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6173,
											"end": 6229,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 6056,
											"end": 6236,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6056,
											"end": 6236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6242,
											"end": 6608,
											"name": "tag",
											"source": 23,
											"value": "86"
										},
										{
											"begin": 6242,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6384,
											"end": 6387,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6472,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "152"
										},
										{
											"begin": 6469,
											"end": 6471,
											"name": "PUSH",
											"source": 23,
											"value": "1E"
										},
										{
											"begin": 6464,
											"end": 6467,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 6405,
											"end": 6472,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "79"
										},
										{
											"begin": 6405,
											"end": 6472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6405,
											"end": 6472,
											"name": "tag",
											"source": 23,
											"value": "152"
										},
										{
											"begin": 6405,
											"end": 6472,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6398,
											"end": 6472,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6398,
											"end": 6472,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6481,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "153"
										},
										{
											"begin": 6570,
											"end": 6573,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6481,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "85"
										},
										{
											"begin": 6481,
											"end": 6574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6481,
											"end": 6574,
											"name": "tag",
											"source": 23,
											"value": "153"
										},
										{
											"begin": 6481,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6599,
											"end": 6601,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 6594,
											"end": 6597,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6590,
											"end": 6602,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6583,
											"end": 6602,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6583,
											"end": 6602,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6242,
											"end": 6608,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6242,
											"end": 6608,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6242,
											"end": 6608,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6242,
											"end": 6608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6614,
											"end": 7033,
											"name": "tag",
											"source": 23,
											"value": "60"
										},
										{
											"begin": 6614,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6780,
											"end": 6784,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6818,
											"end": 6820,
											"name": "PUSH",
											"source": 23,
											"value": "20"
										},
										{
											"begin": 6807,
											"end": 6816,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 6803,
											"end": 6821,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6795,
											"end": 6821,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6795,
											"end": 6821,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6867,
											"end": 6876,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6861,
											"end": 6865,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6857,
											"end": 6877,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 6853,
											"end": 6854,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 6842,
											"end": 6851,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 6838,
											"end": 6855,
											"name": "ADD",
											"source": 23
										},
										{
											"begin": 6831,
											"end": 6878,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 6895,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "155"
										},
										{
											"begin": 7021,
											"end": 7025,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 6895,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "86"
										},
										{
											"begin": 6895,
											"end": 7026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 6895,
											"end": 7026,
											"name": "tag",
											"source": 23,
											"value": "155"
										},
										{
											"begin": 6895,
											"end": 7026,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 6887,
											"end": 7026,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6887,
											"end": 7026,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6614,
											"end": 7033,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 6614,
											"end": 7033,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 6614,
											"end": 7033,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 6614,
											"end": 7033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7039,
											"end": 7233,
											"name": "tag",
											"source": 23,
											"value": "62"
										},
										{
											"begin": 7039,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7079,
											"end": 7083,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 7099,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "157"
										},
										{
											"begin": 7117,
											"end": 7118,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7099,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "72"
										},
										{
											"begin": 7099,
											"end": 7119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7099,
											"end": 7119,
											"name": "tag",
											"source": 23,
											"value": "157"
										},
										{
											"begin": 7099,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7094,
											"end": 7119,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7094,
											"end": 7119,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7133,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "158"
										},
										{
											"begin": 7151,
											"end": 7152,
											"name": "DUP4",
											"source": 23
										},
										{
											"begin": 7133,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "72"
										},
										{
											"begin": 7133,
											"end": 7153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7133,
											"end": 7153,
											"name": "tag",
											"source": 23,
											"value": "158"
										},
										{
											"begin": 7133,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7128,
											"end": 7153,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 7128,
											"end": 7153,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7177,
											"end": 7178,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7174,
											"end": 7175,
											"name": "DUP3",
											"source": 23
										},
										{
											"begin": 7170,
											"end": 7179,
											"name": "SUB",
											"source": 23
										},
										{
											"begin": 7162,
											"end": 7179,
											"name": "SWAP1",
											"source": 23
										},
										{
											"begin": 7162,
											"end": 7179,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7201,
											"end": 7202,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7195,
											"end": 7199,
											"name": "DUP2",
											"source": 23
										},
										{
											"begin": 7192,
											"end": 7203,
											"name": "GT",
											"source": 23
										},
										{
											"begin": 7189,
											"end": 7226,
											"name": "ISZERO",
											"source": 23
										},
										{
											"begin": 7189,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "159"
										},
										{
											"begin": 7189,
											"end": 7226,
											"name": "JUMPI",
											"source": 23
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "160"
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "PUSH [tag]",
											"source": 23,
											"value": "82"
										},
										{
											"begin": 7206,
											"end": 7224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 23
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "tag",
											"source": 23,
											"value": "160"
										},
										{
											"begin": 7206,
											"end": 7224,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7189,
											"end": 7226,
											"name": "tag",
											"source": 23,
											"value": "159"
										},
										{
											"begin": 7189,
											"end": 7226,
											"name": "JUMPDEST",
											"source": 23
										},
										{
											"begin": 7039,
											"end": 7233,
											"name": "SWAP3",
											"source": 23
										},
										{
											"begin": 7039,
											"end": 7233,
											"name": "SWAP2",
											"source": 23
										},
										{
											"begin": 7039,
											"end": 7233,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7039,
											"end": 7233,
											"name": "POP",
											"source": 23
										},
										{
											"begin": 7039,
											"end": 7233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 23
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@trt-utils/TRTStrings.sol",
								"contracts/MiningContract.sol",
								"contracts/StakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"rewards(address)": "0700037d",
							"stake(address,uint256)": "adc9772e",
							"stakers(address)": "9168ae72",
							"stakersAddresses(uint256)": "3d42071c",
							"totalRewards()": "0e15561a",
							"totalStakes()": "bf9befb1",
							"unstake(address,uint256)": "c2a672e0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Rewarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakersAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingContract.sol\":\"StakingContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@trt-utils/TRTStrings.sol\":{\"keccak256\":\"0xd8e62453a12988c284c296f504e661e85bcf28473a59204fb60db867ab920a3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eab2fd6003fecd776b6869c151862157fbee8e2d59efa78415a76c6381700c\",\"dweb:/ipfs/QmXG3yxccug87PAZQtCAc5zyVQhy1YVqrjcktLDKgxN3Ez\"]},\"contracts/MiningContract.sol\":{\"keccak256\":\"0xeb5bebdacffe939ddf839a235b9afdd3efdc19ef307b0e2699625b6af78f8b4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cd3ebb88976fe406b742f561b5da06511411384909b6f7a748913a84a500abc\",\"dweb:/ipfs/QmPyvnpAYEtmXDXWgwwLfLYWT33sPnjSZc9LMeC9uSkdRQ\"]},\"contracts/StakingContract.sol\":{\"keccak256\":\"0x2ac5bdfbe1ceb6c518d73b59af64ed01cc33493500f09607148fb70b075d469a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d2b8a95213d36eede4d524a7115be15b5920757f32ba9f407068d73bb9446b0\",\"dweb:/ipfs/QmPQwwNTx6NhNVhTXPHQt6Ar6g1D3GeAsaW9zLJVVdG6T4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4078,
								"contract": "contracts/StakingContract.sol:StakingContract",
								"label": "totalStakes",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 4080,
								"contract": "contracts/StakingContract.sol:StakingContract",
								"label": "totalRewards",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 4084,
								"contract": "contracts/StakingContract.sol:StakingContract",
								"label": "stakers",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 4088,
								"contract": "contracts/StakingContract.sol:StakingContract",
								"label": "rewards",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 4091,
								"contract": "contracts/StakingContract.sol:StakingContract",
								"label": "stakersAddresses",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1182
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1183,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1182,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1182,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1182
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1164,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
					"exportedSymbols": {
						"IERC5267": [
							172
						]
					},
					"id": 173,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 172,
							"linearizedBaseContracts": [
								172
							],
							"name": "IERC5267",
							"nameLocation": "143:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "158:84:1",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 152,
									"name": "EIP712DomainChanged",
									"nameLocation": "253:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:1"
									},
									"src": "247:28:1"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "281:140:1",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "435:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "517:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "510:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 155,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "510:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "551:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "537:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 157,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "583:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "569:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "612:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "604:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "641:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "633:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "672:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 165,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "715:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "698:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 167,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "698:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 168,
													"nodeType": "ArrayTypeName",
													"src": "698:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:239:1"
									},
									"scope": 172,
									"src": "426:310:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 173,
							"src": "133:605:1",
							"usedErrors": [],
							"usedEvents": [
								152
							]
						}
					],
					"src": "107:632:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							309
						],
						"IERC20Errors": [
							214
						],
						"IERC721Errors": [
							262
						]
					},
					"id": 310,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 174,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 175,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 214,
							"linearizedBaseContracts": [
								214
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 184,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 189,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 194,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`âs `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 203,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 208,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 213,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 310,
							"src": "278:1764:2",
							"usedErrors": [
								184,
								189,
								194,
								203,
								208,
								213
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 262,
							"linearizedBaseContracts": [
								262
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 220,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 225,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 234,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 239,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 244,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`âs approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 251,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 256,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 261,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 310,
							"src": "2186:2092:2",
							"usedErrors": [
								220,
								225,
								234,
								239,
								244,
								251,
								256,
								261
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 263,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 309,
							"linearizedBaseContracts": [
								309
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 274,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 279,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 284,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`âs approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 291,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 296,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 301,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 308,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 310,
							"src": "4424:2107:2",
							"usedErrors": [
								274,
								279,
								284,
								291,
								296,
								301,
								308
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1182
						],
						"ERC20": [
							824
						],
						"IERC20": [
							902
						],
						"IERC20Errors": [
							214
						],
						"IERC20Metadata": [
							1116
						]
					},
					"id": 825,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 311,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 313,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 825,
							"sourceUnit": 903,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 312,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 902,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 315,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 825,
							"sourceUnit": 1117,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 314,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1116,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 317,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 825,
							"sourceUnit": 1183,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 316,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1182,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 825,
							"sourceUnit": 310,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 214,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 321,
										"name": "Context",
										"nameLocations": [
											"1428:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1182,
										"src": "1428:7:3"
									},
									"id": 322,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:3"
								},
								{
									"baseName": {
										"id": 323,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 902,
										"src": "1437:6:3"
									},
									"id": 324,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:3"
								},
								{
									"baseName": {
										"id": 325,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1116,
										"src": "1445:14:3"
									},
									"id": 326,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:3"
								},
								{
									"baseName": {
										"id": 327,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 214,
										"src": "1461:12:3"
									},
									"id": 328,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 320,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 824,
							"linearizedBaseContracts": [
								824,
								214,
								1116,
								902,
								1182
							],
							"name": "ERC20",
							"nameLocation": "1419:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 824,
									"src": "1480:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 331,
										"keyName": "account",
										"keyNameLocation": "1496:7:3",
										"keyType": {
											"id": 329,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 330,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 338,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 824,
									"src": "1540:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 337,
										"keyName": "account",
										"keyNameLocation": "1556:7:3",
										"keyType": {
											"id": 333,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 336,
											"keyName": "spender",
											"keyNameLocation": "1583:7:3",
											"keyType": {
												"id": 334,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 335,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 340,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 824,
									"src": "1630:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 339,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 342,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 824,
									"src": "1665:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 341,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 344,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 824,
									"src": "1691:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 343,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "1952:57:3",
										"statements": [
											{
												"expression": {
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 352,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "1962:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 353,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "1970:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:3"
											},
											{
												"expression": {
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 356,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "1985:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 357,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:3"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 361,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1908:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 346,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1929:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:3"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:3"
									},
									"scope": 824,
									"src": "1896:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1103
									],
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "2134:29:3",
										"statements": [
											{
												"expression": {
													"id": 367,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 342,
													"src": "2151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 366,
												"id": 368,
												"nodeType": "Return",
												"src": "2144:12:3"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:3"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2119:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:3"
									},
									"scope": 824,
									"src": "2074:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1109
									],
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "2338:31:3",
										"statements": [
											{
												"expression": {
													"id": 376,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 344,
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 375,
												"id": 377,
												"nodeType": "Return",
												"src": "2348:14:3"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:3"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2323:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:3"
									},
									"scope": 824,
									"src": "2276:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1115
									],
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "3058:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 384,
												"id": 386,
												"nodeType": "Return",
												"src": "3068:9:3"
											}
										]
									},
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:3"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "3051:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 382,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:3"
									},
									"scope": 824,
									"src": "3002:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										851
									],
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "3205:36:3",
										"statements": [
											{
												"expression": {
													"id": 394,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 340,
													"src": "3222:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 393,
												"id": 395,
												"nodeType": "Return",
												"src": "3215:19:3"
											}
										]
									},
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:3"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3196:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:3"
									},
									"scope": 824,
									"src": "3144:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										859
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "3373:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 405,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "3390:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 407,
													"indexExpression": {
														"id": 406,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 404,
												"id": 408,
												"nodeType": "Return",
												"src": "3383:25:3"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:3"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:3"
									},
									"scope": 824,
									"src": "3299:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										869
									],
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "3685:103:3",
										"statements": [
											{
												"assignments": [
													421
												],
												"declarations": [
													{
														"constant": false,
														"id": 421,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "3695:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 420,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 424,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 422,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "3711:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 426,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "3750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3754:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 425,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "3733:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 419,
												"id": 432,
												"nodeType": "Return",
												"src": "3770:11:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3628:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:3"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3679:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:3"
									},
									"scope": 824,
									"src": "3610:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										879
									],
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "3935:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 444,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "3952:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 446,
														"indexExpression": {
															"id": 445,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "3964:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 448,
													"indexExpression": {
														"id": 447,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "3971:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 443,
												"id": 449,
												"nodeType": "Return",
												"src": "3945:34:3"
											}
										]
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:3"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:3"
									},
									"scope": 824,
									"src": "3846:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										889
									],
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "4372:107:3",
										"statements": [
											{
												"assignments": [
													462
												],
												"declarations": [
													{
														"constant": false,
														"id": 462,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "4382:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 461,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 465,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 463,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "4398:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 467,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "4429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "4436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 466,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															715,
															775
														],
														"referencedDeclaration": 715,
														"src": "4420:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 460,
												"id": 473,
												"nodeType": "Return",
												"src": "4461:11:3"
											}
										]
									},
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "4310:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "4327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:3"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "4366:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:3"
									},
									"scope": 824,
									"src": "4293:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										901
									],
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "5132:151:3",
										"statements": [
											{
												"assignments": [
													488
												],
												"declarations": [
													{
														"constant": false,
														"id": 488,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 506,
														"src": "5142:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 487,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 491,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 489,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "5160:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 493,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5198:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 494,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "5204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 495,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "5213:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 492,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "5182:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 499,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5239:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 500,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "5245:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 501,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "5249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 498,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "5229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 486,
												"id": 505,
												"nodeType": "Return",
												"src": "5265:11:3"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "5061:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "5075:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "5087:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:3"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "5126:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 484,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:3"
									},
									"scope": 824,
									"src": "5039:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "5725:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 517,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "5739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 518,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 531,
												"nodeType": "IfStatement",
												"src": "5735:86:3",
												"trueBody": {
													"id": 530,
													"nodeType": "Block",
													"src": "5759:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 524,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 523,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "5780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 529,
															"nodeType": "RevertStatement",
															"src": "5773:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 532,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "5834:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 533,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 546,
												"nodeType": "IfStatement",
												"src": "5830:86:3",
												"trueBody": {
													"id": 545,
													"nodeType": "Block",
													"src": "5852:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 539,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 538,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 194,
																	"src": "5873:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 544,
															"nodeType": "RevertStatement",
															"src": "5866:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 548,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "5933:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "5939:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 550,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "5943:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 547,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "5925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:3"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "5675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "5689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "5701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:3"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:3"
									},
									"scope": 824,
									"src": "5656:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "6346:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 564,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "6360:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 565,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 601,
													"nodeType": "Block",
													"src": "6534:362:3",
													"statements": [
														{
															"assignments": [
																576
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 576,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 601,
																	"src": "6548:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 575,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 580,
															"initialValue": {
																"baseExpression": {
																	"id": 577,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "6570:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 579,
																"indexExpression": {
																	"id": 578,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "6580:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 581,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "6603:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 582,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "6617:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 591,
															"nodeType": "IfStatement",
															"src": "6599:115:3",
															"trueBody": {
																"id": 590,
																"nodeType": "Block",
																"src": "6624:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 585,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 557,
																					"src": "6674:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 586,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 576,
																					"src": "6680:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 587,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 561,
																					"src": "6693:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 584,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "6649:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 589,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:3"
																	}
																]
															}
														},
														{
															"id": 600,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 592,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 332,
																				"src": "6834:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 594,
																			"indexExpression": {
																				"id": 593,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 557,
																				"src": "6844:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 595,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 576,
																				"src": "6852:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 596,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 561,
																				"src": "6866:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 599,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:3"
																}
															]
														}
													]
												},
												"id": 602,
												"nodeType": "IfStatement",
												"src": "6356:540:3",
												"trueBody": {
													"id": 574,
													"nodeType": "Block",
													"src": "6380:148:3",
													"statements": [
														{
															"expression": {
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 570,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "6496:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 571,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "6512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 573,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 603,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "6910:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 604,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 622,
													"nodeType": "Block",
													"src": "7125:206:3",
													"statements": [
														{
															"id": 621,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 615,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 332,
																				"src": "7284:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 617,
																			"indexExpression": {
																				"id": 616,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 559,
																				"src": "7294:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 618,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 561,
																			"src": "7301:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 620,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:3"
																}
															]
														}
													]
												},
												"id": 623,
												"nodeType": "IfStatement",
												"src": "6906:425:3",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "6928:191:3",
													"statements": [
														{
															"id": 613,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 609,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 340,
																			"src": "7073:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 610,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 561,
																			"src": "7089:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 612,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 625,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "7355:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 626,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "7361:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "7365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 624,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "7346:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "EmitStatement",
												"src": "7341:30:3"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "6288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "6302:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "6314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:3"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:3"
									},
									"scope": 824,
									"src": "6271:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "7777:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 639,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "7791:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 640,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "7787:91:3",
												"trueBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "7814:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 648,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 646,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 645,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 194,
																	"src": "7835:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "RevertStatement",
															"src": "7828:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 655,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 659,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "7907:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 660,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "7916:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 654,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "7887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:3"
											}
										]
									},
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "7736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "7753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:3"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:3"
									},
									"scope": 824,
									"src": "7721:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "8303:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 672,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "8317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 673,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "8313:89:3",
												"trueBody": {
													"id": 685,
													"nodeType": "Block",
													"src": "8340:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 679,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 678,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "8361:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 684,
															"nodeType": "RevertStatement",
															"src": "8354:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 688,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "8419:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 689,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "8440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 687,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "8411:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:3"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "8262:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "8279:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:3"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:3"
									},
									"scope": 824,
									"src": "8247:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "9063:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 708,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "9082:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "9089:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "9098:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 707,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															715,
															775
														],
														"referencedDeclaration": 775,
														"src": "9073:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:3"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "9007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "9022:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "9039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:3"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:3"
									},
									"scope": 824,
									"src": "8989:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 774,
										"nodeType": "Block",
										"src": "10047:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 727,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "10061:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 728,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 741,
												"nodeType": "IfStatement",
												"src": "10057:89:3",
												"trueBody": {
													"id": 740,
													"nodeType": "Block",
													"src": "10082:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 734,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 733,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "10103:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 739,
															"nodeType": "RevertStatement",
															"src": "10096:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 742,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "10159:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 743,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 756,
												"nodeType": "IfStatement",
												"src": "10155:90:3",
												"trueBody": {
													"id": 755,
													"nodeType": "Block",
													"src": "10182:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 749,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 748,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "10203:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 754,
															"nodeType": "RevertStatement",
															"src": "10196:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 757,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "10254:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 760,
															"indexExpression": {
																"id": 758,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "10266:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 761,
														"indexExpression": {
															"id": 759,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "10273:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 762,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "10284:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:3"
											},
											{
												"condition": {
													"id": 765,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 724,
													"src": "10303:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 773,
												"nodeType": "IfStatement",
												"src": "10299:76:3",
												"trueBody": {
													"id": 772,
													"nodeType": "Block",
													"src": "10314:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 767,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 718,
																		"src": "10342:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 768,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 720,
																		"src": "10349:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 769,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "10358:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 766,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "10333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 771,
															"nodeType": "EmitStatement",
															"src": "10328:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "9967:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "9999:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "10014:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:3"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:3"
									},
									"scope": 824,
									"src": "9949:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "10752:388:3",
										"statements": [
											{
												"assignments": [
													786
												],
												"declarations": [
													{
														"constant": false,
														"id": 786,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 822,
														"src": "10762:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 785,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 791,
												"initialValue": {
													"arguments": [
														{
															"id": 788,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "10799:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 789,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "10806:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 787,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "10789:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "10828:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 794,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 793,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 821,
												"nodeType": "IfStatement",
												"src": "10824:310:3",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "10867:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 799,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "10885:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 800,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "10904:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 809,
															"nodeType": "IfStatement",
															"src": "10881:130:3",
															"trueBody": {
																"id": 808,
																"nodeType": "Block",
																"src": "10911:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 803,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "10963:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 804,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 786,
																					"src": "10972:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 805,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 782,
																					"src": "10990:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 802,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 203,
																				"src": "10936:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 807,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:3"
																	}
																]
															}
														},
														{
															"id": 819,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 811,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 778,
																				"src": "11061:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 812,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 780,
																				"src": "11068:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 813,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 786,
																					"src": "11077:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 814,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 782,
																					"src": "11096:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 810,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				715,
																				775
																			],
																			"referencedDeclaration": 775,
																			"src": "11052:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 818,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 776,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "10688:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "10703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "10720:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:3"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:3"
									},
									"scope": 824,
									"src": "10663:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 825,
							"src": "1401:9741:3",
							"usedErrors": [
								184,
								189,
								194,
								203,
								208,
								213
							],
							"usedEvents": [
								836,
								845
							]
						}
					],
					"src": "105:11038:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							902
						]
					},
					"id": 903,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 826,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 827,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 902,
							"linearizedBaseContracts": [
								902
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 836,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 845,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 902,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 859,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 902,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 869,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 866,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 902,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 879,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 902,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 889,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 886,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 902,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 901,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 898,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 902,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 903,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								836,
								845
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
					"exportedSymbols": {
						"ERC20": [
							824
						],
						"ERC20Pausable": [
							936
						],
						"Pausable": [
							1367
						]
					},
					"id": 937,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 904,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 906,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 937,
							"sourceUnit": 825,
							"src": "150:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 905,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 824,
										"src": "158:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "../../../utils/Pausable.sol",
							"id": 908,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 937,
							"sourceUnit": 1368,
							"src": "186:53:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 907,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1367,
										"src": "194:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 910,
										"name": "ERC20",
										"nameLocations": [
											"964:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 824,
										"src": "964:5:5"
									},
									"id": 911,
									"nodeType": "InheritanceSpecifier",
									"src": "964:5:5"
								},
								{
									"baseName": {
										"id": 912,
										"name": "Pausable",
										"nameLocations": [
											"971:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1367,
										"src": "971:8:5"
									},
									"id": 913,
									"nodeType": "InheritanceSpecifier",
									"src": "971:8:5"
								}
							],
							"canonicalName": "ERC20Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 909,
								"nodeType": "StructuredDocumentation",
								"src": "241:687:5",
								"text": " @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 936,
							"linearizedBaseContracts": [
								936,
								1367,
								824,
								214,
								1116,
								902,
								1182
							],
							"name": "ERC20Pausable",
							"nameLocation": "947:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										631
									],
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "1210:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "1234:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "1240:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "1244:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 926,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1220:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Pausable_$936_$",
																"typeString": "type(contract super ERC20Pausable)"
															}
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1226:7:5",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 631,
														"src": "1220:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1220:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "1220:30:5"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "986:121:5",
										"text": " @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 924,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 923,
												"name": "whenNotPaused",
												"nameLocations": [
													"1196:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1292,
												"src": "1196:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1196:13:5"
										}
									],
									"name": "_update",
									"nameLocation": "1121:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 922,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1187:8:5"
									},
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1137:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "1129:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1151:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "1143:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1163:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "1155:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:41:5"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1210:0:5"
									},
									"scope": 936,
									"src": "1112:145:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 937,
							"src": "929:330:5",
							"usedErrors": [
								184,
								189,
								194,
								203,
								208,
								213,
								1272,
								1275
							],
							"usedEvents": [
								836,
								845,
								1264,
								1269
							]
						}
					],
					"src": "124:1136:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
					"exportedSymbols": {
						"ECDSA": [
							2297
						],
						"EIP712": [
							2524
						],
						"ERC20": [
							824
						],
						"ERC20Permit": [
							1090
						],
						"IERC20Permit": [
							1152
						],
						"Nonces": [
							1250
						]
					},
					"id": 1091,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 938,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "122:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "./IERC20Permit.sol",
							"id": 940,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1091,
							"sourceUnit": 1153,
							"src": "148:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 939,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1152,
										"src": "156:12:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 942,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1091,
							"sourceUnit": 825,
							"src": "197:35:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 941,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 824,
										"src": "205:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "../../../utils/cryptography/ECDSA.sol",
							"id": 944,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1091,
							"sourceUnit": 2298,
							"src": "233:60:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 943,
										"name": "ECDSA",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2297,
										"src": "241:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
							"file": "../../../utils/cryptography/EIP712.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1091,
							"sourceUnit": 2525,
							"src": "294:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "EIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2524,
										"src": "302:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Nonces.sol",
							"file": "../../../utils/Nonces.sol",
							"id": 948,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1091,
							"sourceUnit": 1251,
							"src": "357:49:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 947,
										"name": "Nonces",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1250,
										"src": "365:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 950,
										"name": "ERC20",
										"nameLocations": [
											"929:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 824,
										"src": "929:5:6"
									},
									"id": 951,
									"nodeType": "InheritanceSpecifier",
									"src": "929:5:6"
								},
								{
									"baseName": {
										"id": 952,
										"name": "IERC20Permit",
										"nameLocations": [
											"936:12:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1152,
										"src": "936:12:6"
									},
									"id": 953,
									"nodeType": "InheritanceSpecifier",
									"src": "936:12:6"
								},
								{
									"baseName": {
										"id": 954,
										"name": "EIP712",
										"nameLocations": [
											"950:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2524,
										"src": "950:6:6"
									},
									"id": 955,
									"nodeType": "InheritanceSpecifier",
									"src": "950:6:6"
								},
								{
									"baseName": {
										"id": 956,
										"name": "Nonces",
										"nameLocations": [
											"958:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1250,
										"src": "958:6:6"
									},
									"id": 957,
									"nodeType": "InheritanceSpecifier",
									"src": "958:6:6"
								}
							],
							"canonicalName": "ERC20Permit",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 949,
								"nodeType": "StructuredDocumentation",
								"src": "408:487:6",
								"text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": true,
							"id": 1090,
							"linearizedBaseContracts": [
								1090,
								1250,
								2524,
								172,
								1152,
								824,
								214,
								1116,
								902,
								1182
							],
							"name": "ERC20Permit",
							"nameLocation": "914:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 962,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "996:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1090,
									"src": "971:146:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 958,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "971:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 960,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1032:84:6",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 959,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1022:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 961,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1022:95:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "1124:52:6",
										"text": " @dev Permit deadline has expired."
									},
									"errorSelector": "62791302",
									"id": 967,
									"name": "ERC2612ExpiredSignature",
									"nameLocation": "1187:23:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1219:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "1211:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:18:6"
									},
									"src": "1181:48:6"
								},
								{
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "1235:45:6",
										"text": " @dev Mismatched signature."
									},
									"errorSelector": "4b800e46",
									"id": 974,
									"name": "ERC2612InvalidSigner",
									"nameLocation": "1291:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1320:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "1312:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1336:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "1328:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:31:6"
									},
									"src": "1285:58:6"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "1624:2:6",
										"statements": []
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "1349:220:6",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
									},
									"id": 985,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 980,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 977,
													"src": "1613:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1619:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 982,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 979,
												"name": "EIP712",
												"nameLocations": [
													"1606:6:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2524,
												"src": "1606:6:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1606:17:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1600:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "1586:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 976,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1586:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:20:6"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1624:0:6"
									},
									"scope": 1090,
									"src": "1574:52:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1137
									],
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "1869:483:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1003,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1883:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1889:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1883:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1005,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "1901:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1883:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "IfStatement",
												"src": "1879:97:6",
												"trueBody": {
													"id": 1011,
													"nodeType": "Block",
													"src": "1911:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1008,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "1956:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1007,
																	"name": "ERC2612ExpiredSignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "1932:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1932:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1010,
															"nodeType": "RevertStatement",
															"src": "1925:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													1014
												],
												"declarations": [
													{
														"constant": false,
														"id": 1014,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "1994:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1061,
														"src": "1986:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1013,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1986:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1028,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1018,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "2028:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1019,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "2045:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1020,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 990,
																	"src": "2052:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1021,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "2061:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1023,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 988,
																			"src": "2078:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1022,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1224,
																		"src": "2068:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2068:16:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1025,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "2086:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1016,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2017:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2021:6:6",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2017:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2017:78:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1015,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2007:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2007:89:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1986:110:6"
											},
											{
												"assignments": [
													1030
												],
												"declarations": [
													{
														"constant": false,
														"id": 1030,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "2115:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1061,
														"src": "2107:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1029,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2107:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1034,
												"initialValue": {
													"arguments": [
														{
															"id": 1032,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "2139:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1031,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2457,
														"src": "2122:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2122:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2107:43:6"
											},
											{
												"assignments": [
													1036
												],
												"declarations": [
													{
														"constant": false,
														"id": 1036,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "2169:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1061,
														"src": "2161:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1035,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2161:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1044,
												"initialValue": {
													"arguments": [
														{
															"id": 1039,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "2192:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1040,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "2198:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1041,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "2201:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1042,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "2204:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1037,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2297,
															"src": "2178:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$2297_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2184:7:6",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2247,
														"src": "2178:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2178:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2161:45:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1045,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "2220:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1046,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2230:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2220:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1054,
												"nodeType": "IfStatement",
												"src": "2216:88:6",
												"trueBody": {
													"id": 1053,
													"nodeType": "Block",
													"src": "2237:67:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1049,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "2279:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1050,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 988,
																		"src": "2287:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1048,
																	"name": "ERC2612InvalidSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "2258:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2258:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1052,
															"nodeType": "RevertStatement",
															"src": "2251:42:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1056,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "2323:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1057,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "2330:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1058,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "2339:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1055,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															715,
															775
														],
														"referencedDeclaration": 715,
														"src": "2314:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2314:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "2314:31:6"
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "1632:43:6",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "d505accf",
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1689:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1713:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1705:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1736:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1728:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1761:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1753:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1753:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1784:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1776:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1776:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1808:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1802:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 995,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1802:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1827:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1819:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 997,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1819:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1846:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1838:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 999,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:158:6"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1869:0:6"
									},
									"scope": 1090,
									"src": "1680:672:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1145,
										1209
									],
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "2506:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1075,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "2536:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1073,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2523:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Permit_$1090_$",
																"typeString": "type(contract super ERC20Permit)"
															}
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2529:6:6",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1209,
														"src": "2523:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2523:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1072,
												"id": 1077,
												"nodeType": "Return",
												"src": "2516:26:6"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "2358:43:6",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "7ecebe00",
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "2415:6:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1069,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1067,
												"name": "IERC20Permit",
												"nameLocations": [
													"2466:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1152,
												"src": "2466:12:6"
											},
											{
												"id": 1068,
												"name": "Nonces",
												"nameLocations": [
													"2480:6:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1250,
												"src": "2480:6:6"
											}
										],
										"src": "2457:30:6"
									},
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2430:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "2422:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2422:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:15:6"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "2497:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2497:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2496:9:6"
									},
									"scope": 1090,
									"src": "2406:143:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1151
									],
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "2724:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1085,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2420,
														"src": "2741:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2741:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1084,
												"id": 1087,
												"nodeType": "Return",
												"src": "2734:27:6"
											}
										]
									},
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "2555:43:6",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "3644e515",
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2665:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2681:2:6"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "2715:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1082,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2714:9:6"
									},
									"scope": 1090,
									"src": "2656:112:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 1091,
							"src": "896:1874:6",
							"usedErrors": [
								184,
								189,
								194,
								203,
								208,
								213,
								967,
								974,
								1192,
								1381,
								1383,
								1960,
								1965,
								1970
							],
							"usedEvents": [
								152,
								836,
								845
							]
						}
					],
					"src": "122:2649:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							902
						],
						"IERC20Metadata": [
							1116
						]
					},
					"id": 1117,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1092,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1094,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1117,
							"sourceUnit": 903,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1093,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 902,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1096,
										"name": "IERC20",
										"nameLocations": [
											"305:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 902,
										"src": "305:6:7"
									},
									"id": 1097,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1095,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:7",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1116,
							"linearizedBaseContracts": [
								1116,
								902
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:7"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "416:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1100,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:7"
									},
									"scope": 1116,
									"src": "377:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:7"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "539:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1106,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:7"
									},
									"scope": 1116,
									"src": "498:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:7"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "673:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1112,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:7"
									},
									"scope": 1116,
									"src": "630:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1117,
							"src": "277:405:7",
							"usedErrors": [],
							"usedEvents": [
								836,
								845
							]
						}
					],
					"src": "125:558:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							1152
						]
					},
					"id": 1153,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1118,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1119,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:8",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 1152,
							"linearizedBaseContracts": [
								1152
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:8",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 1137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "3022:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "3045:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "3070:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "3093:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "3119:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1129,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "3136:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "3155:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:8"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:8"
									},
									"scope": 1152,
									"src": "2997:183:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:8",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "3501:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:8"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "3539:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:8"
									},
									"scope": 1152,
									"src": "3485:63:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1146,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:8",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:8"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "3791:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1148,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:8"
									},
									"scope": 1152,
									"src": "3740:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1153,
							"src": "2113:1689:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1182
						]
					},
					"id": 1183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1154,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1155,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1182,
							"linearizedBaseContracts": [
								1182
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1160,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1159,
												"id": 1162,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1182,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1169,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1168,
												"id": 1171,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1166,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1182,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1180,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1177,
												"id": 1179,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1182,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1183,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Nonces.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Nonces.sol",
					"exportedSymbols": {
						"Nonces": [
							1250
						]
					},
					"id": 1251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Nonces",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1185,
								"nodeType": "StructuredDocumentation",
								"src": "125:83:10",
								"text": " @dev Provides tracking nonces for addresses. Nonces will only increment."
							},
							"fullyImplemented": true,
							"id": 1250,
							"linearizedBaseContracts": [
								1250
							],
							"name": "Nonces",
							"nameLocation": "227:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "240:90:10",
										"text": " @dev The nonce used for an `account` is not the expected current nonce."
									},
									"errorSelector": "752d88c0",
									"id": 1192,
									"name": "InvalidAccountNonce",
									"nameLocation": "341:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "369:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "361:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "currentNonce",
												"nameLocation": "386:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "378:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:39:10"
									},
									"src": "335:65:10"
								},
								{
									"constant": false,
									"id": 1196,
									"mutability": "mutable",
									"name": "_nonces",
									"nameLocation": "450:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1250,
									"src": "406:51:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1195,
										"keyName": "account",
										"keyNameLocation": "422:7:10",
										"keyType": {
											"id": 1193,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "414:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "406:35:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1194,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "433:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1208,
										"nodeType": "Block",
										"src": "607:38:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1204,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "624:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1206,
													"indexExpression": {
														"id": 1205,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "632:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "624:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1203,
												"id": 1207,
												"nodeType": "Return",
												"src": "617:21:10"
											}
										]
									},
									"documentation": {
										"id": 1197,
										"nodeType": "StructuredDocumentation",
										"src": "464:69:10",
										"text": " @dev Returns the next unused nonce for an address."
									},
									"functionSelector": "7ecebe00",
									"id": 1209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "547:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "562:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "554:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:15:10"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "598:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:9:10"
									},
									"scope": 1250,
									"src": "538:107:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "828:326:10",
										"statements": [
											{
												"id": 1222,
												"nodeType": "UncheckedBlock",
												"src": "1031:117:10",
												"statements": [
													{
														"expression": {
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1121:16:10",
															"subExpression": {
																"baseExpression": {
																	"id": 1217,
																	"name": "_nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "1121:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1219,
																"indexExpression": {
																	"id": 1218,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "1129:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "1121:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1216,
														"id": 1221,
														"nodeType": "Return",
														"src": "1114:23:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "651:103:10",
										"text": " @dev Consumes a nonce.\n Returns the current value and increments nonce."
									},
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nameLocation": "768:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "786:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "778:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:15:10"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "819:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:9:10"
									},
									"scope": 1250,
									"src": "759:395:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "1338:149:10",
										"statements": [
											{
												"assignments": [
													1233
												],
												"declarations": [
													{
														"constant": false,
														"id": 1233,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "1356:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "1348:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1232,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1348:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1237,
												"initialValue": {
													"arguments": [
														{
															"id": 1235,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "1376:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1234,
														"name": "_useNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "1366:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1366:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1348:34:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1238,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "1396:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1239,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "1405:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1396:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1247,
												"nodeType": "IfStatement",
												"src": "1392:89:10",
												"trueBody": {
													"id": 1246,
													"nodeType": "Block",
													"src": "1414:67:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1242,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1227,
																		"src": "1455:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1243,
																		"name": "current",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1233,
																		"src": "1462:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1241,
																	"name": "InvalidAccountNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "1435:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1435:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1245,
															"nodeType": "RevertStatement",
															"src": "1428:42:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "1160:100:10",
										"text": " @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useCheckedNonce",
									"nameLocation": "1274:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1299:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "1291:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1314:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "1306:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1290:30:10"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:0:10"
									},
									"scope": 1250,
									"src": "1265:222:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1251,
							"src": "209:1280:10",
							"usedErrors": [
								1192
							],
							"usedEvents": []
						}
					],
					"src": "99:1391:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1182
						],
						"Pausable": [
							1367
						]
					},
					"id": 1368,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1254,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1368,
							"sourceUnit": 1183,
							"src": "128:45:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1253,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1182,
										"src": "136:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1256,
										"name": "Context",
										"nameLocations": [
											"645:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1182,
										"src": "645:7:11"
									},
									"id": 1257,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:11"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1255,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:11",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1367,
							"linearizedBaseContracts": [
								1367,
								1182
							],
							"name": "Pausable",
							"nameLocation": "633:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1259,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:11",
									"nodeType": "VariableDeclaration",
									"scope": 1367,
									"src": "659:20:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1258,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:11",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1264,
									"name": "Paused",
									"nameLocation": "770:6:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "777:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:11"
									},
									"src": "764:30:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:11",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1269,
									"name": "Unpaused",
									"nameLocation": "881:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "890:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:11"
									},
									"src": "875:32:11"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:11",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1272,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:11"
									},
									"src": "994:22:11"
								},
								{
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:11",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1275,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:11"
									},
									"src": "1107:22:11"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "1221:32:11",
										"statements": [
											{
												"expression": {
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1279,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "1231:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:11"
											}
										]
									},
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:11",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1284,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:11"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:11"
									},
									"scope": 1367,
									"src": "1207:46:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "1464:47:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1287,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "1474:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:11"
											},
											{
												"id": 1290,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:11"
											}
										]
									},
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:11",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1292,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:11"
									},
									"src": "1439:72:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "1711:44:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1295,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "1721:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:11"
											},
											{
												"id": 1298,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:11"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:11",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1300,
									"name": "whenPaused",
									"nameLocation": "1698:10:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:11"
									},
									"src": "1689:66:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "1903:31:11",
										"statements": [
											{
												"expression": {
													"id": 1306,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1259,
													"src": "1920:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1305,
												"id": 1307,
												"nodeType": "Return",
												"src": "1913:14:11"
											}
										]
									},
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:11",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:11"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1897:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1303,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:11"
									},
									"scope": 1367,
									"src": "1850:84:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "2053:77:11",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1313,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "2067:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1319,
												"nodeType": "IfStatement",
												"src": "2063:61:11",
												"trueBody": {
													"id": 1318,
													"nodeType": "Block",
													"src": "2077:47:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1315,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "2098:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1317,
															"nodeType": "RevertStatement",
															"src": "2091:22:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:11",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:11"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:11"
									},
									"scope": 1367,
									"src": "2002:128:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "2250:78:11",
										"statements": [
											{
												"condition": {
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:11",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1325,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "2265:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1332,
												"nodeType": "IfStatement",
												"src": "2260:62:11",
												"trueBody": {
													"id": 1331,
													"nodeType": "Block",
													"src": "2275:47:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1328,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "2296:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1330,
															"nodeType": "RevertStatement",
															"src": "2289:22:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:11",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:11"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:11"
									},
									"scope": 1367,
									"src": "2202:126:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "2512:66:11",
										"statements": [
											{
												"expression": {
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1340,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "2522:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1345,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "2558:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1344,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "2551:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1348,
												"nodeType": "EmitStatement",
												"src": "2546:25:11"
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:11",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1338,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1337,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1292,
												"src": "2498:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:11"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:11"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:11"
									},
									"scope": 1367,
									"src": "2463:115:11",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1365,
										"nodeType": "Block",
										"src": "2758:69:11",
										"statements": [
											{
												"expression": {
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1356,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "2768:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1359,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1361,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "2807:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1360,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "2798:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1364,
												"nodeType": "EmitStatement",
												"src": "2793:27:11"
											}
										]
									},
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:11",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1366,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1354,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1353,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1300,
												"src": "2747:10:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:11"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:11"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:11"
									},
									"scope": 1367,
									"src": "2710:117:11",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1368,
							"src": "615:2214:11",
							"usedErrors": [
								1272,
								1275
							],
							"usedEvents": [
								1264,
								1269
							]
						}
					],
					"src": "102:2728:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
					"exportedSymbols": {
						"ShortString": [
							1373
						],
						"ShortStrings": [
							1584
						],
						"StorageSlot": [
							1694
						]
					},
					"id": 1585,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1369,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1371,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1585,
							"sourceUnit": 1695,
							"src": "132:46:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1370,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1694,
										"src": "140:11:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "ShortString",
							"id": 1373,
							"name": "ShortString",
							"nameLocation": "353:11:12",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "348:28:12",
							"underlyingType": {
								"id": 1372,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "368:7:12",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1374,
								"nodeType": "StructuredDocumentation",
								"src": "378:876:12",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1584,
							"linearizedBaseContracts": [
								1584
							],
							"name": "ShortStrings",
							"nameLocation": "1263:12:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1377,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "1370:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "1345:111:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1375,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1345:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 1376,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1390:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 1381,
									"name": "StringTooLong",
									"nameLocation": "1469:13:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1490:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "1483:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1378,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1483:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:12:12"
									},
									"src": "1463:32:12"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 1383,
									"name": "InvalidShortString",
									"nameLocation": "1506:18:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:12"
									},
									"src": "1500:27:12"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "1786:208:12",
										"statements": [
											{
												"assignments": [
													1393
												],
												"declarations": [
													{
														"constant": false,
														"id": 1393,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "1809:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 1426,
														"src": "1796:17:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1392,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1796:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1398,
												"initialValue": {
													"arguments": [
														{
															"id": 1396,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "1822:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1816:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1394,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1816:5:12",
															"typeDescriptions": {}
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:10:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1796:30:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1399,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "1840:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1845:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1840:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1854:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "1840:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1408,
												"nodeType": "IfStatement",
												"src": "1836:72:12",
												"trueBody": {
													"id": 1407,
													"nodeType": "Block",
													"src": "1858:50:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1404,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1386,
																		"src": "1893:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1403,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "1879:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1879:18:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1406,
															"nodeType": "RevertStatement",
															"src": "1872:25:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1417,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1393,
																						"src": "1965:4:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 1416,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1957:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 1415,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "1957:7:12",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1957:13:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1949:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1413,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1949:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1949:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 1420,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1393,
																			"src": "1974:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1979:6:12",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "1974:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1949:36:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1941:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1411,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1941:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1941:45:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1409,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "1924:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1373_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1936:4:12",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "1924:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1373_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1924:63:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 1391,
												"id": 1425,
												"nodeType": "Return",
												"src": "1917:70:12"
											}
										]
									},
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "1533:170:12",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "1717:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1745:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "1731:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1385,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1731:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:19:12"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "1773:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1389,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1388,
														"name": "ShortString",
														"nameLocations": [
															"1773:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1373,
														"src": "1773:11:12"
													},
													"referencedDeclaration": 1373,
													"src": "1773:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:13:12"
									},
									"scope": 1584,
									"src": "1708:286:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1452,
										"nodeType": "Block",
										"src": "2152:331:12",
										"statements": [
											{
												"assignments": [
													1437
												],
												"declarations": [
													{
														"constant": false,
														"id": 1437,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "2170:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 1452,
														"src": "2162:11:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1436,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2162:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1441,
												"initialValue": {
													"arguments": [
														{
															"id": 1439,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "2187:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
																"typeString": "ShortString"
															}
														],
														"id": 1438,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "2176:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1373_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:16:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2162:30:12"
											},
											{
												"assignments": [
													1443
												],
												"declarations": [
													{
														"constant": false,
														"id": 1443,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "2294:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 1452,
														"src": "2280:17:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1442,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2280:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1448,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2311:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2300:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 1444,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2304:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2280:34:12"
											},
											{
												"AST": {
													"nativeSrc": "2376:81:12",
													"nodeType": "YulBlock",
													"src": "2376:81:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "2397:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2397:3:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "2402:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2402:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2390:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:12"
																},
																"nativeSrc": "2390:16:12",
																"nodeType": "YulFunctionCall",
																"src": "2390:16:12"
															},
															"nativeSrc": "2390:16:12",
															"nodeType": "YulExpressionStatement",
															"src": "2390:16:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "2430:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2430:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2435:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2435:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2426:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2426:3:12"
																		},
																		"nativeSrc": "2426:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2426:14:12"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "2442:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2442:4:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2419:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:12"
																},
																"nativeSrc": "2419:28:12",
																"nodeType": "YulFunctionCall",
																"src": "2419:28:12"
															},
															"nativeSrc": "2419:28:12",
															"nodeType": "YulExpressionStatement",
															"src": "2419:28:12"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1437,
														"isOffset": false,
														"isSlot": false,
														"src": "2402:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1431,
														"isOffset": false,
														"isSlot": false,
														"src": "2442:4:12",
														"valueSize": 1
													},
													{
														"declaration": 1443,
														"isOffset": false,
														"isSlot": false,
														"src": "2397:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1443,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:3:12",
														"valueSize": 1
													}
												],
												"id": 1449,
												"nodeType": "InlineAssembly",
												"src": "2367:90:12"
											},
											{
												"expression": {
													"id": 1450,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1443,
													"src": "2473:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1435,
												"id": 1451,
												"nodeType": "Return",
												"src": "2466:10:12"
											}
										]
									},
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "2000:73:12",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 1453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "2087:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2108:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "2096:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1430,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1429,
														"name": "ShortString",
														"nameLocations": [
															"2096:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1373,
														"src": "2096:11:12"
													},
													"referencedDeclaration": 1373,
													"src": "2096:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:18:12"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "2137:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1433,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2137:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:15:12"
									},
									"scope": 1584,
									"src": "2078:405:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "2625:175:12",
										"statements": [
											{
												"assignments": [
													1463
												],
												"declarations": [
													{
														"constant": false,
														"id": 1463,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2643:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "2635:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1462,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2635:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1473,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1468,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "2679:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 1466,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1373,
																		"src": "2660:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1373_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 1467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2672:6:12",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "2660:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1373_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2660:24:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2652:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1464,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2652:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2652:33:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2688:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "2652:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2635:57:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1474,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1463,
														"src": "2706:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 1475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2715:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "2706:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1481,
												"nodeType": "IfStatement",
												"src": "2702:69:12",
												"trueBody": {
													"id": 1480,
													"nodeType": "Block",
													"src": "2719:52:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1477,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "2740:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2740:20:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1479,
															"nodeType": "RevertStatement",
															"src": "2733:27:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1482,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1463,
													"src": "2787:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1461,
												"id": 1483,
												"nodeType": "Return",
												"src": "2780:13:12"
											}
										]
									},
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "2489:61:12",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "2564:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2587:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "2575:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1456,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1455,
														"name": "ShortString",
														"nameLocations": [
															"2575:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1373,
														"src": "2575:11:12"
													},
													"referencedDeclaration": 1373,
													"src": "2575:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:18:12"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "2616:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2615:9:12"
									},
									"scope": 1584,
									"src": "2555:245:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1524,
										"nodeType": "Block",
										"src": "3023:231:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1498,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1488,
																	"src": "3043:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3037:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1496,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3037:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3037:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3050:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3037:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3059:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3037:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1522,
													"nodeType": "Block",
													"src": "3121:127:12",
													"statements": [
														{
															"expression": {
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1511,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1490,
																				"src": "3161:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 1508,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1694,
																				"src": "3135:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1694_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 1510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3147:13:12",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1671,
																			"src": "3135:25:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1602_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3135:32:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$1602_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3168:5:12",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1601,
																	"src": "3135:38:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1514,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1488,
																	"src": "3176:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "3135:46:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 1516,
															"nodeType": "ExpressionStatement",
															"src": "3135:46:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1519,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1377,
																		"src": "3219:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 1517,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1373,
																		"src": "3202:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1373_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3214:4:12",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "3202:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1373_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3202:35:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 1495,
															"id": 1521,
															"nodeType": "Return",
															"src": "3195:42:12"
														}
													]
												},
												"id": 1523,
												"nodeType": "IfStatement",
												"src": "3033:215:12",
												"trueBody": {
													"id": 1507,
													"nodeType": "Block",
													"src": "3063:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1504,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1488,
																		"src": "3098:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1503,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "3084:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1373_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3084:20:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 1495,
															"id": 1506,
															"nodeType": "Return",
															"src": "3077:27:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "2806:103:12",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 1525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "2923:25:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2963:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "2949:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1487,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2949:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "2985:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "2970:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1489,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2970:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:43:12"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "3010:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1493,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1492,
														"name": "ShortString",
														"nameLocations": [
															"3010:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1373,
														"src": "3010:11:12"
													},
													"referencedDeclaration": 1373,
													"src": "3010:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3009:13:12"
									},
									"scope": 1584,
									"src": "2914:340:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1551,
										"nodeType": "Block",
										"src": "3494:158:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1538,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1529,
																"src": "3527:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1536,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "3508:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1373_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3520:6:12",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "3508:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1373_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3508:25:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1540,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "3537:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3508:46:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1549,
													"nodeType": "Block",
													"src": "3609:37:12",
													"statements": [
														{
															"expression": {
																"id": 1547,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1531,
																"src": "3630:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 1535,
															"id": 1548,
															"nodeType": "Return",
															"src": "3623:12:12"
														}
													]
												},
												"id": 1550,
												"nodeType": "IfStatement",
												"src": "3504:142:12",
												"trueBody": {
													"id": 1546,
													"nodeType": "Block",
													"src": "3556:47:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1543,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1529,
																		"src": "3586:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1542,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1453,
																	"src": "3577:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1373_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3577:15:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1535,
															"id": 1545,
															"nodeType": "Return",
															"src": "3570:22:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1526,
										"nodeType": "StructuredDocumentation",
										"src": "3260:120:12",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 1552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "3394:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3427:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "3415:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1528,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1527,
														"name": "ShortString",
														"nameLocations": [
															"3415:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1373,
														"src": "3415:11:12"
													},
													"referencedDeclaration": 1373,
													"src": "3415:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3449:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "3434:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1530,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3434:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3414:41:12"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "3479:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3479:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:15:12"
									},
									"scope": 1584,
									"src": "3385:267:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "4132:174:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1565,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1556,
																"src": "4165:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1563,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "4146:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1373_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4158:6:12",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "4146:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1373_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4146:25:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1567,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "4175:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4146:46:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1580,
													"nodeType": "Block",
													"src": "4249:51:12",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1576,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "4276:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1574,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:12:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4283:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4270:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1562,
															"id": 1579,
															"nodeType": "Return",
															"src": "4263:26:12"
														}
													]
												},
												"id": 1581,
												"nodeType": "IfStatement",
												"src": "4142:158:12",
												"trueBody": {
													"id": 1573,
													"nodeType": "Block",
													"src": "4194:49:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1570,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1556,
																		"src": "4226:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1569,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1485,
																	"src": "4215:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1373_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4215:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1562,
															"id": 1572,
															"nodeType": "Return",
															"src": "4208:24:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1553,
										"nodeType": "StructuredDocumentation",
										"src": "3658:364:12",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "4036:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4071:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "4059:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1555,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1554,
														"name": "ShortString",
														"nameLocations": [
															"4059:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1373,
														"src": "4059:11:12"
													},
													"referencedDeclaration": 1373,
													"src": "4059:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4093:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "4078:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1557,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4078:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4058:41:12"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "4123:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4122:9:12"
									},
									"scope": 1584,
									"src": "4027:279:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1585,
							"src": "1255:3053:12",
							"usedErrors": [
								1381,
								1383
							],
							"usedEvents": []
						}
					],
					"src": "106:4203:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1694
						]
					},
					"id": 1695,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1586,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1587,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:13",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1694,
							"linearizedBaseContracts": [
								1694
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1590,
									"members": [
										{
											"constant": false,
											"id": 1589,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1590,
											"src": "1300:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1588,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:13",
									"nodeType": "StructDefinition",
									"scope": 1694,
									"src": "1271:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1593,
									"members": [
										{
											"constant": false,
											"id": 1592,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1593,
											"src": "1355:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1591,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:13",
									"nodeType": "StructDefinition",
									"scope": 1694,
									"src": "1326:46:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1596,
									"members": [
										{
											"constant": false,
											"id": 1595,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1596,
											"src": "1407:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1594,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:13",
									"nodeType": "StructDefinition",
									"scope": 1694,
									"src": "1378:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1599,
									"members": [
										{
											"constant": false,
											"id": 1598,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1599,
											"src": "1462:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1597,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:13",
									"nodeType": "StructDefinition",
									"scope": 1694,
									"src": "1433:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1602,
									"members": [
										{
											"constant": false,
											"id": 1601,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1602,
											"src": "1516:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1600,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:13",
									"nodeType": "StructDefinition",
									"scope": 1694,
									"src": "1488:47:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1605,
									"members": [
										{
											"constant": false,
											"id": 1604,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1605,
											"src": "1568:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1603,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:13",
									"nodeType": "StructDefinition",
									"scope": 1694,
									"src": "1541:45:13",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "1768:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:13",
													"nodeType": "YulBlock",
													"src": "1830:38:13",
													"statements": [
														{
															"nativeSrc": "1844:14:13",
															"nodeType": "YulAssignment",
															"src": "1844:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:13",
																"nodeType": "YulIdentifier",
																"src": "1854:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1612,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1608,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:13",
														"valueSize": 1
													}
												],
												"id": 1614,
												"nodeType": "InlineAssembly",
												"src": "1821:47:13"
											}
										]
									},
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:13",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "1708:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1607,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:13"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "1745:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1590_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1611,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1610,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1590,
														"src": "1745:11:13"
													},
													"referencedDeclaration": 1590,
													"src": "1745:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1590_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:13"
									},
									"scope": 1694,
									"src": "1684:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "2056:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:13",
													"nodeType": "YulBlock",
													"src": "2118:38:13",
													"statements": [
														{
															"nativeSrc": "2132:14:13",
															"nodeType": "YulAssignment",
															"src": "2132:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:13",
																"nodeType": "YulIdentifier",
																"src": "2142:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1623,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1619,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:13",
														"valueSize": 1
													}
												],
												"id": 1625,
												"nodeType": "InlineAssembly",
												"src": "2109:47:13"
											}
										]
									},
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:13",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1996:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1618,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:13"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "2033:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1593_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1622,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1621,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1593,
														"src": "2033:11:13"
													},
													"referencedDeclaration": 1593,
													"src": "2033:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1593_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:13"
									},
									"scope": 1694,
									"src": "1972:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "2344:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:13",
													"nodeType": "YulBlock",
													"src": "2406:38:13",
													"statements": [
														{
															"nativeSrc": "2420:14:13",
															"nodeType": "YulAssignment",
															"src": "2420:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:13",
																"nodeType": "YulIdentifier",
																"src": "2430:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1634,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1630,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:13",
														"valueSize": 1
													}
												],
												"id": 1636,
												"nodeType": "InlineAssembly",
												"src": "2397:47:13"
											}
										]
									},
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:13",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "2284:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1629,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:13"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "2321:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1596_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1633,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1632,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1596,
														"src": "2321:11:13"
													},
													"referencedDeclaration": 1596,
													"src": "2321:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1596_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:13"
									},
									"scope": 1694,
									"src": "2260:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1648,
										"nodeType": "Block",
										"src": "2632:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:13",
													"nodeType": "YulBlock",
													"src": "2694:38:13",
													"statements": [
														{
															"nativeSrc": "2708:14:13",
															"nodeType": "YulAssignment",
															"src": "2708:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:13",
																"nodeType": "YulIdentifier",
																"src": "2718:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1645,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1641,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:13",
														"valueSize": 1
													}
												],
												"id": 1647,
												"nodeType": "InlineAssembly",
												"src": "2685:47:13"
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:13",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "2572:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1640,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:13"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "2609:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1599_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1644,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1643,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1599,
														"src": "2609:11:13"
													},
													"referencedDeclaration": 1599,
													"src": "2609:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1599_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:13"
									},
									"scope": 1694,
									"src": "2548:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "2917:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:13",
													"nodeType": "YulBlock",
													"src": "2979:38:13",
													"statements": [
														{
															"nativeSrc": "2993:14:13",
															"nodeType": "YulAssignment",
															"src": "2993:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:13",
																"nodeType": "YulIdentifier",
																"src": "3003:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1656,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1652,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:13",
														"valueSize": 1
													}
												],
												"id": 1658,
												"nodeType": "InlineAssembly",
												"src": "2970:47:13"
											}
										]
									},
									"documentation": {
										"id": 1650,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:13",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "2858:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1651,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:13"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "2895:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1602_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1655,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1654,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1602,
														"src": "2895:10:13"
													},
													"referencedDeclaration": 1602,
													"src": "2895:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1602_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:13"
									},
									"scope": 1694,
									"src": "2835:188:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1670,
										"nodeType": "Block",
										"src": "3225:112:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:13",
													"nodeType": "YulBlock",
													"src": "3287:44:13",
													"statements": [
														{
															"nativeSrc": "3301:20:13",
															"nodeType": "YulAssignment",
															"src": "3301:20:13",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:13",
																"nodeType": "YulIdentifier",
																"src": "3311:10:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1667,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1663,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:13",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1669,
												"nodeType": "InlineAssembly",
												"src": "3278:53:13"
											}
										]
									},
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:13",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "3158:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1662,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:13"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "3203:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1602_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1665,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1602,
														"src": "3203:10:13"
													},
													"referencedDeclaration": 1602,
													"src": "3203:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1602_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:13"
									},
									"scope": 1694,
									"src": "3135:202:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1681,
										"nodeType": "Block",
										"src": "3513:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:13",
													"nodeType": "YulBlock",
													"src": "3575:38:13",
													"statements": [
														{
															"nativeSrc": "3589:14:13",
															"nodeType": "YulAssignment",
															"src": "3589:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:13",
																"nodeType": "YulIdentifier",
																"src": "3599:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1678,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1674,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:13",
														"valueSize": 1
													}
												],
												"id": 1680,
												"nodeType": "InlineAssembly",
												"src": "3566:47:13"
											}
										]
									},
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:13",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "3455:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1673,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:13"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "3492:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1605_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1677,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1676,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1605,
														"src": "3492:9:13"
													},
													"referencedDeclaration": 1605,
													"src": "3492:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1605_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:13"
									},
									"scope": 1694,
									"src": "3433:186:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1692,
										"nodeType": "Block",
										"src": "3816:112:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:13",
													"nodeType": "YulBlock",
													"src": "3878:44:13",
													"statements": [
														{
															"nativeSrc": "3892:20:13",
															"nodeType": "YulAssignment",
															"src": "3892:20:13",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:13",
																"nodeType": "YulIdentifier",
																"src": "3902:10:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1689,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1685,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:13",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1691,
												"nodeType": "InlineAssembly",
												"src": "3869:53:13"
											}
										]
									},
									"documentation": {
										"id": 1683,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:13",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "3751:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1684,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:13"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "3795:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1605_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1688,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1687,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1605,
														"src": "3795:9:13"
													},
													"referencedDeclaration": 1605,
													"src": "3795:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1605_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:13"
									},
									"scope": 1694,
									"src": "3729:199:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1695,
							"src": "1245:2685:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3652
						],
						"SignedMath": [
							3757
						],
						"Strings": [
							1949
						]
					},
					"id": 1950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1696,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1698,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1950,
							"sourceUnit": 3653,
							"src": "127:37:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1697,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3652,
										"src": "135:4:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1700,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1950,
							"sourceUnit": 3758,
							"src": "165:49:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1699,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3757,
										"src": "173:10:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1701,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:14",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1949,
							"linearizedBaseContracts": [
								1949
							],
							"name": "Strings",
							"nameLocation": "259:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1704,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:14",
									"nodeType": "VariableDeclaration",
									"scope": 1949,
									"src": "273:56:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1702,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1703,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:14",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1707,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 1949,
									"src": "335:42:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1705,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1706,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1708,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:14",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1714,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "505:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "520:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:14"
									},
									"src": "470:66:14"
								},
								{
									"body": {
										"id": 1761,
										"nodeType": "Block",
										"src": "708:627:14",
										"statements": [
											{
												"id": 1760,
												"nodeType": "UncheckedBlock",
												"src": "718:611:14",
												"statements": [
													{
														"assignments": [
															1723
														],
														"declarations": [
															{
																"constant": false,
																"id": 1723,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 1760,
																"src": "742:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1722,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1730,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1726,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1717,
																		"src": "770:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1724,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3652,
																		"src": "759:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3652_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:14",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3472,
																	"src": "759:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:14"
													},
													{
														"assignments": [
															1732
														],
														"declarations": [
															{
																"constant": false,
																"id": 1732,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 1760,
																"src": "794:20:14",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1731,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1737,
														"initialValue": {
															"arguments": [
																{
																	"id": 1735,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1723,
																	"src": "828:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1733,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:14"
													},
													{
														"assignments": [
															1739
														],
														"declarations": [
															{
																"constant": false,
																"id": 1739,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:14",
																"nodeType": "VariableDeclaration",
																"scope": 1760,
																"src": "849:11:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1738,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1740,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:14"
													},
													{
														"AST": {
															"nativeSrc": "930:67:14",
															"nodeType": "YulBlock",
															"src": "930:67:14",
															"statements": [
																{
																	"nativeSrc": "948:35:14",
																	"nodeType": "YulAssignment",
																	"src": "948:35:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:14",
																						"nodeType": "YulLiteral",
																						"src": "971:2:14",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:14"
																				},
																				"nativeSrc": "967:15:14",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:14"
																		},
																		"nativeSrc": "955:28:14",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:14"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:14"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1732,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:14",
																"valueSize": 1
															},
															{
																"declaration": 1723,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:14",
																"valueSize": 1
															},
															{
																"declaration": 1739,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:14",
																"valueSize": 1
															}
														],
														"id": 1741,
														"nodeType": "InlineAssembly",
														"src": "921:76:14"
													},
													{
														"body": {
															"id": 1756,
															"nodeType": "Block",
															"src": "1023:269:14",
															"statements": [
																{
																	"expression": {
																		"id": 1744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:14",
																		"subExpression": {
																			"id": 1743,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1739,
																			"src": "1041:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1745,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:14"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:14",
																		"nodeType": "YulBlock",
																		"src": "1124:86:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:14",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:14",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:14"
																									},
																									"nativeSrc": "1164:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:14"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:14",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:14"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:14",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:14"
																							},
																							"nativeSrc": "1159:32:14",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:14",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:14"
																					},
																					"nativeSrc": "1146:46:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:14"
																				},
																				"nativeSrc": "1146:46:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:14"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1704,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:14",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1739,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:14",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1717,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:14",
																			"valueSize": 1
																		}
																	],
																	"id": 1746,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:14"
																},
																{
																	"expression": {
																		"id": 1749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1747,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1717,
																			"src": "1227:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1750,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:14"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1751,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1717,
																			"src": "1260:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1755,
																	"nodeType": "IfStatement",
																	"src": "1256:21:14",
																	"trueBody": {
																		"id": 1754,
																		"nodeType": "Break",
																		"src": "1272:5:14"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1757,
														"nodeType": "WhileStatement",
														"src": "1010:282:14"
													},
													{
														"expression": {
															"id": 1758,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "1312:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1721,
														"id": 1759,
														"nodeType": "Return",
														"src": "1305:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1715,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "655:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:14"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "693:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1719,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:14"
									},
									"scope": 1949,
									"src": "637:698:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1787,
										"nodeType": "Block",
										"src": "1511:92:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1773,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1765,
																	"src": "1542:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:14",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1782,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1765,
																			"src": "1588:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1780,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3757,
																			"src": "1573:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3757_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:14",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3756,
																		"src": "1573:14:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1779,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "1564:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1770,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:14",
																"typeDescriptions": {}
															}
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:14",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1769,
												"id": 1786,
												"nodeType": "Return",
												"src": "1521:75:14"
											}
										]
									},
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:14",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "1459:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1764,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:14"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "1496:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1767,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:14"
									},
									"scope": 1949,
									"src": "1435:168:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1807,
										"nodeType": "Block",
										"src": "1782:100:14",
										"statements": [
											{
												"id": 1806,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1797,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1791,
																	"src": "1835:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1800,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1791,
																				"src": "1854:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1798,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3652,
																				"src": "1842:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3652_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:14",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3594,
																			"src": "1842:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1796,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1808,
																	1891,
																	1911
																],
																"referencedDeclaration": 1891,
																"src": "1823:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1795,
														"id": 1805,
														"nodeType": "Return",
														"src": "1816:49:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1789,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "1729:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:14"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "1767:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1793,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:14"
									},
									"scope": 1949,
									"src": "1708:174:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "2095:435:14",
										"statements": [
											{
												"assignments": [
													1819
												],
												"declarations": [
													{
														"constant": false,
														"id": 1819,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "2105:18:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1818,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1821,
												"initialValue": {
													"id": 1820,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1811,
													"src": "2126:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:14"
											},
											{
												"assignments": [
													1823
												],
												"declarations": [
													{
														"constant": false,
														"id": 1823,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "2141:19:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1822,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1832,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1827,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "2177:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1824,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:14"
											},
											{
												"expression": {
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1833,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "2198:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1835,
														"indexExpression": {
															"hexValue": "30",
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1838,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:14"
											},
											{
												"expression": {
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1839,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "2223:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1841,
														"indexExpression": {
															"hexValue": "31",
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1844,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:14"
											},
											{
												"body": {
													"id": 1873,
													"nodeType": "Block",
													"src": "2293:95:14",
													"statements": [
														{
															"expression": {
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1859,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1823,
																		"src": "2307:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1861,
																	"indexExpression": {
																		"id": 1860,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1846,
																		"src": "2314:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1862,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1704,
																		"src": "2319:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1866,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1863,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1819,
																			"src": "2330:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1868,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:14"
														},
														{
															"expression": {
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1869,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "2361:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1872,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1853,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "2281:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1854,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1874,
												"initializationExpression": {
													"assignments": [
														1846
													],
													"declarations": [
														{
															"constant": false,
															"id": 1846,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 1874,
															"src": "2253:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1845,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1852,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1848,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "2269:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:14"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:14",
														"subExpression": {
															"id": 1856,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "2290:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1858,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:14"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1875,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1819,
														"src": "2401:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1876,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1884,
												"nodeType": "IfStatement",
												"src": "2397:96:14",
												"trueBody": {
													"id": 1883,
													"nodeType": "Block",
													"src": "2418:75:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1879,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1811,
																		"src": "2468:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1880,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1813,
																		"src": "2475:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1878,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "2439:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1882,
															"nodeType": "RevertStatement",
															"src": "2432:50:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1887,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "2516:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1885,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:14",
															"typeDescriptions": {}
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1817,
												"id": 1889,
												"nodeType": "Return",
												"src": "2502:21:14"
											}
										]
									},
									"documentation": {
										"id": 1809,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "2026:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "2041:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:14"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "2080:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1815,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:14"
									},
									"scope": 1949,
									"src": "2005:525:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1910,
										"nodeType": "Block",
										"src": "2762:75:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1904,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1894,
																			"src": "2807:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1902,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1900,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1907,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "2815:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1899,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1808,
															1891,
															1911
														],
														"referencedDeclaration": 1891,
														"src": "2779:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1898,
												"id": 1909,
												"nodeType": "Return",
												"src": "2772:58:14"
											}
										]
									},
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:14",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "2710:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:14"
									},
									"returnParameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "2747:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1896,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:14"
									},
									"scope": 1949,
									"src": "2689:148:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "2992:104:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1923,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1914,
																		"src": "3015:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1921,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:14",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1928,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1916,
																		"src": "3034:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1926,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:14",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1935,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1914,
																			"src": "3063:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1933,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1932,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1941,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1916,
																			"src": "3086:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1939,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1938,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1920,
												"id": 1946,
												"nodeType": "Return",
												"src": "3002:87:14"
											}
										]
									},
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:14",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "2929:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1913,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "2946:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1915,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:14"
									},
									"returnParameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "2986:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1918,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:14"
									},
									"scope": 1949,
									"src": "2914:182:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1950,
							"src": "251:2847:14",
							"usedErrors": [
								1714
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							2297
						]
					},
					"id": 2298,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1952,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:15",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 2297,
							"linearizedBaseContracts": [
								2297
							],
							"name": "ECDSA",
							"nameLocation": "352:5:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 1957,
									"members": [
										{
											"id": 1953,
											"name": "NoError",
											"nameLocation": "392:7:15",
											"nodeType": "EnumValue",
											"src": "392:7:15"
										},
										{
											"id": 1954,
											"name": "InvalidSignature",
											"nameLocation": "409:16:15",
											"nodeType": "EnumValue",
											"src": "409:16:15"
										},
										{
											"id": 1955,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:15",
											"nodeType": "EnumValue",
											"src": "435:22:15"
										},
										{
											"id": 1956,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:15",
											"nodeType": "EnumValue",
											"src": "467:17:15"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:15",
									"nodeType": "EnumDefinition",
									"src": "364:126:15"
								},
								{
									"documentation": {
										"id": 1958,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:15",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 1960,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:15"
									},
									"src": "564:30:15"
								},
								{
									"documentation": {
										"id": 1961,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:15",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 1965,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "699:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:15"
									},
									"src": "665:50:15"
								},
								{
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:15",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 1970,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "840:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1967,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:15"
									},
									"src": "811:40:15"
								},
								{
									"body": {
										"id": 2022,
										"nodeType": "Block",
										"src": "2242:653:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1985,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "2256:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2266:6:15",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2256:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2276:2:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2256:22:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2020,
													"nodeType": "Block",
													"src": "2781:108:15",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2009,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2811:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2803:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2007,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2803:7:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2803:10:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2011,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1957,
																			"src": "2815:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1957_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2828:22:15",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1955,
																		"src": "2815:35:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1957",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2015,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1975,
																					"src": "2860:9:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2016,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2870:6:15",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2860:16:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2852:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 2013,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2852:7:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2852:25:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2018,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2802:76:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1957_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1984,
															"id": 2019,
															"nodeType": "Return",
															"src": "2795:83:15"
														}
													]
												},
												"id": 2021,
												"nodeType": "IfStatement",
												"src": "2252:637:15",
												"trueBody": {
													"id": 2006,
													"nodeType": "Block",
													"src": "2280:495:15",
													"statements": [
														{
															"assignments": [
																1990
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1990,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2302:1:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 2006,
																	"src": "2294:9:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1989,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1991,
															"nodeType": "VariableDeclarationStatement",
															"src": "2294:9:15"
														},
														{
															"assignments": [
																1993
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1993,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2325:1:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 2006,
																	"src": "2317:9:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1992,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2317:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1994,
															"nodeType": "VariableDeclarationStatement",
															"src": "2317:9:15"
														},
														{
															"assignments": [
																1996
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1996,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2346:1:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 2006,
																	"src": "2340:7:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1995,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2340:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1997,
															"nodeType": "VariableDeclarationStatement",
															"src": "2340:7:15"
														},
														{
															"AST": {
																"nativeSrc": "2548:171:15",
																"nodeType": "YulBlock",
																"src": "2548:171:15",
																"statements": [
																	{
																		"nativeSrc": "2566:32:15",
																		"nodeType": "YulAssignment",
																		"src": "2566:32:15",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2581:9:15",
																							"nodeType": "YulIdentifier",
																							"src": "2581:9:15"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2592:4:15",
																							"nodeType": "YulLiteral",
																							"src": "2592:4:15",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2577:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "2577:3:15"
																					},
																					"nativeSrc": "2577:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2577:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2571:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:15"
																			},
																			"nativeSrc": "2571:27:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2571:27:15"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2566:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "2566:1:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2615:32:15",
																		"nodeType": "YulAssignment",
																		"src": "2615:32:15",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2630:9:15",
																							"nodeType": "YulIdentifier",
																							"src": "2630:9:15"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2641:4:15",
																							"nodeType": "YulLiteral",
																							"src": "2641:4:15",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2626:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "2626:3:15"
																					},
																					"nativeSrc": "2626:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2626:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2620:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2620:5:15"
																			},
																			"nativeSrc": "2620:27:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:27:15"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2615:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "2615:1:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2664:41:15",
																		"nodeType": "YulAssignment",
																		"src": "2664:41:15",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2687:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "2687:9:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2698:4:15",
																									"nodeType": "YulLiteral",
																									"src": "2698:4:15",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2683:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "2683:3:15"
																							},
																							"nativeSrc": "2683:20:15",
																							"nodeType": "YulFunctionCall",
																							"src": "2683:20:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2677:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2677:5:15"
																					},
																					"nativeSrc": "2677:27:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2677:27:15"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2669:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "2669:4:15"
																			},
																			"nativeSrc": "2669:36:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2669:36:15"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2664:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "2664:1:15"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1990,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2566:1:15",
																	"valueSize": 1
																},
																{
																	"declaration": 1993,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2615:1:15",
																	"valueSize": 1
																},
																{
																	"declaration": 1975,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2581:9:15",
																	"valueSize": 1
																},
																{
																	"declaration": 1975,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2630:9:15",
																	"valueSize": 1
																},
																{
																	"declaration": 1975,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2687:9:15",
																	"valueSize": 1
																},
																{
																	"declaration": 1996,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2664:1:15",
																	"valueSize": 1
																}
															],
															"id": 1998,
															"nodeType": "InlineAssembly",
															"src": "2539:180:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2000,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1973,
																		"src": "2750:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2001,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "2756:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 2002,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1990,
																		"src": "2759:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2003,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1993,
																		"src": "2762:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1999,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2023,
																		2103,
																		2211
																	],
																	"referencedDeclaration": 2211,
																	"src": "2739:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1957_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2739:25:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1957_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1984,
															"id": 2005,
															"nodeType": "Return",
															"src": "2732:32:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:15",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 2023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2157:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "2149:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1972,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2176:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "2163:22:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1974,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2163:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:38:15"
									},
									"returnParameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "2210:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "2219:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1957",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1980,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1979,
														"name": "RecoverError",
														"nameLocations": [
															"2219:12:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1957,
														"src": "2219:12:15"
													},
													"referencedDeclaration": 1957,
													"src": "2219:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1957",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "2233:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1982,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:32:15"
									},
									"scope": 2297,
									"src": "2129:766:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2052,
										"nodeType": "Block",
										"src": "3789:168:15",
										"statements": [
											{
												"assignments": [
													2034,
													2037,
													2039
												],
												"declarations": [
													{
														"constant": false,
														"id": 2034,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3808:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 2052,
														"src": "3800:17:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2033,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3800:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2037,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3832:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 2052,
														"src": "3819:18:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1957",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2036,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2035,
																"name": "RecoverError",
																"nameLocations": [
																	"3819:12:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1957,
																"src": "3819:12:15"
															},
															"referencedDeclaration": 1957,
															"src": "3819:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1957",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2039,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3847:8:15",
														"nodeType": "VariableDeclaration",
														"scope": 2052,
														"src": "3839:16:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2038,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3839:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2044,
												"initialValue": {
													"arguments": [
														{
															"id": 2041,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2026,
															"src": "3870:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2042,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "3876:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2040,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2023,
															2103,
															2211
														],
														"referencedDeclaration": 2023,
														"src": "3859:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1957_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:27:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1957_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3799:87:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2046,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2037,
															"src": "3908:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1957",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2047,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2039,
															"src": "3915:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1957",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2045,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2296,
														"src": "3896:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1957_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2049,
												"nodeType": "ExpressionStatement",
												"src": "3896:28:15"
											},
											{
												"expression": {
													"id": 2050,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2034,
													"src": "3941:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2032,
												"id": 2051,
												"nodeType": "Return",
												"src": "3934:16:15"
											}
										]
									},
									"documentation": {
										"id": 2024,
										"nodeType": "StructuredDocumentation",
										"src": "2901:796:15",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 2053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3711:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3727:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "3719:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2025,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3746:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "3733:22:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3733:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:38:15"
									},
									"returnParameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "3780:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:9:15"
									},
									"scope": 2297,
									"src": "3702:255:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2102,
										"nodeType": "Block",
										"src": "4285:342:15",
										"statements": [
											{
												"id": 2101,
												"nodeType": "UncheckedBlock",
												"src": "4295:326:15",
												"statements": [
													{
														"assignments": [
															2071
														],
														"declarations": [
															{
																"constant": false,
																"id": 2071,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4327:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 2101,
																"src": "4319:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 2070,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4319:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2078,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2072,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2060,
																"src": "4331:2:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 2075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4344:66:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 2074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4336:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 2073,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4336:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 2076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:75:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4331:80:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4319:92:15"
													},
													{
														"assignments": [
															2080
														],
														"declarations": [
															{
																"constant": false,
																"id": 2080,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4528:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 2101,
																"src": "4522:7:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 2079,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4522:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2093,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2088,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 2085,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2060,
																							"src": "4547:2:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 2084,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4539:7:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 2083,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4539:7:15",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2086,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4539:11:15",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 2087,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4554:3:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4539:18:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2089,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4538:20:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4561:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4538:25:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4532:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2081,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4532:5:15",
																	"typeDescriptions": {}
																}
															},
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:32:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4522:42:15"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2095,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2056,
																	"src": "4596:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2096,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2080,
																	"src": "4602:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 2097,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "4605:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2098,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2071,
																	"src": "4608:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2094,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2023,
																	2103,
																	2211
																],
																"referencedDeclaration": 2211,
																"src": "4585:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1957_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4585:25:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1957_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 2069,
														"id": 2100,
														"nodeType": "Return",
														"src": "4578:32:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2054,
										"nodeType": "StructuredDocumentation",
										"src": "3963:205:15",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 2103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4182:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4201:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "4193:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2055,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4215:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "4207:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2057,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4226:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "4218:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2059,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:37:15"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "4253:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "4262:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1957",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2065,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2064,
														"name": "RecoverError",
														"nameLocations": [
															"4262:12:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1957,
														"src": "4262:12:15"
													},
													"referencedDeclaration": 1957,
													"src": "4262:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1957",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "4276:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2067,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:32:15"
									},
									"scope": 2297,
									"src": "4173:454:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2135,
										"nodeType": "Block",
										"src": "4840:164:15",
										"statements": [
											{
												"assignments": [
													2116,
													2119,
													2121
												],
												"declarations": [
													{
														"constant": false,
														"id": 2116,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4859:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 2135,
														"src": "4851:17:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2115,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4851:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2119,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4883:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 2135,
														"src": "4870:18:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1957",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2118,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2117,
																"name": "RecoverError",
																"nameLocations": [
																	"4870:12:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1957,
																"src": "4870:12:15"
															},
															"referencedDeclaration": 1957,
															"src": "4870:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1957",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2121,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4898:8:15",
														"nodeType": "VariableDeclaration",
														"scope": 2135,
														"src": "4890:16:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2120,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4890:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2127,
												"initialValue": {
													"arguments": [
														{
															"id": 2123,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2106,
															"src": "4921:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2124,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2108,
															"src": "4927:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2125,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "4930:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2122,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2023,
															2103,
															2211
														],
														"referencedDeclaration": 2103,
														"src": "4910:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1957_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:23:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1957_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:83:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2129,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2119,
															"src": "4955:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1957",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2130,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2121,
															"src": "4962:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1957",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2128,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2296,
														"src": "4943:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1957_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2132,
												"nodeType": "ExpressionStatement",
												"src": "4943:28:15"
											},
											{
												"expression": {
													"id": 2133,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2116,
													"src": "4988:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2114,
												"id": 2134,
												"nodeType": "Return",
												"src": "4981:16:15"
											}
										]
									},
									"documentation": {
										"id": 2104,
										"nodeType": "StructuredDocumentation",
										"src": "4633:116:15",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 2136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4763:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4779:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "4771:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2105,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4771:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4793:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "4785:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2107,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4804:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "4796:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4770:37:15"
									},
									"returnParameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "4831:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:9:15"
									},
									"scope": 2297,
									"src": "4754:250:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "5298:1372:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2157,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2145,
																"src": "6194:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6186:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2155,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6186:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 2158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6186:10:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 2159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6199:66:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6186:79:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2171,
												"nodeType": "IfStatement",
												"src": "6182:164:15",
												"trueBody": {
													"id": 2170,
													"nodeType": "Block",
													"src": "6267:79:15",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2163,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6297:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6289:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2161,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6289:7:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6289:10:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2165,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1957,
																			"src": "6301:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1957_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6314:17:15",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1956,
																		"src": "6301:30:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1957",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 2167,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2145,
																		"src": "6333:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2168,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6288:47:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1957_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2154,
															"id": 2169,
															"nodeType": "Return",
															"src": "6281:54:15"
														}
													]
												}
											},
											{
												"assignments": [
													2173
												],
												"declarations": [
													{
														"constant": false,
														"id": 2173,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6448:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2210,
														"src": "6440:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2172,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6440:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2180,
												"initialValue": {
													"arguments": [
														{
															"id": 2175,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2139,
															"src": "6467:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2176,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2141,
															"src": "6473:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2177,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "6476:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2178,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "6479:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2174,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6457:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 2179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:24:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6440:41:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2181,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2173,
														"src": "6495:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6513:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6505:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2182,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6505:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 2185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6505:10:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6495:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2200,
												"nodeType": "IfStatement",
												"src": "6491:113:15",
												"trueBody": {
													"id": 2199,
													"nodeType": "Block",
													"src": "6517:87:15",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6547:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6539:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2187,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6539:7:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6539:10:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2191,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1957,
																			"src": "6551:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1957_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6564:16:15",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1954,
																		"src": "6551:29:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1957",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6590:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6582:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 2193,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6582:7:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6582:10:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2197,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6538:55:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1957_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2154,
															"id": 2198,
															"nodeType": "Return",
															"src": "6531:62:15"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2201,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2173,
															"src": "6622:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2202,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1957,
																"src": "6630:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1957_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6643:7:15",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1953,
															"src": "6630:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1957",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6660:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6652:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2204,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6652:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 2207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:10:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 2208,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6621:42:15",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1957_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 2154,
												"id": 2209,
												"nodeType": "Return",
												"src": "6614:49:15"
											}
										]
									},
									"documentation": {
										"id": 2137,
										"nodeType": "StructuredDocumentation",
										"src": "5010:125:15",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5149:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5177:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "5169:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2138,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5197:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "5191:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2140,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5191:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5216:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "5208:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2142,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5235:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "5227:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2144,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:83:15"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "5266:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5266:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "5275:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1957",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2150,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2149,
														"name": "RecoverError",
														"nameLocations": [
															"5275:12:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1957,
														"src": "5275:12:15"
													},
													"referencedDeclaration": 1957,
													"src": "5275:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1957",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "5289:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:32:15"
									},
									"scope": 2297,
									"src": "5140:1530:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2246,
										"nodeType": "Block",
										"src": "6897:166:15",
										"statements": [
											{
												"assignments": [
													2226,
													2229,
													2231
												],
												"declarations": [
													{
														"constant": false,
														"id": 2226,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6916:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 2246,
														"src": "6908:17:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2225,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6908:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2229,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6940:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 2246,
														"src": "6927:18:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1957",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2228,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2227,
																"name": "RecoverError",
																"nameLocations": [
																	"6927:12:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1957,
																"src": "6927:12:15"
															},
															"referencedDeclaration": 1957,
															"src": "6927:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1957",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2231,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "6955:8:15",
														"nodeType": "VariableDeclaration",
														"scope": 2246,
														"src": "6947:16:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2230,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6947:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2238,
												"initialValue": {
													"arguments": [
														{
															"id": 2233,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2214,
															"src": "6978:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2234,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2216,
															"src": "6984:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2235,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2218,
															"src": "6987:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2236,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2220,
															"src": "6990:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2232,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2023,
															2103,
															2211
														],
														"referencedDeclaration": 2211,
														"src": "6967:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1957_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6967:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1957_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:85:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2240,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "7014:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1957",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2241,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2231,
															"src": "7021:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1957",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2239,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2296,
														"src": "7002:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1957_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7002:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2243,
												"nodeType": "ExpressionStatement",
												"src": "7002:28:15"
											},
											{
												"expression": {
													"id": 2244,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2226,
													"src": "7047:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2224,
												"id": 2245,
												"nodeType": "Return",
												"src": "7040:16:15"
											}
										]
									},
									"documentation": {
										"id": 2212,
										"nodeType": "StructuredDocumentation",
										"src": "6676:122:15",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6812:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6828:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "6820:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2213,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6840:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "6834:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2215,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6834:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6851:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "6843:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2217,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6862:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "6854:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6854:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:45:15"
									},
									"returnParameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "6888:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6888:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6887:9:15"
									},
									"scope": 2297,
									"src": "6803:260:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2295,
										"nodeType": "Block",
										"src": "7268:460:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$1957",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2256,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2251,
														"src": "7282:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1957",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2257,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1957,
															"src": "7291:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$1957_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 2258,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7304:7:15",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1953,
														"src": "7291:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1957",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7282:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$1957",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 2265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2262,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2251,
															"src": "7378:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1957",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2263,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1957,
																"src": "7387:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1957_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7400:16:15",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1954,
															"src": "7387:29:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1957",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7378:38:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$1957",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 2273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2270,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2251,
																"src": "7483:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1957",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2271,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1957,
																	"src": "7492:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$1957_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 2272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7505:22:15",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1955,
																"src": "7492:35:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1957",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7483:44:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$1957",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 2285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2282,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2251,
																	"src": "7617:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1957",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2283,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1957,
																		"src": "7626:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$1957_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 2284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7639:17:15",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1956,
																	"src": "7626:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1957",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7617:39:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2291,
															"nodeType": "IfStatement",
															"src": "7613:109:15",
															"trueBody": {
																"id": 2290,
																"nodeType": "Block",
																"src": "7658:64:15",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2287,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2253,
																					"src": "7702:8:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2286,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1970,
																				"src": "7679:22:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 2288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7679:32:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2289,
																		"nodeType": "RevertStatement",
																		"src": "7672:39:15"
																	}
																]
															}
														},
														"id": 2292,
														"nodeType": "IfStatement",
														"src": "7479:243:15",
														"trueBody": {
															"id": 2281,
															"nodeType": "Block",
															"src": "7529:78:15",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2277,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2253,
																						"src": "7586:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 2276,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7578:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2275,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7578:7:15",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2278,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7578:17:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2274,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1965,
																			"src": "7550:27:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 2279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7550:46:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2280,
																	"nodeType": "RevertStatement",
																	"src": "7543:53:15"
																}
															]
														}
													},
													"id": 2293,
													"nodeType": "IfStatement",
													"src": "7374:348:15",
													"trueBody": {
														"id": 2269,
														"nodeType": "Block",
														"src": "7418:55:15",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2266,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1960,
																		"src": "7439:21:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7439:23:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2268,
																"nodeType": "RevertStatement",
																"src": "7432:30:15"
															}
														]
													}
												},
												"id": 2294,
												"nodeType": "IfStatement",
												"src": "7278:444:15",
												"trueBody": {
													"id": 2261,
													"nodeType": "Block",
													"src": "7313:55:15",
													"statements": [
														{
															"functionReturnParameters": 2255,
															"id": 2260,
															"nodeType": "Return",
															"src": "7327:7:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2248,
										"nodeType": "StructuredDocumentation",
										"src": "7069:122:15",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 2296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7205:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7230:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "7217:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1957",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2250,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2249,
														"name": "RecoverError",
														"nameLocations": [
															"7217:12:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1957,
														"src": "7217:12:15"
													},
													"referencedDeclaration": 1957,
													"src": "7217:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1957",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7245:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "7237:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2252,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:38:15"
									},
									"returnParameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:15"
									},
									"scope": 2297,
									"src": "7196:532:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2298,
							"src": "344:7386:15",
							"usedErrors": [
								1960,
								1965,
								1970
							],
							"usedEvents": []
						}
					],
					"src": "112:7619:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
					"exportedSymbols": {
						"EIP712": [
							2524
						],
						"IERC5267": [
							172
						],
						"MessageHashUtils": [
							2598
						],
						"ShortString": [
							1373
						],
						"ShortStrings": [
							1584
						]
					},
					"id": 2525,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2299,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
							"file": "./MessageHashUtils.sol",
							"id": 2301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2525,
							"sourceUnit": 2599,
							"src": "139:56:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2300,
										"name": "MessageHashUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2598,
										"src": "147:16:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
							"file": "../ShortStrings.sol",
							"id": 2304,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2525,
							"sourceUnit": 1585,
							"src": "196:62:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2302,
										"name": "ShortStrings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1584,
										"src": "204:12:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2303,
										"name": "ShortString",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1373,
										"src": "218:11:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
							"file": "../../interfaces/IERC5267.sol",
							"id": 2306,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2525,
							"sourceUnit": 173,
							"src": "259:55:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2305,
										"name": "IERC5267",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 172,
										"src": "267:8:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2308,
										"name": "IERC5267",
										"nameLocations": [
											"1988:8:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 172,
										"src": "1988:8:16"
									},
									"id": 2309,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:8:16"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2307,
								"nodeType": "StructuredDocumentation",
								"src": "316:1643:16",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 2524,
							"linearizedBaseContracts": [
								2524,
								172
							],
							"name": "EIP712",
							"nameLocation": "1978:6:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2311,
									"libraryName": {
										"id": 2310,
										"name": "ShortStrings",
										"nameLocations": [
											"2009:12:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1584,
										"src": "2009:12:16"
									},
									"nodeType": "UsingForDirective",
									"src": "2003:25:16"
								},
								{
									"constant": true,
									"id": 2316,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "2059:9:16",
									"nodeType": "VariableDeclaration",
									"scope": 2524,
									"src": "2034:140:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2312,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2034:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 2314,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2089:84:16",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 2313,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2079:9:16",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2315,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2079:95:16",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2318,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "2399:22:16",
									"nodeType": "VariableDeclaration",
									"scope": 2524,
									"src": "2373:48:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2317,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2373:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2320,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "2453:14:16",
									"nodeType": "VariableDeclaration",
									"scope": 2524,
									"src": "2427:40:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2319,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2427:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2322,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "2499:11:16",
									"nodeType": "VariableDeclaration",
									"scope": 2524,
									"src": "2473:37:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2321,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2473:7:16",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2324,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "2543:11:16",
									"nodeType": "VariableDeclaration",
									"scope": 2524,
									"src": "2517:37:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2323,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2517:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2326,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "2586:14:16",
									"nodeType": "VariableDeclaration",
									"scope": 2524,
									"src": "2560:40:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2325,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2560:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2329,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "2637:5:16",
									"nodeType": "VariableDeclaration",
									"scope": 2524,
									"src": "2607:35:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 2328,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2327,
											"name": "ShortString",
											"nameLocations": [
												"2607:11:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1373,
											"src": "2607:11:16"
										},
										"referencedDeclaration": 1373,
										"src": "2607:11:16",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2332,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "2678:8:16",
									"nodeType": "VariableDeclaration",
									"scope": 2524,
									"src": "2648:38:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 2331,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2330,
											"name": "ShortString",
											"nameLocations": [
												"2648:11:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1373,
											"src": "2648:11:16"
										},
										"referencedDeclaration": 1373,
										"src": "2648:11:16",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2334,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "2707:13:16",
									"nodeType": "VariableDeclaration",
									"scope": 2524,
									"src": "2692:28:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2333,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2692:6:16",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2336,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "2741:16:16",
									"nodeType": "VariableDeclaration",
									"scope": 2524,
									"src": "2726:31:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2335,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2726:6:16",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2393,
										"nodeType": "Block",
										"src": "3383:376:16",
										"statements": [
											{
												"expression": {
													"id": 2349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2344,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2329,
														"src": "3393:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2347,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2334,
																"src": "3432:13:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 2345,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2339,
																"src": "3401:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3406:25:16",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1525,
															"src": "3401:30:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1373_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 2348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3401:45:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
															"typeString": "ShortString"
														}
													},
													"src": "3393:53:16",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
														"typeString": "ShortString"
													}
												},
												"id": 2350,
												"nodeType": "ExpressionStatement",
												"src": "3393:53:16"
											},
											{
												"expression": {
													"id": 2356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2351,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2332,
														"src": "3456:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2354,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2336,
																"src": "3501:16:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 2352,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2341,
																"src": "3467:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3475:25:16",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1525,
															"src": "3467:33:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1373_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 2355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3467:51:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
															"typeString": "ShortString"
														}
													},
													"src": "3456:62:16",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
														"typeString": "ShortString"
													}
												},
												"id": 2357,
												"nodeType": "ExpressionStatement",
												"src": "3456:62:16"
											},
											{
												"expression": {
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2358,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2324,
														"src": "3528:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2362,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "3558:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3552:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2360,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3552:5:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3552:11:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2359,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3542:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3542:22:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3528:36:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2366,
												"nodeType": "ExpressionStatement",
												"src": "3528:36:16"
											},
											{
												"expression": {
													"id": 2374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2367,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2326,
														"src": "3574:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2371,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2341,
																		"src": "3607:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3601:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2369,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3601:5:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3601:14:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2368,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3591:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3591:25:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3574:42:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2375,
												"nodeType": "ExpressionStatement",
												"src": "3574:42:16"
											},
											{
												"expression": {
													"id": 2379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2376,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2320,
														"src": "3627:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2377,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3644:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3650:7:16",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "3644:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3627:30:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2380,
												"nodeType": "ExpressionStatement",
												"src": "3627:30:16"
											},
											{
												"expression": {
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2381,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2318,
														"src": "3667:22:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2382,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2441,
															"src": "3692:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 2383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3692:23:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3667:48:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2385,
												"nodeType": "ExpressionStatement",
												"src": "3667:48:16"
											},
											{
												"expression": {
													"id": 2391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2386,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "3725:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2389,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3747:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$2524",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$2524",
																	"typeString": "contract EIP712"
																}
															],
															"id": 2388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3739:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2387,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3739:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 2390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3739:13:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3725:27:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2392,
												"nodeType": "ExpressionStatement",
												"src": "3725:27:16"
											}
										]
									},
									"documentation": {
										"id": 2337,
										"nodeType": "StructuredDocumentation",
										"src": "2764:559:16",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 2394,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3354:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "3340:18:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2338,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3340:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3374:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "3360:21:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2340,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3360:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:43:16"
									},
									"returnParameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:16"
									},
									"scope": 2524,
									"src": "3328:431:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2419,
										"nodeType": "Block",
										"src": "3907:200:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2402,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3929:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2524",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2524",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3921:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2400,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3921:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3921:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2404,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2322,
															"src": "3938:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3921:28:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2406,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3953:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3959:7:16",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "3953:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2408,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2320,
															"src": "3970:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3953:31:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3921:63:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2417,
													"nodeType": "Block",
													"src": "4046:55:16",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2414,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2441,
																	"src": "4067:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4067:23:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 2399,
															"id": 2416,
															"nodeType": "Return",
															"src": "4060:30:16"
														}
													]
												},
												"id": 2418,
												"nodeType": "IfStatement",
												"src": "3917:184:16",
												"trueBody": {
													"id": 2413,
													"nodeType": "Block",
													"src": "3986:54:16",
													"statements": [
														{
															"expression": {
																"id": 2411,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "4007:22:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 2399,
															"id": 2412,
															"nodeType": "Return",
															"src": "4000:29:16"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2395,
										"nodeType": "StructuredDocumentation",
										"src": "3765:75:16",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 2420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "3854:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3872:2:16"
									},
									"returnParameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2420,
												"src": "3898:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2397,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3897:9:16"
									},
									"scope": 2524,
									"src": "3845:262:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2440,
										"nodeType": "Block",
										"src": "4177:115:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2428,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2316,
																	"src": "4215:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2429,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2324,
																	"src": "4226:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2430,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "4239:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2431,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4255:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4261:7:16",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "4255:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2435,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4278:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$2524",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$2524",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 2434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2433,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2426,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4204:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4208:6:16",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4204:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4204:80:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2425,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4194:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:91:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2424,
												"id": 2439,
												"nodeType": "Return",
												"src": "4187:98:16"
											}
										]
									},
									"id": 2441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "4122:21:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4143:2:16"
									},
									"returnParameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "4168:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2422,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:9:16"
									},
									"scope": 2524,
									"src": "4113:179:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2456,
										"nodeType": "Block",
										"src": "5003:90:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2451,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2420,
																"src": "5053:18:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5053:20:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2453,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2444,
															"src": "5075:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2449,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2598,
															"src": "5020:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$2598_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 2450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5037:15:16",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2597,
														"src": "5020:32:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 2454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5020:66:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2448,
												"id": 2455,
												"nodeType": "Return",
												"src": "5013:73:16"
											}
										]
									},
									"documentation": {
										"id": 2442,
										"nodeType": "StructuredDocumentation",
										"src": "4298:614:16",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 2457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "4926:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "4951:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2457,
												"src": "4943:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2443,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:20:16"
									},
									"returnParameters": {
										"id": 2448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2457,
												"src": "4994:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2446,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:9:16"
									},
									"scope": 2524,
									"src": "4917:176:16",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										171
									],
									"body": {
										"id": 2498,
										"nodeType": "Block",
										"src": "5472:229:16",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5503:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2477,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2511,
																"src": "5533:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5533:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2479,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2523,
																"src": "5560:14:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5560:16:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2481,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5590:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5596:7:16",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5590:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2485,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5625:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2524",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2524",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5617:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2483,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5617:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5617:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5652:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5644:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2487,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5644:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5644:10:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5682:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "5668:13:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 2491,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5672:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2492,
																	"nodeType": "ArrayTypeName",
																	"src": "5672:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5668:16:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 2496,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5489:205:16",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 2475,
												"id": 2497,
												"nodeType": "Return",
												"src": "5482:212:16"
											}
										]
									},
									"documentation": {
										"id": 2458,
										"nodeType": "StructuredDocumentation",
										"src": "5099:40:16",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 2499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "5153:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5165:2:16"
									},
									"returnParameters": {
										"id": 2475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "5249:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "5242:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 2460,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "5242:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5283:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "5269:18:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2462,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5269:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5315:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "5301:21:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2464,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5301:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "5344:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "5336:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "5373:17:16",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "5365:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5412:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "5404:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2470,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5404:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "5447:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "5430:27:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2472,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5430:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2473,
													"nodeType": "ArrayTypeName",
													"src": "5430:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5228:239:16"
									},
									"scope": 2524,
									"src": "5144:557:16",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2510,
										"nodeType": "Block",
										"src": "6082:65:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2507,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2334,
															"src": "6126:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2505,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2329,
															"src": "6099:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
																"typeString": "ShortString"
															}
														},
														"id": 2506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6105:20:16",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1552,
														"src": "6099:26:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1373_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1373_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6099:41:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2504,
												"id": 2509,
												"nodeType": "Return",
												"src": "6092:48:16"
											}
										]
									},
									"documentation": {
										"id": 2500,
										"nodeType": "StructuredDocumentation",
										"src": "5707:256:16",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "6030:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6041:2:16"
									},
									"returnParameters": {
										"id": 2504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2511,
												"src": "6067:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2502,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6067:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:15:16"
									},
									"scope": 2524,
									"src": "6021:126:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2522,
										"nodeType": "Block",
										"src": "6537:71:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2519,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2336,
															"src": "6584:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2517,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2332,
															"src": "6554:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1373",
																"typeString": "ShortString"
															}
														},
														"id": 2518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6563:20:16",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1552,
														"src": "6554:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1373_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1373_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6554:47:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2516,
												"id": 2521,
												"nodeType": "Return",
												"src": "6547:54:16"
											}
										]
									},
									"documentation": {
										"id": 2512,
										"nodeType": "StructuredDocumentation",
										"src": "6153:262:16",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "6482:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6496:2:16"
									},
									"returnParameters": {
										"id": 2516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "6522:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2514,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6522:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:15:16"
									},
									"scope": 2524,
									"src": "6473:135:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2525,
							"src": "1960:4650:16",
							"usedErrors": [
								1381,
								1383
							],
							"usedEvents": [
								152
							]
						}
					],
					"src": "113:6498:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
					"exportedSymbols": {
						"MessageHashUtils": [
							2598
						],
						"Strings": [
							1949
						]
					},
					"id": 2599,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2526,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 2528,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2599,
							"sourceUnit": 1950,
							"src": "149:39:17",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2527,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1949,
										"src": "157:7:17",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2529,
								"nodeType": "StructuredDocumentation",
								"src": "190:330:17",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 2598,
							"linearizedBaseContracts": [
								2598
							],
							"name": "MessageHashUtils",
							"nameLocation": "529:16:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2538,
										"nodeType": "Block",
										"src": "1314:368:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1376:300:17",
													"nodeType": "YulBlock",
													"src": "1376:300:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1397:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1397:4:17",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "1403:34:17",
																		"nodeType": "YulLiteral",
																		"src": "1403:34:17",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:17"
																},
																"nativeSrc": "1390:48:17",
																"nodeType": "YulFunctionCall",
																"src": "1390:48:17"
															},
															"nativeSrc": "1390:48:17",
															"nodeType": "YulExpressionStatement",
															"src": "1390:48:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1499:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1499:4:17",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "1505:11:17",
																		"nodeType": "YulIdentifier",
																		"src": "1505:11:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1492:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:17"
																},
																"nativeSrc": "1492:25:17",
																"nodeType": "YulFunctionCall",
																"src": "1492:25:17"
															},
															"nativeSrc": "1492:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "1492:25:17"
														},
														{
															"nativeSrc": "1571:31:17",
															"nodeType": "YulAssignment",
															"src": "1571:31:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1591:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1591:4:17",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1597:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1597:4:17",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1581:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "1581:9:17"
																},
																"nativeSrc": "1581:21:17",
																"nodeType": "YulFunctionCall",
																"src": "1581:21:17"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "1571:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:17"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2535,
														"isOffset": false,
														"isSlot": false,
														"src": "1571:6:17",
														"valueSize": 1
													},
													{
														"declaration": 2532,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:11:17",
														"valueSize": 1
													}
												],
												"id": 2537,
												"nodeType": "InlineAssembly",
												"src": "1367:309:17"
											}
										]
									},
									"documentation": {
										"id": 2530,
										"nodeType": "StructuredDocumentation",
										"src": "552:665:17",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 2539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "1231:22:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "1262:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "1254:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2531,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:21:17"
									},
									"returnParameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "1306:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "1298:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2534,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:16:17"
									},
									"scope": 2598,
									"src": "1222:460:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2564,
										"nodeType": "Block",
										"src": "2234:143:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 2551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2286:32:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2556,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2542,
																						"src": "2343:7:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 2557,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2351:6:17",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "2343:14:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2554,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1949,
																					"src": "2326:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$1949_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 2555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2334:8:17",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1762,
																				"src": "2326:16:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 2558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2326:32:17",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2320:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2552,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2320:5:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2320:39:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 2560,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2542,
																	"src": "2361:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2273:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2548,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2273:5:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2279:6:17",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "2273:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2273:96:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2547,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2263:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2263:107:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2546,
												"id": 2563,
												"nodeType": "Return",
												"src": "2244:126:17"
											}
										]
									},
									"documentation": {
										"id": 2540,
										"nodeType": "StructuredDocumentation",
										"src": "1688:455:17",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 2565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "2157:22:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2193:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "2180:20:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:22:17"
									},
									"returnParameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "2225:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2544,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:9:17"
									},
									"scope": 2598,
									"src": "2148:229:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2584,
										"nodeType": "Block",
										"src": "2831:80:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 2578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2875:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 2579,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2568,
																	"src": "2887:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2580,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2570,
																	"src": "2898:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2576,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2858:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2862:12:17",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2858:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2858:45:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2575,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2848:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2848:56:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2574,
												"id": 2583,
												"nodeType": "Return",
												"src": "2841:63:17"
											}
										]
									},
									"documentation": {
										"id": 2566,
										"nodeType": "StructuredDocumentation",
										"src": "2383:332:17",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 2585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "2729:31:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "2769:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "2761:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2793:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "2780:17:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:38:17"
									},
									"returnParameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "2822:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2572,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:9:17"
									},
									"scope": 2598,
									"src": "2720:191:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2596,
										"nodeType": "Block",
										"src": "3462:292:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3524:224:17",
													"nodeType": "YulBlock",
													"src": "3524:224:17",
													"statements": [
														{
															"nativeSrc": "3538:22:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3538:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3555:4:17",
																		"nodeType": "YulLiteral",
																		"src": "3555:4:17",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3549:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "3549:5:17"
																},
																"nativeSrc": "3549:11:17",
																"nodeType": "YulFunctionCall",
																"src": "3549:11:17"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "3542:3:17",
																	"nodeType": "YulTypedName",
																	"src": "3542:3:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3580:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3580:3:17"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "3585:10:17",
																		"nodeType": "YulLiteral",
																		"src": "3585:10:17",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3573:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3573:6:17"
																},
																"nativeSrc": "3573:23:17",
																"nodeType": "YulFunctionCall",
																"src": "3573:23:17"
															},
															"nativeSrc": "3573:23:17",
															"nodeType": "YulExpressionStatement",
															"src": "3573:23:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3620:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "3620:3:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3625:4:17",
																				"nodeType": "YulLiteral",
																				"src": "3625:4:17",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3616:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3616:3:17"
																		},
																		"nativeSrc": "3616:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3616:14:17"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "3632:15:17",
																		"nodeType": "YulIdentifier",
																		"src": "3632:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3609:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:17"
																},
																"nativeSrc": "3609:39:17",
																"nodeType": "YulFunctionCall",
																"src": "3609:39:17"
															},
															"nativeSrc": "3609:39:17",
															"nodeType": "YulExpressionStatement",
															"src": "3609:39:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3672:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "3672:3:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3677:4:17",
																				"nodeType": "YulLiteral",
																				"src": "3677:4:17",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3668:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:17"
																		},
																		"nativeSrc": "3668:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3668:14:17"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "3684:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "3684:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3661:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:17"
																},
																"nativeSrc": "3661:34:17",
																"nodeType": "YulFunctionCall",
																"src": "3661:34:17"
															},
															"nativeSrc": "3661:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "3661:34:17"
														},
														{
															"nativeSrc": "3708:30:17",
															"nodeType": "YulAssignment",
															"src": "3708:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3728:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3728:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3733:4:17",
																		"nodeType": "YulLiteral",
																		"src": "3733:4:17",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3718:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "3718:9:17"
																},
																"nativeSrc": "3718:20:17",
																"nodeType": "YulFunctionCall",
																"src": "3718:20:17"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "3708:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3708:6:17"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2593,
														"isOffset": false,
														"isSlot": false,
														"src": "3708:6:17",
														"valueSize": 1
													},
													{
														"declaration": 2588,
														"isOffset": false,
														"isSlot": false,
														"src": "3632:15:17",
														"valueSize": 1
													},
													{
														"declaration": 2590,
														"isOffset": false,
														"isSlot": false,
														"src": "3684:10:17",
														"valueSize": 1
													}
												],
												"id": 2595,
												"nodeType": "InlineAssembly",
												"src": "3515:233:17"
											}
										]
									},
									"documentation": {
										"id": 2586,
										"nodeType": "StructuredDocumentation",
										"src": "2917:431:17",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 2597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "3362:15:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "3386:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "3378:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2587,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "3411:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "3403:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2589,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:45:17"
									},
									"returnParameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "3454:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "3446:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2592,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:16:17"
									},
									"scope": 2598,
									"src": "3353:401:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2599,
							"src": "521:3235:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3634:17"
				},
				"id": 17
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3652
						]
					},
					"id": 3653,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2600,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2601,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:18",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3652,
							"linearizedBaseContracts": [
								3652
							],
							"name": "Math",
							"nameLocation": "211:4:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2602,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:18",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2604,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:18",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:18"
									},
									"src": "277:29:18"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2609,
									"members": [
										{
											"id": 2605,
											"name": "Floor",
											"nameLocation": "336:5:18",
											"nodeType": "EnumValue",
											"src": "336:5:18"
										},
										{
											"id": 2606,
											"name": "Ceil",
											"nameLocation": "379:4:18",
											"nodeType": "EnumValue",
											"src": "379:4:18"
										},
										{
											"id": 2607,
											"name": "Trunc",
											"nameLocation": "421:5:18",
											"nodeType": "EnumValue",
											"src": "421:5:18"
										},
										{
											"id": 2608,
											"name": "Expand",
											"nameLocation": "451:6:18",
											"nodeType": "EnumValue",
											"src": "451:6:18"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:18",
									"nodeType": "EnumDefinition",
									"src": "312:169:18"
								},
								{
									"body": {
										"id": 2640,
										"nodeType": "Block",
										"src": "661:140:18",
										"statements": [
											{
												"id": 2639,
												"nodeType": "UncheckedBlock",
												"src": "671:124:18",
												"statements": [
													{
														"assignments": [
															2622
														],
														"declarations": [
															{
																"constant": false,
																"id": 2622,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:18",
																"nodeType": "VariableDeclaration",
																"scope": 2639,
																"src": "695:9:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2621,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2626,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2623,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2612,
																"src": "707:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2624,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2614,
																"src": "711:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:18"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2627,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2622,
																"src": "730:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2628,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2612,
																"src": "734:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2634,
														"nodeType": "IfStatement",
														"src": "726:28:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2632,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2620,
															"id": 2633,
															"nodeType": "Return",
															"src": "737:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2636,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2622,
																	"src": "782:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2637,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2620,
														"id": 2638,
														"nodeType": "Return",
														"src": "768:16:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2610,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:18",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2612,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "601:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "612:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:18"
									},
									"returnParameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "646:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2616,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "652:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:18"
									},
									"scope": 3652,
									"src": "585:216:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2668,
										"nodeType": "Block",
										"src": "984:113:18",
										"statements": [
											{
												"id": 2667,
												"nodeType": "UncheckedBlock",
												"src": "994:97:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2653,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2646,
																"src": "1022:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2654,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2644,
																"src": "1026:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2660,
														"nodeType": "IfStatement",
														"src": "1018:28:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2658,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2652,
															"id": 2659,
															"nodeType": "Return",
															"src": "1029:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2662,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2644,
																		"src": "1074:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2663,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2646,
																		"src": "1078:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2665,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2652,
														"id": 2666,
														"nodeType": "Return",
														"src": "1060:20:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2642,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:18",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2669,
												"src": "924:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2669,
												"src": "935:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:18"
									},
									"returnParameters": {
										"id": 2652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2669,
												"src": "969:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2669,
												"src": "975:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:18"
									},
									"scope": 3652,
									"src": "908:189:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2710,
										"nodeType": "Block",
										"src": "1283:417:18",
										"statements": [
											{
												"id": 2709,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2681,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2672,
																"src": "1551:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2688,
														"nodeType": "IfStatement",
														"src": "1547:28:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2686,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2680,
															"id": 2687,
															"nodeType": "Return",
															"src": "1559:16:18"
														}
													},
													{
														"assignments": [
															2690
														],
														"declarations": [
															{
																"constant": false,
																"id": 2690,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:18",
																"nodeType": "VariableDeclaration",
																"scope": 2709,
																"src": "1589:9:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2689,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2694,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2691,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2672,
																"src": "1601:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2692,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2674,
																"src": "1605:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:18"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2695,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2690,
																	"src": "1624:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2696,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2672,
																	"src": "1628:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2698,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2674,
																"src": "1633:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2704,
														"nodeType": "IfStatement",
														"src": "1620:33:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2702,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2680,
															"id": 2703,
															"nodeType": "Return",
															"src": "1636:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2706,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2690,
																	"src": "1681:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2707,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2680,
														"id": 2708,
														"nodeType": "Return",
														"src": "1667:16:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2670,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:18",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "1223:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2674,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "1234:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:18"
									},
									"returnParameters": {
										"id": 2680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "1268:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2676,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "1274:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:18"
									},
									"scope": 3652,
									"src": "1207:493:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2738,
										"nodeType": "Block",
										"src": "1887:114:18",
										"statements": [
											{
												"id": 2737,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2723,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "1925:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2730,
														"nodeType": "IfStatement",
														"src": "1921:29:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2728,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2722,
															"id": 2729,
															"nodeType": "Return",
															"src": "1933:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2732,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2714,
																		"src": "1978:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2733,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2716,
																		"src": "1982:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2735,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2722,
														"id": 2736,
														"nodeType": "Return",
														"src": "1964:20:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2712,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:18",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2714,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "1827:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2716,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "1838:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:18"
									},
									"returnParameters": {
										"id": 2722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "1872:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2718,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2739,
												"src": "1878:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:18"
									},
									"scope": 3652,
									"src": "1811:190:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2766,
										"nodeType": "Block",
										"src": "2198:114:18",
										"statements": [
											{
												"id": 2765,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2751,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2744,
																"src": "2236:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2758,
														"nodeType": "IfStatement",
														"src": "2232:29:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2756,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2750,
															"id": 2757,
															"nodeType": "Return",
															"src": "2244:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2760,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2742,
																		"src": "2289:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2761,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2744,
																		"src": "2293:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2763,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2750,
														"id": 2764,
														"nodeType": "Return",
														"src": "2275:20:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2740,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:18",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "2138:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "2149:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:18"
									},
									"returnParameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "2183:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2746,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "2189:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:18"
									},
									"scope": 3652,
									"src": "2122:190:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2784,
										"nodeType": "Block",
										"src": "2449:37:18",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2777,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2770,
															"src": "2466:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2778,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2772,
															"src": "2470:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2781,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2772,
														"src": "2478:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:18",
													"trueExpression": {
														"id": 2780,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2770,
														"src": "2474:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2776,
												"id": 2783,
												"nodeType": "Return",
												"src": "2459:20:18"
											}
										]
									},
									"documentation": {
										"id": 2768,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:18",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2785,
												"src": "2395:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2785,
												"src": "2406:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:18"
									},
									"returnParameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2785,
												"src": "2440:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:18"
									},
									"scope": 3652,
									"src": "2382:104:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2802,
										"nodeType": "Block",
										"src": "2624:37:18",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2795,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2788,
															"src": "2641:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2796,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2790,
															"src": "2645:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2799,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2790,
														"src": "2653:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:18",
													"trueExpression": {
														"id": 2798,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2788,
														"src": "2649:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2794,
												"id": 2801,
												"nodeType": "Return",
												"src": "2634:20:18"
											}
										]
									},
									"documentation": {
										"id": 2786,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:18",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2788,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "2570:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2790,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "2581:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:18"
									},
									"returnParameters": {
										"id": 2794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "2615:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:18"
									},
									"scope": 3652,
									"src": "2557:104:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2825,
										"nodeType": "Block",
										"src": "2845:82:18",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2813,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2806,
																	"src": "2900:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2814,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2808,
																	"src": "2904:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2816,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2817,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2806,
																		"src": "2910:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2818,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2808,
																		"src": "2914:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2820,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2812,
												"id": 2824,
												"nodeType": "Return",
												"src": "2892:28:18"
											}
										]
									},
									"documentation": {
										"id": 2804,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:18",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "2791:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2808,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "2802:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:18"
									},
									"returnParameters": {
										"id": 2812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "2836:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:18"
									},
									"scope": 3652,
									"src": "2774:153:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2859,
										"nodeType": "Block",
										"src": "3219:260:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2836,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2831,
														"src": "3233:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2844,
												"nodeType": "IfStatement",
												"src": "3229:127:18",
												"trueBody": {
													"id": 2843,
													"nodeType": "Block",
													"src": "3241:115:18",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2839,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2829,
																	"src": "3340:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2840,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2831,
																	"src": "3344:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2835,
															"id": 2842,
															"nodeType": "Return",
															"src": "3333:12:18"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2845,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2829,
															"src": "3444:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2849,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2829,
																			"src": "3458:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2852,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2853,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2831,
																"src": "3467:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:18",
													"trueExpression": {
														"hexValue": "30",
														"id": 2848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2835,
												"id": 2858,
												"nodeType": "Return",
												"src": "3437:35:18"
											}
										]
									},
									"documentation": {
										"id": 2827,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:18",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2829,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "3165:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2831,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "3176:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:18"
									},
									"returnParameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "3210:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:18"
									},
									"scope": 3652,
									"src": "3148:331:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2985,
										"nodeType": "Block",
										"src": "3901:4018:18",
										"statements": [
											{
												"id": 2984,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:18",
												"statements": [
													{
														"assignments": [
															2873
														],
														"declarations": [
															{
																"constant": false,
																"id": 2873,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:18",
																"nodeType": "VariableDeclaration",
																"scope": 2984,
																"src": "4232:13:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2872,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2877,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2874,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2863,
																"src": "4248:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2875,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2865,
																"src": "4252:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:18"
													},
													{
														"assignments": [
															2879
														],
														"declarations": [
															{
																"constant": false,
																"id": 2879,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:18",
																"nodeType": "VariableDeclaration",
																"scope": 2984,
																"src": "4312:13:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2878,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2880,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:18"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:18",
															"nodeType": "YulBlock",
															"src": "4392:122:18",
															"statements": [
																{
																	"nativeSrc": "4410:30:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:18",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:18"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:18",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:18"
																				},
																				"nativeSrc": "4433:6:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:18"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:18"
																		},
																		"nativeSrc": "4420:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:18"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:18",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:18",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:18"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:18"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:18"
																				},
																				"nativeSrc": "4470:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:18"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:18"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:18"
																				},
																				"nativeSrc": "4486:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:18"
																		},
																		"nativeSrc": "4466:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:18"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:18"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2873,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2873,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2879,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2863,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:18",
																"valueSize": 1
															},
															{
																"declaration": 2865,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:18",
																"valueSize": 1
															}
														],
														"id": 2881,
														"nodeType": "InlineAssembly",
														"src": "4383:131:18"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2882,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2879,
																"src": "4595:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2890,
														"nodeType": "IfStatement",
														"src": "4591:368:18",
														"trueBody": {
															"id": 2889,
															"nodeType": "Block",
															"src": "4607:352:18",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2885,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "4925:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2886,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2867,
																			"src": "4933:11:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2871,
																	"id": 2888,
																	"nodeType": "Return",
																	"src": "4918:26:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2891,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2867,
																"src": "5065:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2892,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2879,
																"src": "5080:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2898,
														"nodeType": "IfStatement",
														"src": "5061:88:18",
														"trueBody": {
															"id": 2897,
															"nodeType": "Block",
															"src": "5087:62:18",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2894,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2604,
																			"src": "5112:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2896,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:18"
																}
															]
														}
													},
													{
														"assignments": [
															2900
														],
														"declarations": [
															{
																"constant": false,
																"id": 2900,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:18",
																"nodeType": "VariableDeclaration",
																"scope": 2984,
																"src": "5404:17:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2899,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2901,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:18"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:18",
															"nodeType": "YulBlock",
															"src": "5444:291:18",
															"statements": [
																{
																	"nativeSrc": "5513:38:18",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:18",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:18"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:18"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:18",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:18"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:18"
																		},
																		"nativeSrc": "5526:25:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:18"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:18",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:18"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:18",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:18",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:18"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:18"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:18"
																				},
																				"nativeSrc": "5653:20:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:18"
																		},
																		"nativeSrc": "5642:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:18"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:18"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:18",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:18",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:18"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:18"
																		},
																		"nativeSrc": "5700:21:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:18"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:18"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2867,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:18",
																"valueSize": 1
															},
															{
																"declaration": 2873,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2873,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2873,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2879,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2879,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2900,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:18",
																"valueSize": 1
															},
															{
																"declaration": 2900,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:18",
																"valueSize": 1
															},
															{
																"declaration": 2900,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:18",
																"valueSize": 1
															},
															{
																"declaration": 2863,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:18",
																"valueSize": 1
															},
															{
																"declaration": 2865,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:18",
																"valueSize": 1
															}
														],
														"id": 2902,
														"nodeType": "InlineAssembly",
														"src": "5435:300:18"
													},
													{
														"assignments": [
															2904
														],
														"declarations": [
															{
																"constant": false,
																"id": 2904,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:18",
																"nodeType": "VariableDeclaration",
																"scope": 2984,
																"src": "5939:12:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2903,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2911,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2905,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2867,
																"src": "5954:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2907,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2867,
																			"src": "5973:11:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2909,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:18"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:18",
															"nodeType": "YulBlock",
															"src": "6008:362:18",
															"statements": [
																{
																	"nativeSrc": "6073:37:18",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:18",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:18",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:18"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:18"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:18"
																		},
																		"nativeSrc": "6088:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:18"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:18",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:18"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:18",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:18",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:18"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:18"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:18"
																		},
																		"nativeSrc": "6186:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:18"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:18"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:18",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:18",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:18",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:18",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:18"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:18"
																						},
																						"nativeSrc": "6333:12:18",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:18"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:18"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:18"
																				},
																				"nativeSrc": "6329:23:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:18",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:18",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:18"
																		},
																		"nativeSrc": "6325:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:18"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:18",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:18"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2867,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:18",
																"valueSize": 1
															},
															{
																"declaration": 2867,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:18",
																"valueSize": 1
															},
															{
																"declaration": 2873,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2873,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2904,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:18",
																"valueSize": 1
															},
															{
																"declaration": 2904,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:18",
																"valueSize": 1
															},
															{
																"declaration": 2904,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:18",
																"valueSize": 1
															},
															{
																"declaration": 2904,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:18",
																"valueSize": 1
															},
															{
																"declaration": 2904,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:18",
																"valueSize": 1
															}
														],
														"id": 2912,
														"nodeType": "InlineAssembly",
														"src": "5999:371:18"
													},
													{
														"expression": {
															"id": 2917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2913,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2873,
																"src": "6436:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2914,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2879,
																	"src": "6445:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2915,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2904,
																	"src": "6453:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2918,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:18"
													},
													{
														"assignments": [
															2920
														],
														"declarations": [
															{
																"constant": false,
																"id": 2920,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:18",
																"nodeType": "VariableDeclaration",
																"scope": 2984,
																"src": "6775:15:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2919,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2927,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2922,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2867,
																			"src": "6798:11:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2924,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:18"
													},
													{
														"expression": {
															"id": 2934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2928,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2920,
																"src": "7031:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2930,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2867,
																		"src": "7046:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2931,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2920,
																		"src": "7060:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2935,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:18"
													},
													{
														"expression": {
															"id": 2942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2936,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2920,
																"src": "7100:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2938,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2867,
																		"src": "7115:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2939,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2920,
																		"src": "7129:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2943,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:18"
													},
													{
														"expression": {
															"id": 2950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2944,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2920,
																"src": "7170:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2946,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2867,
																		"src": "7185:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2947,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2920,
																		"src": "7199:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2951,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:18"
													},
													{
														"expression": {
															"id": 2958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2952,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2920,
																"src": "7240:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2954,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2867,
																		"src": "7255:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2955,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2920,
																		"src": "7269:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2959,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:18"
													},
													{
														"expression": {
															"id": 2966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2960,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2920,
																"src": "7310:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2962,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2867,
																		"src": "7325:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2963,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2920,
																		"src": "7339:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2967,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:18"
													},
													{
														"expression": {
															"id": 2974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2968,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2920,
																"src": "7381:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2970,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2867,
																		"src": "7396:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2971,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2920,
																		"src": "7410:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2975,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:18"
													},
													{
														"expression": {
															"id": 2980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2976,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2870,
																"src": "7851:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2977,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2873,
																	"src": "7860:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2978,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2920,
																	"src": "7868:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2981,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:18"
													},
													{
														"expression": {
															"id": 2982,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2870,
															"src": "7896:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2871,
														"id": 2983,
														"nodeType": "Return",
														"src": "7889:13:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2861,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:18",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2863,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "3819:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "3830:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "3841:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:18"
									},
									"returnParameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "3885:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:18"
									},
									"scope": 3652,
									"src": "3803:4116:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3028,
										"nodeType": "Block",
										"src": "8161:192:18",
										"statements": [
											{
												"assignments": [
													3002
												],
												"declarations": [
													{
														"constant": false,
														"id": 3002,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 3028,
														"src": "8171:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3001,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3008,
												"initialValue": {
													"arguments": [
														{
															"id": 3004,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2989,
															"src": "8195:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3005,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2991,
															"src": "8198:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3006,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2993,
															"src": "8201:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3003,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2986,
															3029
														],
														"referencedDeclaration": 2986,
														"src": "8188:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3010,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2996,
																"src": "8244:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2609",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2609",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 3009,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3651,
															"src": "8227:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2609_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 3011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3013,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2989,
																	"src": "8264:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3014,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2991,
																	"src": "8267:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3015,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2993,
																	"src": "8270:11:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3012,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 3017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3025,
												"nodeType": "IfStatement",
												"src": "8223:101:18",
												"trueBody": {
													"id": 3024,
													"nodeType": "Block",
													"src": "8288:36:18",
													"statements": [
														{
															"expression": {
																"id": 3022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3020,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3002,
																	"src": "8302:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 3021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3023,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:18"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3026,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3002,
													"src": "8340:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3000,
												"id": 3027,
												"nodeType": "Return",
												"src": "8333:13:18"
											}
										]
									},
									"documentation": {
										"id": 2987,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:18",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 3029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2989,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3029,
												"src": "8067:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2991,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3029,
												"src": "8078:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2993,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 3029,
												"src": "8089:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2996,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3029,
												"src": "8110:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2609",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2995,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2994,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2609,
														"src": "8110:8:18"
													},
													"referencedDeclaration": 2609,
													"src": "8110:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2609",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:18"
									},
									"returnParameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3029,
												"src": "8152:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:18"
									},
									"scope": 3652,
									"src": "8051:302:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3140,
										"nodeType": "Block",
										"src": "8644:1585:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3037,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3032,
														"src": "8658:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3043,
												"nodeType": "IfStatement",
												"src": "8654:45:18",
												"trueBody": {
													"id": 3042,
													"nodeType": "Block",
													"src": "8666:33:18",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 3040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 3036,
															"id": 3041,
															"nodeType": "Return",
															"src": "8680:8:18"
														}
													]
												}
											},
											{
												"assignments": [
													3045
												],
												"declarations": [
													{
														"constant": false,
														"id": 3045,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 3140,
														"src": "9378:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3044,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3054,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 3046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3048,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3032,
																			"src": "9406:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3047,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3308,
																			3343
																		],
																		"referencedDeclaration": 3308,
																		"src": "9401:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3052,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:18"
											},
											{
												"id": 3139,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:18",
												"statements": [
													{
														"expression": {
															"id": 3064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3055,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3045,
																"src": "9839:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3056,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3045,
																				"src": "9849:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3059,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3057,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3032,
																					"src": "9858:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3058,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3045,
																					"src": "9862:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3061,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3065,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:18"
													},
													{
														"expression": {
															"id": 3075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3066,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3045,
																"src": "9888:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3067,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3045,
																				"src": "9898:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3068,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3032,
																					"src": "9907:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3069,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3045,
																					"src": "9911:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3072,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3076,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:18"
													},
													{
														"expression": {
															"id": 3086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3077,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3045,
																"src": "9937:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3078,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3045,
																				"src": "9947:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3081,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3079,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3032,
																					"src": "9956:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3080,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3045,
																					"src": "9960:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3083,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3087,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:18"
													},
													{
														"expression": {
															"id": 3097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3088,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3045,
																"src": "9986:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3089,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3045,
																				"src": "9996:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3090,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3032,
																					"src": "10005:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3091,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3045,
																					"src": "10009:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3094,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3098,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:18"
													},
													{
														"expression": {
															"id": 3108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3099,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3045,
																"src": "10035:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3100,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3045,
																				"src": "10045:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3101,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3032,
																					"src": "10054:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3102,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3045,
																					"src": "10058:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3105,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3109,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:18"
													},
													{
														"expression": {
															"id": 3119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3110,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3045,
																"src": "10084:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3111,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3045,
																				"src": "10094:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3114,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3112,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3032,
																					"src": "10103:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3113,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3045,
																					"src": "10107:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3116,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3120,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:18"
													},
													{
														"expression": {
															"id": 3130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3121,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3045,
																"src": "10133:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3122,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3045,
																				"src": "10143:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3125,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3123,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3032,
																					"src": "10152:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3124,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3045,
																					"src": "10156:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3127,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3131,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:18"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 3133,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3045,
																	"src": "10193:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3134,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3032,
																		"src": "10201:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3135,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3045,
																		"src": "10205:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3132,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "10189:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3036,
														"id": 3138,
														"nodeType": "Return",
														"src": "10182:30:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3030,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:18",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 3141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3032,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3141,
												"src": "8601:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:18"
									},
									"returnParameters": {
										"id": 3036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3141,
												"src": "8635:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:18"
									},
									"scope": 3652,
									"src": "8587:1642:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3175,
										"nodeType": "Block",
										"src": "10405:164:18",
										"statements": [
											{
												"id": 3174,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:18",
												"statements": [
													{
														"assignments": [
															3153
														],
														"declarations": [
															{
																"constant": false,
																"id": 3153,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:18",
																"nodeType": "VariableDeclaration",
																"scope": 3174,
																"src": "10439:14:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3152,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3157,
														"initialValue": {
															"arguments": [
																{
																	"id": 3155,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3144,
																	"src": "10461:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3154,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3141,
																	3176
																],
																"referencedDeclaration": 3141,
																"src": "10456:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:18"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3158,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3153,
																"src": "10484:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3160,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3147,
																						"src": "10511:8:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2609",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2609",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3159,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3651,
																					"src": "10494:16:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2609_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3164,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3162,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3153,
																						"src": "10524:6:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 3163,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3153,
																						"src": "10533:6:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3165,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3144,
																					"src": "10542:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:18",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3171,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3151,
														"id": 3173,
														"nodeType": "Return",
														"src": "10477:75:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3142,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:18",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 3176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3144,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3176,
												"src": "10343:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3147,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3176,
												"src": "10354:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2609",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3146,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3145,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2609,
														"src": "10354:8:18"
													},
													"referencedDeclaration": 2609,
													"src": "10354:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2609",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:18"
									},
									"returnParameters": {
										"id": 3151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3176,
												"src": "10396:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:18"
									},
									"scope": 3652,
									"src": "10329:240:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3307,
										"nodeType": "Block",
										"src": "10760:922:18",
										"statements": [
											{
												"assignments": [
													3185
												],
												"declarations": [
													{
														"constant": false,
														"id": 3185,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 3307,
														"src": "10770:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3184,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3187,
												"initialValue": {
													"hexValue": "30",
													"id": 3186,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:18",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:18"
											},
											{
												"id": 3304,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3188,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3179,
																	"src": "10826:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3202,
														"nodeType": "IfStatement",
														"src": "10822:99:18",
														"trueBody": {
															"id": 3201,
															"nodeType": "Block",
															"src": "10844:77:18",
															"statements": [
																{
																	"expression": {
																		"id": 3195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3193,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3179,
																			"src": "10862:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3196,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:18"
																},
																{
																	"expression": {
																		"id": 3199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3197,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3185,
																			"src": "10893:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3200,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3203,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3179,
																	"src": "10938:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3217,
														"nodeType": "IfStatement",
														"src": "10934:96:18",
														"trueBody": {
															"id": 3216,
															"nodeType": "Block",
															"src": "10955:75:18",
															"statements": [
																{
																	"expression": {
																		"id": 3210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3208,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3179,
																			"src": "10973:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3211,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:18"
																},
																{
																	"expression": {
																		"id": 3214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3212,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3185,
																			"src": "11003:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3215,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3218,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3179,
																	"src": "11047:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3232,
														"nodeType": "IfStatement",
														"src": "11043:96:18",
														"trueBody": {
															"id": 3231,
															"nodeType": "Block",
															"src": "11064:75:18",
															"statements": [
																{
																	"expression": {
																		"id": 3225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3223,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3179,
																			"src": "11082:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3226,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:18"
																},
																{
																	"expression": {
																		"id": 3229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3227,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3185,
																			"src": "11112:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3230,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3233,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3179,
																	"src": "11156:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3247,
														"nodeType": "IfStatement",
														"src": "11152:96:18",
														"trueBody": {
															"id": 3246,
															"nodeType": "Block",
															"src": "11173:75:18",
															"statements": [
																{
																	"expression": {
																		"id": 3240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3238,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3179,
																			"src": "11191:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3241,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:18"
																},
																{
																	"expression": {
																		"id": 3244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3242,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3185,
																			"src": "11221:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3245,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3248,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3179,
																	"src": "11265:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3262,
														"nodeType": "IfStatement",
														"src": "11261:93:18",
														"trueBody": {
															"id": 3261,
															"nodeType": "Block",
															"src": "11281:73:18",
															"statements": [
																{
																	"expression": {
																		"id": 3255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3253,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3179,
																			"src": "11299:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3256,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:18"
																},
																{
																	"expression": {
																		"id": 3259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3257,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3185,
																			"src": "11328:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3260,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3263,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3179,
																	"src": "11371:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3277,
														"nodeType": "IfStatement",
														"src": "11367:93:18",
														"trueBody": {
															"id": 3276,
															"nodeType": "Block",
															"src": "11387:73:18",
															"statements": [
																{
																	"expression": {
																		"id": 3270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3268,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3179,
																			"src": "11405:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3271,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:18"
																},
																{
																	"expression": {
																		"id": 3274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3272,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3185,
																			"src": "11434:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3275,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3278,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3179,
																	"src": "11477:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3292,
														"nodeType": "IfStatement",
														"src": "11473:93:18",
														"trueBody": {
															"id": 3291,
															"nodeType": "Block",
															"src": "11493:73:18",
															"statements": [
																{
																	"expression": {
																		"id": 3285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3283,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3179,
																			"src": "11511:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3286,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:18"
																},
																{
																	"expression": {
																		"id": 3289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3287,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3185,
																			"src": "11540:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3290,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3293,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3179,
																	"src": "11583:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3303,
														"nodeType": "IfStatement",
														"src": "11579:64:18",
														"trueBody": {
															"id": 3302,
															"nodeType": "Block",
															"src": "11599:44:18",
															"statements": [
																{
																	"expression": {
																		"id": 3300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3298,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3185,
																			"src": "11617:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3301,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:18"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3305,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3185,
													"src": "11669:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3183,
												"id": 3306,
												"nodeType": "Return",
												"src": "11662:13:18"
											}
										]
									},
									"documentation": {
										"id": 3177,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:18",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3308,
												"src": "10713:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:18"
									},
									"returnParameters": {
										"id": 3183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3308,
												"src": "10751:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:18"
									},
									"scope": 3652,
									"src": "10699:983:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3342,
										"nodeType": "Block",
										"src": "11915:168:18",
										"statements": [
											{
												"id": 3341,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:18",
												"statements": [
													{
														"assignments": [
															3320
														],
														"declarations": [
															{
																"constant": false,
																"id": 3320,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:18",
																"nodeType": "VariableDeclaration",
																"scope": 3341,
																"src": "11949:14:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3319,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3324,
														"initialValue": {
															"arguments": [
																{
																	"id": 3322,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3311,
																	"src": "11971:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3321,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3308,
																	3343
																],
																"referencedDeclaration": 3308,
																"src": "11966:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:18"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3325,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3320,
																"src": "11998:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3327,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3314,
																						"src": "12025:8:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2609",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2609",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3326,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3651,
																					"src": "12008:16:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2609_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3333,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3331,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3329,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3330,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3320,
																						"src": "12043:6:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3332,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3311,
																					"src": "12052:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:18",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3338,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3318,
														"id": 3340,
														"nodeType": "Return",
														"src": "11991:75:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3309,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:18",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3311,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3343,
												"src": "11849:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3314,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3343,
												"src": "11864:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2609",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3313,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3312,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2609,
														"src": "11864:8:18"
													},
													"referencedDeclaration": 2609,
													"src": "11864:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2609",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:18"
									},
									"returnParameters": {
										"id": 3318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3343,
												"src": "11906:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:18"
									},
									"scope": 3652,
									"src": "11835:248:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3471,
										"nodeType": "Block",
										"src": "12276:854:18",
										"statements": [
											{
												"assignments": [
													3352
												],
												"declarations": [
													{
														"constant": false,
														"id": 3352,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 3471,
														"src": "12286:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3351,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3354,
												"initialValue": {
													"hexValue": "30",
													"id": 3353,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:18",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:18"
											},
											{
												"id": 3468,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3355,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3346,
																"src": "12342:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3371,
														"nodeType": "IfStatement",
														"src": "12338:103:18",
														"trueBody": {
															"id": 3370,
															"nodeType": "Block",
															"src": "12361:80:18",
															"statements": [
																{
																	"expression": {
																		"id": 3364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3360,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3346,
																			"src": "12379:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3361,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3362,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3365,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:18"
																},
																{
																	"expression": {
																		"id": 3368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3366,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3352,
																			"src": "12414:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3369,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3372,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3346,
																"src": "12458:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3388,
														"nodeType": "IfStatement",
														"src": "12454:103:18",
														"trueBody": {
															"id": 3387,
															"nodeType": "Block",
															"src": "12477:80:18",
															"statements": [
																{
																	"expression": {
																		"id": 3381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3377,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3346,
																			"src": "12495:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3382,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:18"
																},
																{
																	"expression": {
																		"id": 3385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3383,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3352,
																			"src": "12530:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3386,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3389,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3346,
																"src": "12574:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3405,
														"nodeType": "IfStatement",
														"src": "12570:103:18",
														"trueBody": {
															"id": 3404,
															"nodeType": "Block",
															"src": "12593:80:18",
															"statements": [
																{
																	"expression": {
																		"id": 3398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3394,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3346,
																			"src": "12611:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3399,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:18"
																},
																{
																	"expression": {
																		"id": 3402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3400,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3352,
																			"src": "12646:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3403,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3406,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3346,
																"src": "12690:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3422,
														"nodeType": "IfStatement",
														"src": "12686:100:18",
														"trueBody": {
															"id": 3421,
															"nodeType": "Block",
															"src": "12708:78:18",
															"statements": [
																{
																	"expression": {
																		"id": 3415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3411,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3346,
																			"src": "12726:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3412,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3413,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3416,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:18"
																},
																{
																	"expression": {
																		"id": 3419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3417,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3352,
																			"src": "12760:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3420,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3423,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3346,
																"src": "12803:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3439,
														"nodeType": "IfStatement",
														"src": "12799:100:18",
														"trueBody": {
															"id": 3438,
															"nodeType": "Block",
															"src": "12821:78:18",
															"statements": [
																{
																	"expression": {
																		"id": 3432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3428,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3346,
																			"src": "12839:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3433,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:18"
																},
																{
																	"expression": {
																		"id": 3436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3434,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3352,
																			"src": "12873:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3437,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3440,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3346,
																"src": "12916:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3456,
														"nodeType": "IfStatement",
														"src": "12912:100:18",
														"trueBody": {
															"id": 3455,
															"nodeType": "Block",
															"src": "12934:78:18",
															"statements": [
																{
																	"expression": {
																		"id": 3449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3346,
																			"src": "12952:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3450,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:18"
																},
																{
																	"expression": {
																		"id": 3453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3451,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3352,
																			"src": "12986:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3454,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3457,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3346,
																"src": "13029:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3467,
														"nodeType": "IfStatement",
														"src": "13025:66:18",
														"trueBody": {
															"id": 3466,
															"nodeType": "Block",
															"src": "13047:44:18",
															"statements": [
																{
																	"expression": {
																		"id": 3464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3462,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3352,
																			"src": "13065:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3465,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:18"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3469,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3352,
													"src": "13117:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3350,
												"id": 3470,
												"nodeType": "Return",
												"src": "13110:13:18"
											}
										]
									},
									"documentation": {
										"id": 3344,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:18",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3472,
												"src": "12229:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:18"
									},
									"returnParameters": {
										"id": 3350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3472,
												"src": "12267:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:18"
									},
									"scope": 3652,
									"src": "12214:916:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3506,
										"nodeType": "Block",
										"src": "13365:170:18",
										"statements": [
											{
												"id": 3505,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:18",
												"statements": [
													{
														"assignments": [
															3484
														],
														"declarations": [
															{
																"constant": false,
																"id": 3484,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:18",
																"nodeType": "VariableDeclaration",
																"scope": 3505,
																"src": "13399:14:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3483,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3488,
														"initialValue": {
															"arguments": [
																{
																	"id": 3486,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3475,
																	"src": "13422:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3485,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3472,
																	3507
																],
																"referencedDeclaration": 3472,
																"src": "13416:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:18"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3489,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3484,
																"src": "13449:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3491,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3478,
																						"src": "13476:8:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2609",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2609",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3490,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3651,
																					"src": "13459:16:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2609_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3492,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3497,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3495,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3493,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3494,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3484,
																						"src": "13495:6:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3496,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3475,
																					"src": "13504:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:18",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3502,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3482,
														"id": 3504,
														"nodeType": "Return",
														"src": "13442:76:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3473,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:18",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3475,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3507,
												"src": "13299:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3478,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3507,
												"src": "13314:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2609",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3477,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3476,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2609,
														"src": "13314:8:18"
													},
													"referencedDeclaration": 2609,
													"src": "13314:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2609",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:18"
									},
									"returnParameters": {
										"id": 3482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3507,
												"src": "13356:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:18"
									},
									"scope": 3652,
									"src": "13284:251:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3593,
										"nodeType": "Block",
										"src": "13855:600:18",
										"statements": [
											{
												"assignments": [
													3516
												],
												"declarations": [
													{
														"constant": false,
														"id": 3516,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 3593,
														"src": "13865:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3515,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3518,
												"initialValue": {
													"hexValue": "30",
													"id": 3517,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:18",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:18"
											},
											{
												"id": 3590,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3519,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3510,
																	"src": "13921:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3533,
														"nodeType": "IfStatement",
														"src": "13917:98:18",
														"trueBody": {
															"id": 3532,
															"nodeType": "Block",
															"src": "13939:76:18",
															"statements": [
																{
																	"expression": {
																		"id": 3526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3524,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3510,
																			"src": "13957:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3527,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:18"
																},
																{
																	"expression": {
																		"id": 3530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3528,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3516,
																			"src": "13988:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3531,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3534,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3510,
																	"src": "14032:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3548,
														"nodeType": "IfStatement",
														"src": "14028:95:18",
														"trueBody": {
															"id": 3547,
															"nodeType": "Block",
															"src": "14049:74:18",
															"statements": [
																{
																	"expression": {
																		"id": 3541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3539,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3510,
																			"src": "14067:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3542,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:18"
																},
																{
																	"expression": {
																		"id": 3545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3543,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3516,
																			"src": "14097:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3546,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3549,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3510,
																	"src": "14140:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3563,
														"nodeType": "IfStatement",
														"src": "14136:95:18",
														"trueBody": {
															"id": 3562,
															"nodeType": "Block",
															"src": "14157:74:18",
															"statements": [
																{
																	"expression": {
																		"id": 3556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3554,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3510,
																			"src": "14175:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3557,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:18"
																},
																{
																	"expression": {
																		"id": 3560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3558,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3516,
																			"src": "14205:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3561,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3564,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3510,
																	"src": "14248:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3578,
														"nodeType": "IfStatement",
														"src": "14244:95:18",
														"trueBody": {
															"id": 3577,
															"nodeType": "Block",
															"src": "14265:74:18",
															"statements": [
																{
																	"expression": {
																		"id": 3571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3569,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3510,
																			"src": "14283:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3572,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:18"
																},
																{
																	"expression": {
																		"id": 3575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3573,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3516,
																			"src": "14313:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3576,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3579,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3510,
																	"src": "14356:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3589,
														"nodeType": "IfStatement",
														"src": "14352:64:18",
														"trueBody": {
															"id": 3588,
															"nodeType": "Block",
															"src": "14372:44:18",
															"statements": [
																{
																	"expression": {
																		"id": 3586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3584,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3516,
																			"src": "14390:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3587,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:18"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3591,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3516,
													"src": "14442:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3514,
												"id": 3592,
												"nodeType": "Return",
												"src": "14435:13:18"
											}
										]
									},
									"documentation": {
										"id": 3508,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:18",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3510,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3594,
												"src": "13808:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:18"
									},
									"returnParameters": {
										"id": 3514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3594,
												"src": "13846:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:18"
									},
									"scope": 3652,
									"src": "13792:663:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3631,
										"nodeType": "Block",
										"src": "14692:177:18",
										"statements": [
											{
												"id": 3630,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:18",
												"statements": [
													{
														"assignments": [
															3606
														],
														"declarations": [
															{
																"constant": false,
																"id": 3606,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:18",
																"nodeType": "VariableDeclaration",
																"scope": 3630,
																"src": "14726:14:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3605,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3610,
														"initialValue": {
															"arguments": [
																{
																	"id": 3608,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3597,
																	"src": "14750:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3607,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3594,
																	3632
																],
																"referencedDeclaration": 3594,
																"src": "14743:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:18"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3611,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3606,
																"src": "14777:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3613,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3600,
																						"src": "14804:8:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2609",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2609",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3612,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3651,
																					"src": "14787:16:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2609_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3622,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3620,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3615,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3618,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3616,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3606,
																									"src": "14823:6:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3617,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3619,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3621,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3597,
																					"src": "14838:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:18",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3627,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3604,
														"id": 3629,
														"nodeType": "Return",
														"src": "14770:82:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3595,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:18",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3597,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3632,
												"src": "14626:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3600,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3632,
												"src": "14641:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2609",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3599,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3598,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2609,
														"src": "14641:8:18"
													},
													"referencedDeclaration": 2609,
													"src": "14641:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2609",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:18"
									},
									"returnParameters": {
										"id": 3604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3632,
												"src": "14683:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:18"
									},
									"scope": 3652,
									"src": "14610:259:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3650,
										"nodeType": "Block",
										"src": "15067:48:18",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3643,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3636,
																	"src": "15090:8:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2609",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2609",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3641,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:18",
																	"typeDescriptions": {}
																}
															},
															"id": 3644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3640,
												"id": 3649,
												"nodeType": "Return",
												"src": "15077:31:18"
											}
										]
									},
									"documentation": {
										"id": 3633,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:18",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3636,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3651,
												"src": "15019:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2609",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3634,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2609,
														"src": "15019:8:18"
													},
													"referencedDeclaration": 2609,
													"src": "15019:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2609",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:18"
									},
									"returnParameters": {
										"id": 3640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3651,
												"src": "15061:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3638,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:18"
									},
									"scope": 3652,
									"src": "14993:122:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3653,
							"src": "203:14914:18",
							"usedErrors": [
								2604
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:18"
				},
				"id": 18
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3757
						]
					},
					"id": 3758,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3654,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3655,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:19",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3757,
							"linearizedBaseContracts": [
								3757
							],
							"name": "SignedMath",
							"nameLocation": "224:10:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3672,
										"nodeType": "Block",
										"src": "376:37:19",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3665,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3658,
															"src": "393:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3666,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3660,
															"src": "397:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3669,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3660,
														"src": "405:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:19",
													"trueExpression": {
														"id": 3668,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3658,
														"src": "401:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3664,
												"id": 3671,
												"nodeType": "Return",
												"src": "386:20:19"
											}
										]
									},
									"documentation": {
										"id": 3656,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:19",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3658,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3673,
												"src": "325:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3657,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3660,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3673,
												"src": "335:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3659,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:19"
									},
									"returnParameters": {
										"id": 3664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3673,
												"src": "368:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3662,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:19"
									},
									"scope": 3757,
									"src": "312:101:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3690,
										"nodeType": "Block",
										"src": "555:37:19",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3683,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3676,
															"src": "572:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3684,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3678,
															"src": "576:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3687,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3678,
														"src": "584:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:19",
													"trueExpression": {
														"id": 3686,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3676,
														"src": "580:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3682,
												"id": 3689,
												"nodeType": "Return",
												"src": "565:20:19"
											}
										]
									},
									"documentation": {
										"id": 3674,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:19",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3676,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3691,
												"src": "504:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3675,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3678,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3691,
												"src": "514:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3677,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:19"
									},
									"returnParameters": {
										"id": 3682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3691,
												"src": "547:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3680,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:19"
									},
									"scope": 3757,
									"src": "491:101:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3734,
										"nodeType": "Block",
										"src": "797:162:19",
										"statements": [
											{
												"assignments": [
													3702
												],
												"declarations": [
													{
														"constant": false,
														"id": 3702,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:19",
														"nodeType": "VariableDeclaration",
														"scope": 3734,
														"src": "859:8:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3701,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3715,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3703,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3694,
																	"src": "871:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3704,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3696,
																	"src": "875:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3706,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3707,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3694,
																				"src": "882:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3708,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3696,
																				"src": "886:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3710,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3713,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:19"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3716,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3702,
														"src": "911:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3721,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3702,
																						"src": "931:1:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3720,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3719,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:19",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3722,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:19",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3717,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:19",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3726,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3694,
																				"src": "945:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3727,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3696,
																				"src": "949:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3729,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3731,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3700,
												"id": 3733,
												"nodeType": "Return",
												"src": "904:48:19"
											}
										]
									},
									"documentation": {
										"id": 3692,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:19",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3694,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3735,
												"src": "746:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3693,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3696,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3735,
												"src": "756:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3695,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:19"
									},
									"returnParameters": {
										"id": 3700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3735,
												"src": "789:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3698,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:19"
									},
									"scope": 3757,
									"src": "729:230:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3755,
										"nodeType": "Block",
										"src": "1103:158:19",
										"statements": [
											{
												"id": 3754,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:19",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3745,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3738,
																			"src": "1228:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:19",
																		"subExpression": {
																			"id": 3749,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3738,
																			"src": "1242:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:19",
																	"trueExpression": {
																		"id": 3748,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3738,
																		"src": "1237:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3743,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:19",
																	"typeDescriptions": {}
																}
															},
															"id": 3752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3742,
														"id": 3753,
														"nodeType": "Return",
														"src": "1213:31:19"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3736,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:19",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3738,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3756,
												"src": "1061:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3737,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:19"
									},
									"returnParameters": {
										"id": 3742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3756,
												"src": "1094:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:19"
									},
									"scope": 3757,
									"src": "1048:213:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3758,
							"src": "216:1047:19",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:19"
				},
				"id": 19
			},
			"@trt-utils/TRTStrings.sol": {
				"ast": {
					"absolutePath": "@trt-utils/TRTStrings.sol",
					"exportedSymbols": {
						"TRTStrings": [
							3793
						]
					},
					"id": 3794,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3759,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TRTStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 3793,
							"linearizedBaseContracts": [
								3793
							],
							"name": "TRTStrings",
							"nameLocation": "69:10:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3791,
										"nodeType": "Block",
										"src": "236:145:20",
										"statements": [
											{
												"assignments": [
													3769
												],
												"declarations": [
													{
														"constant": false,
														"id": 3769,
														"mutability": "mutable",
														"name": "charByte",
														"nameLocation": "260:8:20",
														"nodeType": "VariableDeclaration",
														"scope": 3791,
														"src": "247:21:20",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3768,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "247:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3774,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 3772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "281:1:20",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 3771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "271:9:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 3770,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "275:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 3773,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "271:12:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "247:36:20"
											},
											{
												"expression": {
													"id": 3784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3775,
															"name": "charByte",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3769,
															"src": "294:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3777,
														"indexExpression": {
															"id": 3776,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3763,
															"src": "303:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "294:15:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"arguments": [
																{
																	"id": 3780,
																	"name": "_originString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3761,
																	"src": "318:13:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "312:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 3778,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "312:5:20",
																	"typeDescriptions": {}
																}
															},
															"id": 3781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "312:20:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3783,
														"indexExpression": {
															"id": 3782,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3763,
															"src": "333:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "312:27:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"src": "294:45:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3785,
												"nodeType": "ExpressionStatement",
												"src": "294:45:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3788,
															"name": "charByte",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3769,
															"src": "364:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3787,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "357:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 3786,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "357:6:20",
															"typeDescriptions": {}
														}
													},
													"id": 3789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "357:16:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3767,
												"id": 3790,
												"nodeType": "Return",
												"src": "350:23:20"
											}
										]
									},
									"id": 3792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCharByIndex",
									"nameLocation": "96:14:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3761,
												"mutability": "mutable",
												"name": "_originString",
												"nameLocation": "125:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3792,
												"src": "111:27:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3760,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "111:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3763,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "146:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 3792,
												"src": "140:11:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3762,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "140:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "110:42:20"
									},
									"returnParameters": {
										"id": 3767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3766,
												"mutability": "mutable",
												"name": "_charByIndex",
												"nameLocation": "217:12:20",
												"nodeType": "VariableDeclaration",
												"scope": 3792,
												"src": "203:26:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3765,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "203:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "202:28:20"
									},
									"scope": 3793,
									"src": "87:294:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3794,
							"src": "61:323:20",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:351:20"
				},
				"id": 20
			},
			"contracts/MiningContract.sol": {
				"ast": {
					"absolutePath": "contracts/MiningContract.sol",
					"exportedSymbols": {
						"Context": [
							1182
						],
						"ECDSA": [
							2297
						],
						"EIP712": [
							2524
						],
						"ERC20": [
							824
						],
						"ERC20Pausable": [
							936
						],
						"ERC20Permit": [
							1090
						],
						"IERC20": [
							902
						],
						"IERC20Errors": [
							214
						],
						"IERC20Metadata": [
							1116
						],
						"IERC20Permit": [
							1152
						],
						"Math": [
							3652
						],
						"MiningContract": [
							4073
						],
						"Nonces": [
							1250
						],
						"Ownable": [
							147
						],
						"Pausable": [
							1367
						],
						"SignedMath": [
							3757
						],
						"StakingContract": [
							4200
						],
						"Strings": [
							1949
						],
						"TRTStrings": [
							3793
						]
					},
					"id": 4074,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3795,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:21"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 3796,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4074,
							"sourceUnit": 825,
							"src": "61:55:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"id": 3797,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4074,
							"sourceUnit": 937,
							"src": "118:74:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3798,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4074,
							"sourceUnit": 148,
							"src": "194:52:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
							"id": 3799,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4074,
							"sourceUnit": 1091,
							"src": "248:72:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 3800,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4074,
							"sourceUnit": 3653,
							"src": "322:53:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 3801,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4074,
							"sourceUnit": 1950,
							"src": "377:51:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@trt-utils/TRTStrings.sol",
							"file": "../@trt-utils/TRTStrings.sol",
							"id": 3802,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4074,
							"sourceUnit": 3794,
							"src": "432:38:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/MiningContract.sol",
							"file": "contracts/MiningContract.sol",
							"id": 3803,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4074,
							"sourceUnit": 4074,
							"src": "472:38:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/StakingContract.sol",
							"file": "contracts/StakingContract.sol",
							"id": 3804,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4074,
							"sourceUnit": 4201,
							"src": "512:39:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MiningContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 4073,
							"linearizedBaseContracts": [
								4073
							],
							"name": "MiningContract",
							"nameLocation": "564:14:21",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e8315742",
									"id": 3806,
									"mutability": "mutable",
									"name": "maxTokens",
									"nameLocation": "628:9:21",
									"nodeType": "VariableDeclaration",
									"scope": 4073,
									"src": "613:24:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3805,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "613:7:21",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 3808,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "659:11:21",
									"nodeType": "VariableDeclaration",
									"scope": 4073,
									"src": "644:26:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3807,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "644:7:21",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 3810,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "691:6:21",
									"nodeType": "VariableDeclaration",
									"scope": 4073,
									"src": "677:20:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3809,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "677:6:21",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 3812,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "718:4:21",
									"nodeType": "VariableDeclaration",
									"scope": 4073,
									"src": "704:18:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3811,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "704:6:21",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3ba0b9a9",
									"id": 3814,
									"mutability": "mutable",
									"name": "exchangeRate",
									"nameLocation": "742:12:21",
									"nodeType": "VariableDeclaration",
									"scope": 4073,
									"src": "729:25:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 3813,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "729:5:21",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "57e871e7",
									"id": 3816,
									"mutability": "mutable",
									"name": "blockNumber",
									"nameLocation": "806:11:21",
									"nodeType": "VariableDeclaration",
									"scope": 4073,
									"src": "791:26:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3815,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "791:7:21",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f22a195e",
									"id": 3818,
									"mutability": "mutable",
									"name": "blockHash",
									"nameLocation": "839:9:21",
									"nodeType": "VariableDeclaration",
									"scope": 4073,
									"src": "824:24:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3817,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "824:7:21",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3821,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "870:10:21",
									"nodeType": "VariableDeclaration",
									"scope": 4073,
									"src": "855:29:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 3819,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "855:5:21",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 3820,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "883:1:21",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "6a49f979",
									"id": 3823,
									"mutability": "mutable",
									"name": "miningTask",
									"nameLocation": "907:10:21",
									"nodeType": "VariableDeclaration",
									"scope": 4073,
									"src": "893:24:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3822,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "893:6:21",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f82900b1",
									"id": 3825,
									"mutability": "mutable",
									"name": "miningRewards",
									"nameLocation": "939:13:21",
									"nodeType": "VariableDeclaration",
									"scope": 4073,
									"src": "924:28:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3824,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "924:7:21",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3828,
									"mutability": "mutable",
									"name": "PREFIXLENGTH",
									"nameLocation": "967:12:21",
									"nodeType": "VariableDeclaration",
									"scope": 4073,
									"src": "961:22:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 3826,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "961:5:21",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 3827,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "982:1:21",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3831,
									"mutability": "mutable",
									"name": "PREFIXHASHVALUE",
									"nameLocation": "997:15:21",
									"nodeType": "VariableDeclaration",
									"scope": 4073,
									"src": "990:29:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes1",
										"typeString": "bytes1"
									},
									"typeName": {
										"id": 3829,
										"name": "bytes1",
										"nodeType": "ElementaryTypeName",
										"src": "990:6:21",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes1",
											"typeString": "bytes1"
										}
									},
									"value": {
										"hexValue": "30783930",
										"id": 3830,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1015:4:21",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_144_by_1",
											"typeString": "int_const 144"
										},
										"value": "0x90"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "9f4da1eb02e98b4ab1d9b713f225d0f993b2222a21852024e9d90204be64706a",
									"id": 3839,
									"name": "MiningRunning",
									"nameLocation": "1034:13:21",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3833,
												"indexed": true,
												"mutability": "mutable",
												"name": "minedBlockNumber",
												"nameLocation": "1074:16:21",
												"nodeType": "VariableDeclaration",
												"scope": 3839,
												"src": "1058:32:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1058:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3835,
												"indexed": true,
												"mutability": "mutable",
												"name": "blockHash",
												"nameLocation": "1117:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 3839,
												"src": "1101:25:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3834,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1101:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3837,
												"indexed": true,
												"mutability": "mutable",
												"name": "miningTask",
												"nameLocation": "1152:10:21",
												"nodeType": "VariableDeclaration",
												"scope": 3839,
												"src": "1137:25:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3836,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1137:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1047:122:21"
									},
									"src": "1028:142:21"
								},
								{
									"anonymous": false,
									"eventSelector": "5a9ec13c12ca9563a7b3108125f74c57ed388bb313394ea50f7e4a71b01497c2",
									"id": 3847,
									"name": "Mined",
									"nameLocation": "1188:5:21",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3841,
												"indexed": true,
												"mutability": "mutable",
												"name": "miner",
												"nameLocation": "1220:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 3847,
												"src": "1204:21:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3843,
												"indexed": true,
												"mutability": "mutable",
												"name": "minedBlockNumber",
												"nameLocation": "1252:16:21",
												"nodeType": "VariableDeclaration",
												"scope": 3847,
												"src": "1236:32:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1236:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3845,
												"indexed": true,
												"mutability": "mutable",
												"name": "rewards",
												"nameLocation": "1295:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 3847,
												"src": "1279:23:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1193:116:21"
									},
									"src": "1182:128:21"
								},
								{
									"body": {
										"id": 3908,
										"nodeType": "Block",
										"src": "1620:411:21",
										"statements": [
											{
												"expression": {
													"id": 3863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3860,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3816,
														"src": "1631:11:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3861,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1645:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1651:6:21",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "1645:12:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1631:26:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3864,
												"nodeType": "ExpressionStatement",
												"src": "1631:26:21"
											},
											{
												"expression": {
													"id": 3869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3865,
														"name": "blockHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3818,
														"src": "1668:9:21",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3867,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3816,
																"src": "1690:11:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3866,
															"name": "blockhash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967291,
															"src": "1680:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																"typeString": "function (uint256) view returns (bytes32)"
															}
														},
														"id": 3868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1680:22:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1668:34:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3870,
												"nodeType": "ExpressionStatement",
												"src": "1668:34:21"
											},
											{
												"expression": {
													"id": 3873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3871,
														"name": "exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3814,
														"src": "1713:12:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3872,
														"name": "exchRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3849,
														"src": "1728:8:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1713:23:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 3874,
												"nodeType": "ExpressionStatement",
												"src": "1713:23:21"
											},
											{
												"expression": {
													"id": 3877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3875,
														"name": "maxTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3806,
														"src": "1747:9:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3876,
														"name": "maxTok",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3851,
														"src": "1759:6:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1747:18:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3878,
												"nodeType": "ExpressionStatement",
												"src": "1747:18:21"
											},
											{
												"expression": {
													"id": 3881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3879,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3810,
														"src": "1776:6:21",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3880,
														"name": "symb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3853,
														"src": "1785:4:21",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1776:13:21",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3882,
												"nodeType": "ExpressionStatement",
												"src": "1776:13:21"
											},
											{
												"expression": {
													"id": 3885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3883,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3812,
														"src": "1801:4:21",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3884,
														"name": "nameGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3855,
														"src": "1808:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1801:14:21",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3886,
												"nodeType": "ExpressionStatement",
												"src": "1801:14:21"
											},
											{
												"expression": {
													"id": 3889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3887,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3808,
														"src": "1827:11:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3888,
														"name": "totalSup",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3857,
														"src": "1841:8:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1827:22:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3890,
												"nodeType": "ExpressionStatement",
												"src": "1827:22:21"
											},
											{
												"expression": {
													"id": 3894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3891,
														"name": "miningTask",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3823,
														"src": "1860:10:21",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3892,
															"name": "calculateMiningTask",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3987,
															"src": "1873:19:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () view returns (string memory)"
															}
														},
														"id": 3893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1873:21:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1860:34:21",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3895,
												"nodeType": "ExpressionStatement",
												"src": "1860:34:21"
											},
											{
												"expression": {
													"id": 3900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3896,
														"name": "miningRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3825,
														"src": "1907:13:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3898,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3808,
																"src": "1946:11:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3897,
															"name": "calculateMiningRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3927,
															"src": "1923:22:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 3899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1923:35:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1907:51:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3901,
												"nodeType": "ExpressionStatement",
												"src": "1907:51:21"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3903,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3816,
															"src": "1988:11:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3904,
															"name": "blockHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3818,
															"src": "2001:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3905,
															"name": "miningTask",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3823,
															"src": "2012:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 3902,
														"name": "MiningRunning",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3839,
														"src": "1974:13:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,bytes32,string memory)"
														}
													},
													"id": 3906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1974:49:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3907,
												"nodeType": "EmitStatement",
												"src": "1969:54:21"
											}
										]
									},
									"id": 3909,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3849,
												"mutability": "mutable",
												"name": "exchRate",
												"nameLocation": "1491:8:21",
												"nodeType": "VariableDeclaration",
												"scope": 3909,
												"src": "1485:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3848,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1485:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3851,
												"mutability": "mutable",
												"name": "maxTok",
												"nameLocation": "1518:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 3909,
												"src": "1510:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1510:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3853,
												"mutability": "mutable",
												"name": "symb",
												"nameLocation": "1549:4:21",
												"nodeType": "VariableDeclaration",
												"scope": 3909,
												"src": "1535:18:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3852,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1535:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3855,
												"mutability": "mutable",
												"name": "nameGet",
												"nameLocation": "1578:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 3909,
												"src": "1564:21:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3854,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1564:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3857,
												"mutability": "mutable",
												"name": "totalSup",
												"nameLocation": "1604:8:21",
												"nodeType": "VariableDeclaration",
												"scope": 3909,
												"src": "1596:16:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1596:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1474:145:21"
									},
									"returnParameters": {
										"id": 3859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1620:0:21"
									},
									"scope": 4073,
									"src": "1463:568:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3926,
										"nodeType": "Block",
										"src": "2143:98:21",
										"statements": [
											{
												"assignments": [
													3917
												],
												"declarations": [
													{
														"constant": false,
														"id": 3917,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "2162:7:21",
														"nodeType": "VariableDeclaration",
														"scope": 3926,
														"src": "2154:15:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3916,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2154:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3923,
												"initialValue": {
													"arguments": [
														{
															"id": 3920,
															"name": "totalSup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3911,
															"src": "2185:8:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3921,
															"name": "exchangeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3814,
															"src": "2195:12:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"expression": {
															"id": 3918,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3652,
															"src": "2172:4:21",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$3652_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 3919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2177:7:21",
														"memberName": "ceilDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2860,
														"src": "2172:12:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2172:36:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2154:54:21"
											},
											{
												"expression": {
													"id": 3924,
													"name": "rewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3917,
													"src": "2226:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3915,
												"id": 3925,
												"nodeType": "Return",
												"src": "2219:14:21"
											}
										]
									},
									"id": 3927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateMiningRewards",
									"nameLocation": "2048:22:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3911,
												"mutability": "mutable",
												"name": "totalSup",
												"nameLocation": "2079:8:21",
												"nodeType": "VariableDeclaration",
												"scope": 3927,
												"src": "2071:16:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2070:18:21"
									},
									"returnParameters": {
										"id": 3915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3927,
												"src": "2129:7:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:9:21"
									},
									"scope": 4073,
									"src": "2039:202:21",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3986,
										"nodeType": "Block",
										"src": "2364:707:21",
										"statements": [
											{
												"assignments": [
													3933
												],
												"declarations": [
													{
														"constant": false,
														"id": 3933,
														"mutability": "mutable",
														"name": "newMaxTokens",
														"nameLocation": "2383:12:21",
														"nodeType": "VariableDeclaration",
														"scope": 3986,
														"src": "2375:20:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3932,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2375:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3937,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3934,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3808,
														"src": "2398:11:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 3935,
														"name": "miningRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3825,
														"src": "2412:13:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2398:27:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2375:50:21"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3939,
																"name": "maxTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3806,
																"src": "2444:9:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3940,
																"name": "newMaxTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3933,
																"src": "2457:12:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2444:25:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e",
															"id": 3942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2471:30:21",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7",
																"typeString": "literal_string \"Not enough tokens available.\""
															},
															"value": "Not enough tokens available."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7",
																"typeString": "literal_string \"Not enough tokens available.\""
															}
														],
														"id": 3938,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2436:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2436:66:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3944,
												"nodeType": "ExpressionStatement",
												"src": "2436:66:21"
											},
											{
												"assignments": [
													3946
												],
												"declarations": [
													{
														"constant": false,
														"id": 3946,
														"mutability": "mutable",
														"name": "stringMaxTokens",
														"nameLocation": "2621:15:21",
														"nodeType": "VariableDeclaration",
														"scope": 3986,
														"src": "2607:29:21",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 3945,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2607:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3951,
												"initialValue": {
													"arguments": [
														{
															"id": 3949,
															"name": "maxTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3806,
															"src": "2656:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3947,
															"name": "Strings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1949,
															"src": "2639:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Strings_$1949_$",
																"typeString": "type(library Strings)"
															}
														},
														"id": 3948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2647:8:21",
														"memberName": "toString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1762,
														"src": "2639:16:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														}
													},
													"id": 3950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:27:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2607:59:21"
											},
											{
												"assignments": [
													3953
												],
												"declarations": [
													{
														"constant": false,
														"id": 3953,
														"mutability": "mutable",
														"name": "stringTotalSupply",
														"nameLocation": "2691:17:21",
														"nodeType": "VariableDeclaration",
														"scope": 3986,
														"src": "2677:31:21",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 3952,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2677:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3958,
												"initialValue": {
													"arguments": [
														{
															"id": 3956,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3808,
															"src": "2728:11:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3954,
															"name": "Strings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1949,
															"src": "2711:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Strings_$1949_$",
																"typeString": "type(library Strings)"
															}
														},
														"id": 3955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2719:8:21",
														"memberName": "toString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1762,
														"src": "2711:16:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														}
													},
													"id": 3957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2711:29:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2677:63:21"
											},
											{
												"assignments": [
													3960
												],
												"declarations": [
													{
														"constant": false,
														"id": 3960,
														"mutability": "mutable",
														"name": "stringName",
														"nameLocation": "2765:10:21",
														"nodeType": "VariableDeclaration",
														"scope": 3986,
														"src": "2751:24:21",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 3959,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2751:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3962,
												"initialValue": {
													"id": 3961,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3812,
													"src": "2778:4:21",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2751:31:21"
											},
											{
												"assignments": [
													3964
												],
												"declarations": [
													{
														"constant": false,
														"id": 3964,
														"mutability": "mutable",
														"name": "stringBlockHash",
														"nameLocation": "2807:15:21",
														"nodeType": "VariableDeclaration",
														"scope": 3986,
														"src": "2793:29:21",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 3963,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2793:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3972,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3969,
																	"name": "blockHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3818,
																	"src": "2849:9:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 3967,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2832:3:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2836:12:21",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2832:16:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2832:27:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2825:6:21",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 3965,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2825:6:21",
															"typeDescriptions": {}
														}
													},
													"id": 3971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2825:35:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2793:67:21"
											},
											{
												"assignments": [
													3974
												],
												"declarations": [
													{
														"constant": false,
														"id": 3974,
														"mutability": "mutable",
														"name": "calcTask",
														"nameLocation": "2885:8:21",
														"nodeType": "VariableDeclaration",
														"scope": 3986,
														"src": "2871:22:21",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 3973,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2871:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3983,
												"initialValue": {
													"arguments": [
														{
															"id": 3978,
															"name": "stringName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3960,
															"src": "2924:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 3979,
															"name": "stringMaxTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3946,
															"src": "2949:15:21",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 3980,
															"name": "stringTotalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3953,
															"src": "2979:17:21",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 3981,
															"name": "stringBlockHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3964,
															"src": "3011:15:21",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 3976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2896:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 3975,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "2896:6:21",
																"typeDescriptions": {}
															}
														},
														"id": 3977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2903:6:21",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "2896:13:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 3982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2896:141:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2871:166:21"
											},
											{
												"expression": {
													"id": 3984,
													"name": "calcTask",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3974,
													"src": "3055:8:21",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3931,
												"id": 3985,
												"nodeType": "Return",
												"src": "3048:15:21"
											}
										]
									},
									"id": 3987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateMiningTask",
									"nameLocation": "2258:19:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2277:2:21"
									},
									"returnParameters": {
										"id": 3931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3930,
												"mutability": "mutable",
												"name": "calculatedTask",
												"nameLocation": "2343:14:21",
												"nodeType": "VariableDeclaration",
												"scope": 3987,
												"src": "2329:28:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3929,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2329:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2328:30:21"
									},
									"scope": 4073,
									"src": "2249:822:21",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 4055,
										"nodeType": "Block",
										"src": "3189:568:21",
										"statements": [
											{
												"assignments": [
													3999
												],
												"declarations": [
													{
														"constant": false,
														"id": 3999,
														"mutability": "mutable",
														"name": "mergedTask",
														"nameLocation": "3214:10:21",
														"nodeType": "VariableDeclaration",
														"scope": 4055,
														"src": "3200:24:21",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 3998,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3200:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4006,
												"initialValue": {
													"arguments": [
														{
															"id": 4003,
															"name": "miningTask",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3823,
															"src": "3241:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"id": 4004,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3991,
															"src": "3253:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 4001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3227:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 4000,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3227:6:21",
																"typeDescriptions": {}
															}
														},
														"id": 4002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3234:6:21",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "3227:13:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 4005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3227:32:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3200:59:21"
											},
											{
												"assignments": [
													4008
												],
												"declarations": [
													{
														"constant": false,
														"id": 4008,
														"mutability": "mutable",
														"name": "mergedTaskHash",
														"nameLocation": "3280:14:21",
														"nodeType": "VariableDeclaration",
														"scope": 4055,
														"src": "3272:22:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 4007,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3272:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4015,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 4012,
																	"name": "mergedTask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3999,
																	"src": "3318:10:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 4010,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3307:3:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 4011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3311:6:21",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "3307:10:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 4013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:22:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 4009,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3297:9:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 4014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3297:33:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3272:58:21"
											},
											{
												"body": {
													"id": 4049,
													"nodeType": "Block",
													"src": "3386:323:21",
													"statements": [
														{
															"assignments": [
																4029
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4029,
																	"mutability": "mutable",
																	"name": "prefixHash",
																	"nameLocation": "3484:10:21",
																	"nodeType": "VariableDeclaration",
																	"scope": 4049,
																	"src": "3477:17:21",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	"typeName": {
																		"id": 4028,
																		"name": "bytes1",
																		"nodeType": "ElementaryTypeName",
																		"src": "3477:6:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4033,
															"initialValue": {
																"baseExpression": {
																	"id": 4030,
																	"name": "mergedTaskHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4008,
																	"src": "3497:14:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"id": 4032,
																"indexExpression": {
																	"id": 4031,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4017,
																	"src": "3512:1:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3497:17:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3477:37:21"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 4036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4034,
																	"name": "prefixHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4029,
																	"src": "3539:10:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 4035,
																	"name": "PREFIXHASHVALUE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3831,
																	"src": "3553:15:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "3539:29:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4048,
															"nodeType": "IfStatement",
															"src": "3535:163:21",
															"trueBody": {
																"id": 4047,
																"nodeType": "Block",
																"src": "3570:128:21",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 4038,
																					"name": "miner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3989,
																					"src": "3600:5:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 4039,
																					"name": "blockNumber",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3816,
																					"src": "3607:11:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 4040,
																					"name": "miningRewards",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3825,
																					"src": "3620:13:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 4037,
																				"name": "Mined",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3847,
																				"src": "3594:5:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256)"
																				}
																			},
																			"id": 4041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3594:40:21",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 4042,
																		"nodeType": "EmitStatement",
																		"src": "3589:45:21"
																	},
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "74727565",
																					"id": 4043,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3661:4:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				{
																					"id": 4044,
																					"name": "mergedTaskHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4008,
																					"src": "3667:14:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"id": 4045,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3660:22:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
																				"typeString": "tuple(bool,bytes32)"
																			}
																		},
																		"functionReturnParameters": 3997,
																		"id": 4046,
																		"nodeType": "Return",
																		"src": "3653:29:21"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 4024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4020,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4017,
														"src": "3369:1:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"id": 4023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "323536",
															"id": 4021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3374:3:21",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "256"
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "38",
															"id": 4022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3378:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"src": "3374:5:21",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														}
													},
													"src": "3369:10:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4050,
												"initializationExpression": {
													"assignments": [
														4017
													],
													"declarations": [
														{
															"constant": false,
															"id": 4017,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3362:1:21",
															"nodeType": "VariableDeclaration",
															"scope": 4050,
															"src": "3356:7:21",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 4016,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "3356:5:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 4019,
													"initialValue": {
														"hexValue": "30",
														"id": 4018,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3366:1:21",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3356:11:21"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 4026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3381:3:21",
														"subExpression": {
															"id": 4025,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4017,
															"src": "3381:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 4027,
													"nodeType": "ExpressionStatement",
													"src": "3381:3:21"
												},
												"nodeType": "ForStatement",
												"src": "3351:358:21"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "66616c7365",
															"id": 4051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3727:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"id": 4052,
															"name": "mergedTaskHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4008,
															"src": "3734:14:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 4053,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3726:23:21",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"functionReturnParameters": 3997,
												"id": 4054,
												"nodeType": "Return",
												"src": "3719:30:21"
											}
										]
									},
									"functionSelector": "4fc8a991",
									"id": 4056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mineTokens",
									"nameLocation": "3088:10:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3989,
												"mutability": "mutable",
												"name": "miner",
												"nameLocation": "3107:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 4056,
												"src": "3099:13:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3099:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3991,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "3128:5:21",
												"nodeType": "VariableDeclaration",
												"scope": 4056,
												"src": "3114:19:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3990,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3114:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3098:36:21"
									},
									"returnParameters": {
										"id": 3997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4056,
												"src": "3169:4:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3993,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3169:4:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4056,
												"src": "3175:7:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3995,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3168:15:21"
									},
									"scope": 4073,
									"src": "3079:678:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4063,
										"nodeType": "Block",
										"src": "3817:39:21",
										"statements": [
											{
												"expression": {
													"id": 4061,
													"name": "miningRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3825,
													"src": "3835:13:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4060,
												"id": 4062,
												"nodeType": "Return",
												"src": "3828:20:21"
											}
										]
									},
									"functionSelector": "0572b0cc",
									"id": 4064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewards",
									"nameLocation": "3774:10:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3784:2:21"
									},
									"returnParameters": {
										"id": 4060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4064,
												"src": "3808:7:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:9:21"
									},
									"scope": 4073,
									"src": "3765:91:21",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4071,
										"nodeType": "Block",
										"src": "3924:36:21",
										"statements": [
											{
												"expression": {
													"id": 4069,
													"name": "miningTask",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3823,
													"src": "3942:10:21",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 4068,
												"id": 4070,
												"nodeType": "Return",
												"src": "3935:17:21"
											}
										]
									},
									"functionSelector": "b62a62ec",
									"id": 4072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMiningTask",
									"nameLocation": "3873:13:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3886:2:21"
									},
									"returnParameters": {
										"id": 4068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4072,
												"src": "3910:13:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4066,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3910:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3909:15:21"
									},
									"scope": 4073,
									"src": "3864:96:21",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 4074,
							"src": "555:3408:21",
							"usedErrors": [],
							"usedEvents": [
								3839,
								3847
							]
						}
					],
					"src": "33:3932:21"
				},
				"id": 21
			},
			"contracts/StakingContract.sol": {
				"ast": {
					"absolutePath": "contracts/StakingContract.sol",
					"exportedSymbols": {
						"MiningContract": [
							4073
						],
						"StakingContract": [
							4200
						]
					},
					"id": 4201,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4075,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:22"
						},
						{
							"absolutePath": "contracts/MiningContract.sol",
							"file": "contracts/MiningContract.sol",
							"id": 4076,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4201,
							"sourceUnit": 4074,
							"src": "61:38:22",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StakingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 4200,
							"linearizedBaseContracts": [
								4200
							],
							"name": "StakingContract",
							"nameLocation": "114:15:22",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "bf9befb1",
									"id": 4078,
									"mutability": "mutable",
									"name": "totalStakes",
									"nameLocation": "152:11:22",
									"nodeType": "VariableDeclaration",
									"scope": 4200,
									"src": "137:26:22",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4077,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "137:7:22",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e15561a",
									"id": 4080,
									"mutability": "mutable",
									"name": "totalRewards",
									"nameLocation": "185:12:22",
									"nodeType": "VariableDeclaration",
									"scope": 4200,
									"src": "170:27:22",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4079,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "170:7:22",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9168ae72",
									"id": 4084,
									"mutability": "mutable",
									"name": "stakers",
									"nameLocation": "239:7:22",
									"nodeType": "VariableDeclaration",
									"scope": 4200,
									"src": "204:42:22",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4083,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 4081,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "212:7:22",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "204:27:22",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 4082,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "223:7:22",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 4088,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "288:7:22",
									"nodeType": "VariableDeclaration",
									"scope": 4200,
									"src": "253:42:22",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4087,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 4085,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "261:7:22",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "253:27:22",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 4086,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "272:7:22",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3d42071c",
									"id": 4091,
									"mutability": "mutable",
									"name": "stakersAddresses",
									"nameLocation": "319:16:22",
									"nodeType": "VariableDeclaration",
									"scope": 4200,
									"src": "302:33:22",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 4089,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "302:7:22",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 4090,
										"nodeType": "ArrayTypeName",
										"src": "302:9:22",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 4097,
									"name": "Staked",
									"nameLocation": "365:6:22",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4093,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "388:6:22",
												"nodeType": "VariableDeclaration",
												"scope": 4097,
												"src": "372:22:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "372:7:22",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4095,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "404:6:22",
												"nodeType": "VariableDeclaration",
												"scope": 4097,
												"src": "396:14:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "371:40:22"
									},
									"src": "359:53:22"
								},
								{
									"anonymous": false,
									"eventSelector": "0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75",
									"id": 4103,
									"name": "Unstaked",
									"nameLocation": "424:8:22",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4099,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "449:6:22",
												"nodeType": "VariableDeclaration",
												"scope": 4103,
												"src": "433:22:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:22",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4101,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "465:6:22",
												"nodeType": "VariableDeclaration",
												"scope": 4103,
												"src": "457:14:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:40:22"
									},
									"src": "418:55:22"
								},
								{
									"anonymous": false,
									"eventSelector": "b3b7a071186534c03b40695710096f289fd4ed6c1a374aff0bb648955e4fe563",
									"id": 4109,
									"name": "Rewarded",
									"nameLocation": "485:8:22",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4105,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "510:6:22",
												"nodeType": "VariableDeclaration",
												"scope": 4109,
												"src": "494:22:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:22",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4107,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "526:6:22",
												"nodeType": "VariableDeclaration",
												"scope": 4109,
												"src": "518:14:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:40:22"
									},
									"src": "479:55:22"
								},
								{
									"body": {
										"id": 4112,
										"nodeType": "Block",
										"src": "556:2:22",
										"statements": []
									},
									"id": 4113,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "553:2:22"
									},
									"returnParameters": {
										"id": 4111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "556:0:22"
									},
									"scope": 4200,
									"src": "542:16:22",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4155,
										"nodeType": "Block",
										"src": "661:268:22",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4121,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4117,
																"src": "680:6:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 4122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "689:1:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "680:10:22",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 4124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "692:31:22",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 4120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "672:7:22",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:52:22",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4126,
												"nodeType": "ExpressionStatement",
												"src": "672:52:22"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 4127,
															"name": "stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4084,
															"src": "739:7:22",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 4129,
														"indexExpression": {
															"id": 4128,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4115,
															"src": "747:6:22",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "739:15:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "31",
														"id": 4130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "757:1:22",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "739:19:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4139,
												"nodeType": "IfStatement",
												"src": "735:81:22",
												"trueBody": {
													"id": 4138,
													"nodeType": "Block",
													"src": "760:56:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 4135,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4115,
																		"src": "797:6:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 4132,
																		"name": "stakersAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4091,
																		"src": "775:16:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 4134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "792:4:22",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "775:21:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 4136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "775:29:22",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4137,
															"nodeType": "ExpressionStatement",
															"src": "775:29:22"
														}
													]
												}
											},
											{
												"expression": {
													"id": 4144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4140,
															"name": "stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4084,
															"src": "826:7:22",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 4142,
														"indexExpression": {
															"id": 4141,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4115,
															"src": "834:6:22",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "826:15:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 4143,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4117,
														"src": "845:6:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "826:25:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4145,
												"nodeType": "ExpressionStatement",
												"src": "826:25:22"
											},
											{
												"expression": {
													"id": 4148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4146,
														"name": "totalStakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4078,
														"src": "862:11:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 4147,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4117,
														"src": "877:6:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "862:21:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4149,
												"nodeType": "ExpressionStatement",
												"src": "862:21:22"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4151,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4115,
															"src": "906:6:22",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4152,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4117,
															"src": "914:6:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4150,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4097,
														"src": "899:6:22",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 4153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "899:22:22",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4154,
												"nodeType": "EmitStatement",
												"src": "894:27:22"
											}
										]
									},
									"functionSelector": "adc9772e",
									"id": 4156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "616:5:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4115,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "630:6:22",
												"nodeType": "VariableDeclaration",
												"scope": 4156,
												"src": "622:14:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:22",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4117,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "646:6:22",
												"nodeType": "VariableDeclaration",
												"scope": 4156,
												"src": "638:14:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:32:22"
									},
									"returnParameters": {
										"id": 4119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "661:0:22"
									},
									"scope": 4200,
									"src": "607:322:22",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4198,
										"nodeType": "Block",
										"src": "1051:347:22",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4166,
																"name": "totalStakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4078,
																"src": "1084:11:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 4167,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4160,
																"src": "1099:6:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1084:21:22",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865726520617265206e6f7420656e6f75676820636f696e7320696e20796f7572207374616b696e6720706f6f6c2e",
															"id": 4169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1120:50:22",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67111866d931937286ca54a65005a3e515da8e44535c98b102bab072683691c5",
																"typeString": "literal_string \"There are not enough coins in your staking pool.\""
															},
															"value": "There are not enough coins in your staking pool."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67111866d931937286ca54a65005a3e515da8e44535c98b102bab072683691c5",
																"typeString": "literal_string \"There are not enough coins in your staking pool.\""
															}
														],
														"id": 4165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1062:7:22",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1062:119:22",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4171,
												"nodeType": "ExpressionStatement",
												"src": "1062:119:22"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 4173,
																	"name": "stakers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4084,
																	"src": "1200:7:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 4175,
																"indexExpression": {
																	"id": 4174,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4158,
																	"src": "1208:6:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1200:15:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 4176,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4160,
																"src": "1219:6:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1200:25:22",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e20302e",
															"id": 4178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1227:32:22",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0839195af36ea54dbc20a631264e4e0fc516850571ce306a1e4e2acdc351064e",
																"typeString": "literal_string \"Amount must be greater than 0.\""
															},
															"value": "Amount must be greater than 0."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0839195af36ea54dbc20a631264e4e0fc516850571ce306a1e4e2acdc351064e",
																"typeString": "literal_string \"Amount must be greater than 0.\""
															}
														],
														"id": 4172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1192:7:22",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1192:68:22",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4180,
												"nodeType": "ExpressionStatement",
												"src": "1192:68:22"
											},
											{
												"expression": {
													"id": 4185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4181,
															"name": "stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4084,
															"src": "1271:7:22",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 4183,
														"indexExpression": {
															"id": 4182,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4158,
															"src": "1279:6:22",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1271:15:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 4184,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4160,
														"src": "1290:6:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1271:25:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4186,
												"nodeType": "ExpressionStatement",
												"src": "1271:25:22"
											},
											{
												"expression": {
													"id": 4189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4187,
														"name": "totalStakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4078,
														"src": "1307:11:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 4188,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4160,
														"src": "1322:6:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1307:21:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4190,
												"nodeType": "ExpressionStatement",
												"src": "1307:21:22"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4192,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4158,
															"src": "1353:6:22",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4160,
															"src": "1361:6:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4191,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4103,
														"src": "1344:8:22",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 4194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1344:24:22",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4195,
												"nodeType": "EmitStatement",
												"src": "1339:29:22"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 4196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1386:4:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 4164,
												"id": 4197,
												"nodeType": "Return",
												"src": "1379:11:22"
											}
										]
									},
									"functionSelector": "c2a672e0",
									"id": 4199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "989:7:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4158,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1005:6:22",
												"nodeType": "VariableDeclaration",
												"scope": 4199,
												"src": "997:14:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:22",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4160,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1021:6:22",
												"nodeType": "VariableDeclaration",
												"scope": 4199,
												"src": "1013:14:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "996:32:22"
									},
									"returnParameters": {
										"id": 4164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4199,
												"src": "1045:4:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1045:4:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:6:22"
									},
									"scope": 4200,
									"src": "980:418:22",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 4201,
							"src": "105:2059:22",
							"usedErrors": [],
							"usedEvents": [
								4097,
								4103,
								4109
							]
						}
					],
					"src": "33:2133:22"
				},
				"id": 22
			}
		}
	}
}